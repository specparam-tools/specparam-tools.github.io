Search.setIndex({"docnames": ["api", "auto_examples/analyses/index", "auto_examples/analyses/plot_dev_demo", "auto_examples/analyses/plot_mne_example", "auto_examples/analyses/sg_execution_times", "auto_examples/index", "auto_examples/manage/index", "auto_examples/manage/plot_data_exporting", "auto_examples/manage/plot_failed_fits", "auto_examples/manage/plot_fit_models_3d", "auto_examples/manage/plot_manipulating_models", "auto_examples/manage/sg_execution_times", "auto_examples/models/index", "auto_examples/models/plot_aperiodic_params", "auto_examples/models/plot_data_components", "auto_examples/models/plot_freq_by_freq_error", "auto_examples/models/plot_peak_params", "auto_examples/models/sg_execution_times", "auto_examples/plots/index", "auto_examples/plots/plot_model_components", "auto_examples/plots/plot_models", "auto_examples/plots/plot_power_spectra", "auto_examples/plots/sg_execution_times", "auto_examples/processing/index", "auto_examples/processing/plot_line_noise", "auto_examples/processing/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/sims/index", "auto_examples/sims/plot_sim_params", "auto_examples/sims/plot_simulated_power_spectra", "auto_examples/sims/plot_transforms", "auto_examples/sims/sg_execution_times", "auto_motivations/concepts/index", "auto_motivations/concepts/plot_DoYouEvenOscillate", "auto_motivations/concepts/plot_IfYouFilterTheyWillCome", "auto_motivations/concepts/plot_WigglyPeaks", "auto_motivations/concepts/sg_execution_times", "auto_motivations/index", "auto_motivations/measurements/index", "auto_motivations/measurements/plot_BandByBand", "auto_motivations/measurements/plot_BandRatios", "auto_motivations/measurements/plot_PeriodicAperiodicFeatures", "auto_motivations/measurements/sg_execution_times", "auto_motivations/sg_execution_times", "auto_tutorials/index", "auto_tutorials/plot_01-ModelDescription", "auto_tutorials/plot_02-PSDModel", "auto_tutorials/plot_03-Algorithm", "auto_tutorials/plot_04-ModelObject", "auto_tutorials/plot_05-AperiodicFitting", "auto_tutorials/plot_06-GroupFits", "auto_tutorials/plot_07-TimeModels", "auto_tutorials/plot_08-TroubleShooting", "auto_tutorials/plot_09-FurtherAnalysis", "auto_tutorials/plot_10-Reporting", "auto_tutorials/sg_execution_times", "changelog", "contents", "faq", "generated/fooof.plts.style.check_style_options", "generated/fooof.plts.utils.check_ax", "generated/fooof.plts.utils.recursive_plot", "generated/fooof.plts.utils.save_figure", "generated/specparam.Bands", "generated/specparam.SpectralGroupModel", "generated/specparam.SpectralModel", "generated/specparam.SpectralTimeEventModel", "generated/specparam.SpectralTimeModel", "generated/specparam.analysis.compute_pointwise_error", "generated/specparam.analysis.compute_pointwise_error_group", "generated/specparam.analysis.error.compute_pointwise_error_arr", "generated/specparam.analysis.get_band_peak", "generated/specparam.analysis.get_band_peak_event", "generated/specparam.analysis.get_band_peak_group", "generated/specparam.analysis.periodic.get_band_peak_arr", "generated/specparam.analysis.periodic.get_band_peak_group_arr", "generated/specparam.analysis.periodic.get_highest_peak", "generated/specparam.analysis.periodic.threshold_peaks", "generated/specparam.data.FitResults", "generated/specparam.data.ModelRunModes", "generated/specparam.data.ModelSettings", "generated/specparam.data.SimParams", "generated/specparam.data.SpectrumMetaData", "generated/specparam.fit_models_3d", "generated/specparam.objs.average_group", "generated/specparam.objs.average_reconstructions", "generated/specparam.objs.combine_model_objs", "generated/specparam.objs.compare_model_objs", "generated/specparam.plts.annotate.plot_annotated_model", "generated/specparam.plts.annotate.plot_annotated_peak_search", "generated/specparam.plts.aperiodic.plot_aperiodic_fits", "generated/specparam.plts.aperiodic.plot_aperiodic_params", "generated/specparam.plts.error.plot_spectral_error", "generated/specparam.plts.event.plot_event_model", "generated/specparam.plts.group.plot_group_model", "generated/specparam.plts.model.plot_model", "generated/specparam.plts.periodic.plot_peak_fits", "generated/specparam.plts.periodic.plot_peak_params", "generated/specparam.plts.plot_spectra", "generated/specparam.plts.plot_spectrogram", "generated/specparam.plts.spectra.plot_spectra_shading", "generated/specparam.plts.spectra.plot_spectra_yshade", "generated/specparam.plts.time.plot_time_model", "generated/specparam.sim.params.Stepper", "generated/specparam.sim.params.param_iter", "generated/specparam.sim.params.param_jitter", "generated/specparam.sim.params.param_sampler", "generated/specparam.sim.params.update_sim_ap_params", "generated/specparam.sim.sim_group_power_spectra", "generated/specparam.sim.sim_power_spectrum", "generated/specparam.sim.sim_spectrogram", "generated/specparam.sim.transform.compute_rotation_frequency", "generated/specparam.sim.transform.compute_rotation_offset", "generated/specparam.sim.transform.rotate_sim_spectrum", "generated/specparam.sim.transform.rotate_spectrum", "generated/specparam.sim.transform.translate_sim_spectrum", "generated/specparam.sim.transform.translate_spectrum", "generated/specparam.sim.utils.create_freqs", "generated/specparam.sim.utils.set_random_seed", "generated/specparam.utils.interpolate_spectra", "generated/specparam.utils.interpolate_spectrum", "generated/specparam.utils.io.load_event_model", "generated/specparam.utils.io.load_group_model", "generated/specparam.utils.io.load_model", "generated/specparam.utils.io.load_time_model", "generated/specparam.utils.params.compute_knee_frequency", "generated/specparam.utils.reports.methods_report_info", "generated/specparam.utils.reports.methods_report_text", "generated/specparam.utils.subsample_spectra", "generated/specparam.utils.trim_spectrum", "glossary", "index", "reference", "sg_execution_times", "visualizers"], "filenames": ["api.rst", "auto_examples/analyses/index.rst", "auto_examples/analyses/plot_dev_demo.rst", "auto_examples/analyses/plot_mne_example.rst", "auto_examples/analyses/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/manage/index.rst", "auto_examples/manage/plot_data_exporting.rst", "auto_examples/manage/plot_failed_fits.rst", "auto_examples/manage/plot_fit_models_3d.rst", "auto_examples/manage/plot_manipulating_models.rst", "auto_examples/manage/sg_execution_times.rst", "auto_examples/models/index.rst", "auto_examples/models/plot_aperiodic_params.rst", "auto_examples/models/plot_data_components.rst", "auto_examples/models/plot_freq_by_freq_error.rst", "auto_examples/models/plot_peak_params.rst", "auto_examples/models/sg_execution_times.rst", "auto_examples/plots/index.rst", "auto_examples/plots/plot_model_components.rst", "auto_examples/plots/plot_models.rst", "auto_examples/plots/plot_power_spectra.rst", "auto_examples/plots/sg_execution_times.rst", "auto_examples/processing/index.rst", "auto_examples/processing/plot_line_noise.rst", "auto_examples/processing/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sims/index.rst", "auto_examples/sims/plot_sim_params.rst", "auto_examples/sims/plot_simulated_power_spectra.rst", "auto_examples/sims/plot_transforms.rst", "auto_examples/sims/sg_execution_times.rst", "auto_motivations/concepts/index.rst", "auto_motivations/concepts/plot_DoYouEvenOscillate.rst", "auto_motivations/concepts/plot_IfYouFilterTheyWillCome.rst", "auto_motivations/concepts/plot_WigglyPeaks.rst", "auto_motivations/concepts/sg_execution_times.rst", "auto_motivations/index.rst", "auto_motivations/measurements/index.rst", "auto_motivations/measurements/plot_BandByBand.rst", "auto_motivations/measurements/plot_BandRatios.rst", "auto_motivations/measurements/plot_PeriodicAperiodicFeatures.rst", "auto_motivations/measurements/sg_execution_times.rst", "auto_motivations/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/plot_01-ModelDescription.rst", "auto_tutorials/plot_02-PSDModel.rst", "auto_tutorials/plot_03-Algorithm.rst", "auto_tutorials/plot_04-ModelObject.rst", "auto_tutorials/plot_05-AperiodicFitting.rst", "auto_tutorials/plot_06-GroupFits.rst", "auto_tutorials/plot_07-TimeModels.rst", "auto_tutorials/plot_08-TroubleShooting.rst", "auto_tutorials/plot_09-FurtherAnalysis.rst", "auto_tutorials/plot_10-Reporting.rst", "auto_tutorials/sg_execution_times.rst", "changelog.rst", "contents.rst", "faq.rst", "generated/fooof.plts.style.check_style_options.rst", "generated/fooof.plts.utils.check_ax.rst", "generated/fooof.plts.utils.recursive_plot.rst", "generated/fooof.plts.utils.save_figure.rst", "generated/specparam.Bands.rst", "generated/specparam.SpectralGroupModel.rst", "generated/specparam.SpectralModel.rst", "generated/specparam.SpectralTimeEventModel.rst", "generated/specparam.SpectralTimeModel.rst", "generated/specparam.analysis.compute_pointwise_error.rst", "generated/specparam.analysis.compute_pointwise_error_group.rst", "generated/specparam.analysis.error.compute_pointwise_error_arr.rst", "generated/specparam.analysis.get_band_peak.rst", "generated/specparam.analysis.get_band_peak_event.rst", "generated/specparam.analysis.get_band_peak_group.rst", "generated/specparam.analysis.periodic.get_band_peak_arr.rst", "generated/specparam.analysis.periodic.get_band_peak_group_arr.rst", "generated/specparam.analysis.periodic.get_highest_peak.rst", "generated/specparam.analysis.periodic.threshold_peaks.rst", "generated/specparam.data.FitResults.rst", "generated/specparam.data.ModelRunModes.rst", "generated/specparam.data.ModelSettings.rst", "generated/specparam.data.SimParams.rst", "generated/specparam.data.SpectrumMetaData.rst", "generated/specparam.fit_models_3d.rst", "generated/specparam.objs.average_group.rst", "generated/specparam.objs.average_reconstructions.rst", "generated/specparam.objs.combine_model_objs.rst", "generated/specparam.objs.compare_model_objs.rst", "generated/specparam.plts.annotate.plot_annotated_model.rst", "generated/specparam.plts.annotate.plot_annotated_peak_search.rst", "generated/specparam.plts.aperiodic.plot_aperiodic_fits.rst", "generated/specparam.plts.aperiodic.plot_aperiodic_params.rst", "generated/specparam.plts.error.plot_spectral_error.rst", "generated/specparam.plts.event.plot_event_model.rst", "generated/specparam.plts.group.plot_group_model.rst", "generated/specparam.plts.model.plot_model.rst", "generated/specparam.plts.periodic.plot_peak_fits.rst", "generated/specparam.plts.periodic.plot_peak_params.rst", "generated/specparam.plts.plot_spectra.rst", "generated/specparam.plts.plot_spectrogram.rst", "generated/specparam.plts.spectra.plot_spectra_shading.rst", "generated/specparam.plts.spectra.plot_spectra_yshade.rst", "generated/specparam.plts.time.plot_time_model.rst", "generated/specparam.sim.params.Stepper.rst", "generated/specparam.sim.params.param_iter.rst", "generated/specparam.sim.params.param_jitter.rst", "generated/specparam.sim.params.param_sampler.rst", "generated/specparam.sim.params.update_sim_ap_params.rst", "generated/specparam.sim.sim_group_power_spectra.rst", "generated/specparam.sim.sim_power_spectrum.rst", "generated/specparam.sim.sim_spectrogram.rst", "generated/specparam.sim.transform.compute_rotation_frequency.rst", "generated/specparam.sim.transform.compute_rotation_offset.rst", "generated/specparam.sim.transform.rotate_sim_spectrum.rst", "generated/specparam.sim.transform.rotate_spectrum.rst", "generated/specparam.sim.transform.translate_sim_spectrum.rst", "generated/specparam.sim.transform.translate_spectrum.rst", "generated/specparam.sim.utils.create_freqs.rst", "generated/specparam.sim.utils.set_random_seed.rst", "generated/specparam.utils.interpolate_spectra.rst", "generated/specparam.utils.interpolate_spectrum.rst", "generated/specparam.utils.io.load_event_model.rst", "generated/specparam.utils.io.load_group_model.rst", "generated/specparam.utils.io.load_model.rst", "generated/specparam.utils.io.load_time_model.rst", "generated/specparam.utils.params.compute_knee_frequency.rst", "generated/specparam.utils.reports.methods_report_info.rst", "generated/specparam.utils.reports.methods_report_text.rst", "generated/specparam.utils.subsample_spectra.rst", "generated/specparam.utils.trim_spectrum.rst", "glossary.rst", "index.rst", "reference.rst", "sg_execution_times.rst", "visualizers.rst"], "titles": ["API Documentation", "Analyses", "Developmental Data Demo", "Topographical Analyses with MNE", "Computation times", "Examples", "Managing Objects", "Exporting Model Results", "Failed Model Fits", "Fitting Power Spectrum Models Across 3D Arrays", "Manipulating Objects", "Computation times", "Models &amp; Parameters", "Aperiodic Parameters", "Exploring Data Components", "Frequency-by-Frequency Errors", "Periodic Parameters", "Computation times", "Plotting", "Plot Model Components", "Plot Power Spectrum Models", "Plot Power Spectra", "Computation times", "Processing", "Dealing with Line Noise", "Computation times", "Computation times", "Simulations", "Simulation Parameters", "Simulating Neural Power Spectra", "Transforming Power Spectra", "Computation times", "Concepts", "Rhythmicity of Time Series", "Finding \u2018Oscillations\u2019 With Filters", "\u2018Oscillations\u2019 as Peaks", "Computation times", "Motivations", "Measurements", "Band-by-Band", "Band Ratio Measures", "Conflating Periodic &amp; Aperiodic Changes", "Computation times", "Computation times", "Tutorial", "01: Model Description", "02: Fitting Power Spectrum Models", "03: Fitting Algorithm", "04: Exploring the model object", "05: Aperiodic Component Fitting", "06: Fitting group of spectra", "06: Fitting Models over Time", "07: Tuning &amp; Troubleshooting", "08: Further Analysis", "09: Reporting &amp; Referencing", "Computation times", "Code Changelog", "Table of Contents", "Frequently Asked Questions", "fooof.plts.style.check_style_options", "fooof.plts.utils.check_ax", "fooof.plts.utils.recursive_plot", "fooof.plts.utils.save_figure", "specparam.Bands", "specparam.SpectralGroupModel", "specparam.SpectralModel", "specparam.SpectralTimeEventModel", "specparam.SpectralTimeModel", "specparam.analysis.compute_pointwise_error", "specparam.analysis.compute_pointwise_error_group", "specparam.analysis.error.compute_pointwise_error_arr", "specparam.analysis.get_band_peak", "specparam.analysis.get_band_peak_event", "specparam.analysis.get_band_peak_group", "specparam.analysis.periodic.get_band_peak_arr", "specparam.analysis.periodic.get_band_peak_group_arr", "specparam.analysis.periodic.get_highest_peak", "specparam.analysis.periodic.threshold_peaks", "specparam.data.FitResults", "specparam.data.ModelRunModes", "specparam.data.ModelSettings", "specparam.data.SimParams", "specparam.data.SpectrumMetaData", "specparam.fit_models_3d", "specparam.objs.average_group", "specparam.objs.average_reconstructions", "specparam.objs.combine_model_objs", "specparam.objs.compare_model_objs", "specparam.plts.annotate.plot_annotated_model", "specparam.plts.annotate.plot_annotated_peak_search", "specparam.plts.aperiodic.plot_aperiodic_fits", "specparam.plts.aperiodic.plot_aperiodic_params", "specparam.plts.error.plot_spectral_error", "specparam.plts.event.plot_event_model", "specparam.plts.group.plot_group_model", "specparam.plts.model.plot_model", "specparam.plts.periodic.plot_peak_fits", "specparam.plts.periodic.plot_peak_params", "specparam.plts.plot_spectra", "specparam.plts.plot_spectrogram", "specparam.plts.spectra.plot_spectra_shading", "specparam.plts.spectra.plot_spectra_yshade", "specparam.plts.time.plot_time_model", "specparam.sim.params.Stepper", "specparam.sim.params.param_iter", "specparam.sim.params.param_jitter", "specparam.sim.params.param_sampler", "specparam.sim.params.update_sim_ap_params", "specparam.sim.sim_group_power_spectra", "specparam.sim.sim_power_spectrum", "specparam.sim.sim_spectrogram", "specparam.sim.transform.compute_rotation_frequency", "specparam.sim.transform.compute_rotation_offset", "specparam.sim.transform.rotate_sim_spectrum", "specparam.sim.transform.rotate_spectrum", "specparam.sim.transform.translate_sim_spectrum", "specparam.sim.transform.translate_spectrum", "specparam.sim.utils.create_freqs", "specparam.sim.utils.set_random_seed", "specparam.utils.interpolate_spectra", "specparam.utils.interpolate_spectrum", "specparam.utils.io.load_event_model", "specparam.utils.io.load_group_model", "specparam.utils.io.load_model", "specparam.utils.io.load_time_model", "specparam.utils.params.compute_knee_frequency", "specparam.utils.reports.methods_report_info", "specparam.utils.reports.methods_report_text", "specparam.utils.subsample_spectra", "specparam.utils.trim_spectrum", "Glossary", "Spectral Parameterization", "Reference and Reporting Information", "Computation times", "Visualizers"], "terms": {"refer": [0, 2, 3, 33, 45, 50, 54, 56, 57, 125, 130], "modul": [0, 2, 3, 5, 21, 29, 44, 45, 46, 47, 48, 52, 53, 56, 57, 58, 64, 65, 66, 67, 130, 131], "fit": [0, 5, 6, 7, 11, 12, 13, 16, 20, 30, 39, 44, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 78, 80, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 96, 98, 99, 102, 106, 108, 110, 117, 122, 123, 130, 131, 132, 133], "parameter": [0, 1, 3, 5, 13, 15, 16, 19, 23, 24, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 45, 46, 47, 50, 53, 54, 56, 57, 78, 130, 132, 134], "neural": [0, 1, 3, 5, 16, 19, 24, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 45, 46, 47, 49, 51, 53, 54, 56, 57, 81, 98, 108, 109, 130, 131, 132, 133], "The": [0, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 28, 29, 30, 35, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 63, 64, 65, 66, 67, 70, 73, 75, 76, 78, 90, 95, 96, 97, 104, 105, 108, 109, 110, 111, 112, 119, 120, 125, 128, 130, 131, 132, 134], "spectralmodel": [0, 2, 7, 9, 13, 14, 15, 16, 20, 21, 24, 30, 39, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 64, 66, 67, 68, 71, 84, 86, 87, 88, 89, 95, 123, 126, 127, 131, 132], "i": [0, 2, 3, 7, 8, 9, 10, 13, 14, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 95, 96, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 119, 120, 123, 125, 126, 127, 128, 130, 132, 134], "can": [0, 2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 65, 73, 77, 95, 98, 100, 101, 108, 109, 111, 130, 131, 132], "us": [0, 2, 3, 5, 6, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 85, 101, 119, 130, 132], "individu": [0, 9, 10, 16, 20, 34, 39, 46, 47, 51, 52, 53, 58, 64, 66, 73, 75, 77, 90, 96, 131], "spectralgroupmodel": [0, 2, 3, 7, 8, 9, 13, 14, 15, 19, 52, 54, 56, 67, 69, 73, 83, 84, 85, 86, 87, 94, 122, 126, 127, 131, 132], "allow": [0, 7, 8, 14, 15, 21, 24, 39, 45, 51, 52, 56, 58, 131], "organ": [0, 2, 5, 6, 7, 10, 37, 46, 47, 50, 51, 53, 57, 61, 64, 65, 66, 67, 72, 99, 105, 121, 124], "across": [0, 2, 3, 5, 6, 7, 8, 11, 13, 16, 20, 21, 28, 29, 30, 33, 34, 35, 39, 40, 45, 49, 50, 51, 53, 54, 56, 58, 64, 65, 66, 67, 68, 69, 83, 84, 85, 86, 87, 90, 92, 93, 96, 97, 102, 103, 104, 106, 108, 109, 110, 117, 119, 122, 130, 131, 132, 133], "manipul": [0, 5, 6, 9, 11, 30, 40, 56, 63, 64, 65, 84, 86, 87, 109, 133], "examin": [0, 2, 7, 10, 13, 14, 15, 21, 33, 34, 35, 39, 40, 41, 50, 51, 52, 53, 58], "frequenc": [0, 3, 5, 9, 10, 12, 16, 17, 19, 20, 21, 24, 28, 29, 34, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 82, 83, 84, 85, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 125, 129, 130, 131, 132, 133], "an": [0, 3, 7, 8, 9, 10, 13, 15, 16, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 47, 48, 50, 51, 52, 53, 54, 56, 58, 60, 61, 64, 65, 66, 67, 71, 72, 73, 75, 77, 88, 103, 108, 109, 111, 113, 114, 115, 116, 121, 125, 126, 127, 130, 131, 132], "handl": [0, 51], "definit": [0, 3, 10, 14, 19, 29, 30, 33, 34, 39, 40, 51, 53, 56, 58, 63, 64, 65, 66, 67, 105, 106, 107, 108, 109, 110, 113, 115, 121, 124], "store": [0, 2, 8, 9, 14, 15, 19, 28, 29, 45, 46, 47, 48, 50, 51, 53, 63, 64, 65, 66, 67, 107, 113, 115, 131], "set": [0, 2, 3, 7, 8, 10, 13, 16, 21, 24, 28, 29, 30, 33, 34, 35, 40, 41, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 61, 64, 65, 66, 67, 76, 77, 80, 83, 86, 87, 88, 89, 90, 91, 96, 103, 105, 106, 108, 109, 110, 118, 119, 120, 126, 127, 130, 131, 132], "metadata": [0, 82], "spectrum": [0, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 21, 22, 24, 28, 29, 30, 33, 35, 39, 40, 41, 44, 48, 49, 50, 51, 52, 54, 55, 58, 64, 65, 66, 67, 78, 81, 82, 83, 86, 88, 89, 95, 101, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 122, 125, 129, 130, 131, 132, 133], "about": [0, 2, 8, 28, 30, 37, 40, 50, 52, 53, 58, 82, 113, 114, 131], "follow": [0, 2, 3, 7, 14, 19, 24, 28, 29, 30, 46, 48, 52, 54, 56, 58, 131, 132], "take": [0, 2, 3, 9, 10, 19, 21, 28, 29, 30, 33, 47, 48, 49, 50, 51, 53, 54, 64, 65, 66, 67, 80, 90, 95, 96, 119, 120], "directli": [0, 10, 20, 21, 29, 30, 48, 49, 50], "arrai": [0, 2, 3, 5, 6, 10, 11, 13, 21, 33, 40, 45, 46, 50, 51, 52, 53, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 86, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 106, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 122, 128, 129, 131, 133], "oper": [0, 50, 53, 58, 64, 65, 66, 67], "which": [0, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 30, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 61, 64, 65, 66, 67, 71, 72, 73, 74, 75, 77, 80, 87, 88, 90, 91, 92, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 111, 113, 114, 119, 120, 125, 128, 130, 132], "mai": [0, 2, 3, 7, 9, 10, 13, 14, 16, 19, 20, 21, 24, 29, 30, 37, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 64, 65, 66, 67, 131], "more": [0, 2, 7, 8, 9, 10, 13, 15, 16, 20, 21, 29, 30, 33, 35, 39, 40, 45, 46, 47, 48, 49, 50, 52, 53, 56, 58, 64, 66, 67, 119, 120, 131], "custom": [0, 2, 3, 20, 21, 46], "work": [0, 3, 5, 6, 9, 10, 15, 24, 30, 37, 38, 39, 44, 45, 46, 49, 50, 52, 53, 54, 56, 58, 76, 131, 132], "flow": [0, 52], "typic": [0, 2, 8, 9, 10, 24, 33, 34, 39, 40, 45, 49, 52, 53, 58, 130], "case": [0, 2, 3, 7, 9, 10, 15, 19, 20, 21, 24, 30, 33, 34, 35, 39, 41, 49, 52, 53, 58, 125, 130, 131], "peak": [0, 2, 3, 7, 8, 9, 10, 20, 21, 28, 29, 32, 33, 36, 37, 39, 40, 41, 45, 49, 50, 51, 54, 56, 57, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 80, 84, 89, 90, 95, 96, 97, 103, 104, 105, 106, 108, 109, 119, 120, 121, 124, 130, 131, 132, 133], "spectrogram": [0, 58, 66, 67, 99, 110], "visual": [0, 2, 3, 15, 19, 20, 21, 24, 28, 30, 33, 35, 39, 41, 47, 50, 51, 52, 53, 56, 57, 58, 64, 66, 67, 93, 94, 102, 131], "shade": [0, 2, 15, 20, 39, 40, 41, 45, 51, 65, 90, 92, 95, 96, 100, 101], "region": [0, 9, 10, 15, 20, 34, 45, 58, 100, 101, 119, 120, 125], "aperiod": [0, 2, 5, 9, 12, 15, 16, 17, 21, 24, 28, 29, 30, 32, 35, 37, 38, 42, 44, 46, 50, 51, 52, 54, 55, 56, 57, 63, 64, 65, 66, 67, 78, 80, 81, 88, 95, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 125, 129, 130, 131, 132, 133], "from": [0, 2, 3, 4, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 83, 86, 88, 89, 93, 94, 95, 102, 103, 104, 105, 106, 108, 109, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133], "note": [0, 2, 3, 7, 8, 9, 13, 15, 16, 20, 21, 24, 29, 30, 33, 34, 35, 39, 40, 41, 47, 48, 50, 51, 52, 54, 57, 58, 61, 64, 65, 66, 67, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 95, 100, 105, 108, 109, 110, 111, 113, 114, 119, 120, 125, 126, 127, 129, 131], "ar": [0, 2, 3, 5, 7, 8, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 64, 65, 66, 67, 68, 69, 77, 83, 84, 85, 86, 87, 88, 95, 107, 108, 109, 110, 111, 115, 116, 119, 120, 125, 130, 131, 132, 134], "same": [0, 2, 7, 9, 10, 13, 15, 21, 29, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 54, 56, 58, 66, 105, 108, 109, 111, 131], "call": [0, 2, 8, 9, 20, 21, 29, 30, 45, 46, 48, 50, 52, 56, 57, 61, 64, 65, 66, 67, 95, 131, 132], "describ": [0, 3, 16, 41, 45, 47, 48, 50, 56, 58, 65, 95, 108, 109, 130, 131, 132], "process": [0, 2, 3, 10, 14, 16, 24, 25, 32, 33, 37, 45, 47, 49, 57, 58, 64, 108, 109, 131, 133], "relat": [0, 2, 5, 13, 16, 23, 32, 37, 38, 39, 40, 41, 48, 50, 54, 56, 58, 64, 65, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 108, 109, 130, 131, 132, 134], "utili": 0, "creat": [0, 2, 3, 7, 8, 9, 10, 14, 15, 16, 20, 21, 24, 28, 30, 33, 34, 35, 39, 40, 41, 45, 49, 51, 52, 53, 54, 60, 104, 105, 106, 108, 109, 113, 114, 117, 131, 132, 134], "exampl": [1, 3, 4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 50, 51, 52, 55, 56, 57, 58, 92, 95, 119, 131, 133], "involv": [1, 5, 40, 52, 131], "power": [1, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 27, 28, 31, 32, 33, 34, 37, 38, 39, 40, 44, 47, 48, 49, 50, 51, 54, 55, 56, 57, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 86, 88, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 128, 129, 130, 131, 132, 133], "spectra": [1, 5, 7, 8, 10, 13, 14, 15, 16, 18, 19, 22, 24, 27, 28, 31, 32, 33, 34, 37, 38, 40, 44, 47, 48, 49, 51, 53, 54, 55, 56, 57, 64, 65, 66, 67, 78, 81, 83, 85, 93, 94, 98, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 128, 129, 130, 131, 132, 133], "development": [1, 4, 5, 63, 64, 65, 68, 69, 73, 78, 80, 90, 91, 96, 97, 98, 128, 129, 133], "data": [1, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 20, 21, 23, 24, 28, 30, 32, 33, 35, 37, 39, 45, 46, 49, 50, 51, 52, 54, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 88, 89, 90, 91, 93, 94, 96, 97, 98, 102, 103, 108, 109, 113, 114, 119, 120, 121, 122, 123, 124, 128, 129, 130, 131, 132, 133], "demo": [1, 4, 5, 63, 64, 65, 68, 69, 73, 78, 80, 90, 91, 96, 97, 98, 128, 129, 133], "topograph": [1, 4, 5, 63, 64, 73, 98, 133], "mne": [1, 4, 5, 63, 64, 73, 98, 133], "go": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "end": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 64, 65, 66, 67, 103], "download": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 131], "full": [2, 3, 7, 8, 9, 10, 13, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 64, 65, 66, 67, 78, 131, 132], "code": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 111, 125, 131, 132, 134], "analysi": [2, 3, 7, 9, 13, 15, 19, 33, 34, 39, 41, 44, 50, 52, 54, 55, 56, 58, 63, 64, 65, 106, 108, 118, 131, 133], "appli": [2, 3, 9, 24, 28, 29, 30, 34, 40, 48, 49, 50, 53, 56, 57, 61, 66, 67, 71, 72, 73, 74, 75, 77, 93, 102, 111, 112, 113, 114, 119, 120, 130, 131, 132], "demonstr": [2, 5, 7, 16, 18, 35, 40, 41, 44, 46, 47, 52, 53, 58, 131, 132], "best": [2, 16, 20, 58], "practic": [2, 24, 32, 37, 45, 51, 58], "thi": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 64, 65, 66, 67, 73, 75, 76, 77, 78, 79, 80, 81, 82, 92, 95, 100, 101, 108, 109, 110, 111, 113, 114, 119, 120, 125, 129, 130, 131, 132, 134], "adapt": [2, 41], "If": [2, 3, 7, 8, 9, 10, 13, 14, 15, 19, 29, 30, 34, 45, 46, 47, 48, 49, 50, 52, 53, 57, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 83, 84, 86, 88, 90, 93, 94, 95, 96, 102, 104, 106, 107, 108, 109, 113, 114, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132], "you": [2, 3, 7, 8, 9, 10, 13, 14, 15, 19, 20, 21, 24, 28, 29, 30, 34, 39, 40, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 73, 108, 109, 111, 131, 132], "wish": [2, 10, 14, 20, 30, 41, 48, 73, 131], "guidelin": [2, 58, 131], "pleas": [2, 52, 53, 131, 132], "cite": [2, 57, 131, 132], "associ": [2, 21, 33, 45, 48, 52, 131], "paper": [2, 39, 40, 41, 45, 131, 132], "how": [2, 3, 5, 6, 8, 9, 10, 15, 16, 20, 23, 24, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 64, 65, 66, 67, 111, 121, 124, 130, 131, 132], "why": [2, 8, 24, 32, 33, 37, 52, 53, 56, 57, 131, 134], "brendan": 2, "ostlund": 2, "thoma": 2, "donoghu": [2, 131, 132], "berenic": 2, "anaya": 2, "kellei": 2, "e": [2, 49, 58, 65, 131], "gunther": 2, "sarah": 2, "l": [2, 45, 125], "karaluna": 2, "bradlei": 2, "voytek": [2, 58, 125, 131, 132], "korali": 2, "p\u00e9rez": 2, "edgar": 2, "link": [2, 131, 132], "http": [2, 52, 125, 131, 132], "doi": [2, 58, 125, 131, 132], "org": [2, 125, 131, 132], "10": [2, 7, 8, 9, 10, 13, 14, 15, 16, 20, 21, 24, 28, 29, 30, 33, 35, 39, 40, 41, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 105, 106, 108, 109, 111, 113, 114, 115, 116, 119, 120, 125, 128, 129, 131, 132], "1016": [2, 58], "j": [2, 58], "dcn": 2, "2022": 2, "101073": 2, "import": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 83, 108, 113, 114, 115, 116, 119, 120, 128, 129, 131, 132], "some": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 130, 131, 132], "standard": [2, 15, 16, 46, 47, 48, 50, 51, 52, 58, 64, 65, 66, 67, 78, 80, 92, 101, 105, 108, 109], "librari": 2, "pathlib": 2, "path": [2, 3, 9, 62, 64, 65, 66, 67, 121, 122, 123, 124], "gener": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 64, 65, 66, 67, 103, 104, 105, 106, 108, 109, 110, 117, 118, 125], "scientif": 2, "python": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 130, 131, 132], "numpi": [2, 3, 9, 15, 30, 33, 34, 39, 40, 41, 52, 53, 131], "np": [2, 3, 9, 15, 29, 30, 33, 34, 39, 40, 41, 45, 52, 53, 73], "panda": [2, 7, 48, 64, 65, 66, 67, 131], "pd": [2, 64, 65, 66, 67], "matplotlib": [2, 3, 20, 21, 30, 34, 39, 40, 41, 47, 60, 61, 65, 88, 90, 91, 92, 95, 96, 97, 98, 100, 101, 131], "pyplot": [2, 3, 20, 21, 30, 34, 39, 40, 41, 47], "plt": [2, 3, 13, 14, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 47, 48, 51, 52], "object": [2, 3, 8, 11, 13, 14, 15, 16, 19, 21, 24, 28, 29, 30, 34, 39, 44, 45, 47, 49, 51, 52, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 102, 103, 104, 107, 108, 109, 113, 115, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133], "util": [2, 3, 7, 9, 10, 13, 15, 16, 19, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 132], "plot": [2, 9, 10, 13, 14, 15, 16, 22, 24, 28, 29, 30, 33, 34, 35, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 130, 131, 133], "function": [2, 3, 5, 7, 9, 10, 13, 14, 15, 18, 19, 20, 21, 24, 28, 29, 30, 33, 40, 41, 45, 46, 47, 48, 50, 52, 53, 54, 56, 57, 58, 59, 61, 62, 68, 69, 73, 75, 76, 77, 84, 85, 100, 108, 109, 110, 113, 114, 119, 120, 125, 129, 130, 131, 132], "band": [2, 3, 10, 19, 34, 37, 38, 41, 42, 45, 53, 56, 57, 64, 65, 66, 67, 71, 72, 73, 74, 75, 84, 100, 109, 118, 121, 124, 129, 131, 133], "get_band_peak_group": [2, 3, 19, 53, 56], "trim_spectrum": [2, 24, 39, 40, 41], "subsample_spectra": 2, "sim": [2, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 45, 47, 51, 52, 53, 54, 56, 119, 120, 128, 129, 133], "gen": [2, 47], "gen_aperiod": [2, 47], "modelset": [2, 48, 56, 64, 65, 66, 67], "templat": [2, 30, 39, 46, 54, 57, 127], "plot_hist": 2, "plot_spectra": [2, 3, 13, 14, 16, 21, 24, 28, 29, 30, 45, 47, 100, 101], "period": [2, 5, 10, 12, 17, 28, 29, 32, 34, 35, 37, 38, 42, 47, 48, 51, 54, 57, 63, 64, 65, 66, 67, 81, 88, 100, 108, 109, 110, 118, 129, 130, 131, 132, 133], "plot_peak_fit": [2, 19], "plot_peak_param": [2, 16, 17, 19, 133], "plot_aperiodic_param": [2, 13, 17, 19, 133], "plot_aperiodic_fit": [2, 19], "compute_pointwise_error": [2, 15, 56], "compute_pointwise_error_group": [2, 15, 56], "helper": [2, 3, 28, 40, 41, 48, 51, 52, 54], "fetch_example_data": [2, 56], "first": [2, 3, 9, 10, 13, 14, 15, 16, 19, 21, 28, 30, 34, 39, 41, 45, 47, 52, 53, 64, 65, 66, 67, 121, 124, 131], "we": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 21, 24, 28, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 108, 109, 111, 130, 131, 132], "url": 2, "where": [2, 3, 8, 9, 15, 20, 24, 33, 35, 39, 41, 45, 46, 48, 49, 58, 62, 64, 65, 66, 67, 86, 111, 112, 113, 114, 115, 116, 119, 120, 128, 130, 132], "avail": [2, 3, 5, 7, 9, 10, 14, 19, 20, 21, 39, 40, 46, 47, 48, 50, 54, 56, 58, 64, 65, 66, 67, 68, 69, 83, 84, 88, 89, 93, 94, 102, 123, 126, 127, 131, 132], "data_url": 2, "raw": [2, 3, 64, 65, 66, 67], "githubusercont": 2, "com": [2, 52, 125, 131], "fooof": [2, 52, 57], "tool": [2, 3, 21, 33, 39, 40, 41, 52, 54, 58, 131, 132], "developmentaldemo": 2, "main": [2, 7, 48, 50, 51, 53, 56, 131], "load": [2, 9, 46, 47, 48, 49, 56, 58, 64, 65, 66, 67, 121, 122, 123, 124, 131], "data_path": [2, 3], "collect": [2, 7, 9, 24, 28, 33, 34, 40, 41, 46, 50, 51, 54, 58, 64, 66, 83, 126, 132], "freq": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 35, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 64, 65, 66, 67, 79, 83, 85, 92, 95, 98, 99, 100, 101, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 128, 129, 131], "csv": 2, "indv": 2, "For": [2, 3, 8, 9, 10, 19, 20, 28, 29, 30, 33, 34, 35, 40, 41, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 64, 65, 66, 67, 98, 100, 101, 105, 131], "part": [2, 20, 24, 35, 41, 47, 48, 58, 130], "start": [2, 3, 9, 13, 15, 21, 28, 29, 30, 33, 35, 40, 41, 45, 47, 51, 52, 53, 56, 58, 103, 131], "psd": [2, 3], "To": [2, 3, 8, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 64, 73, 75, 111, 119, 120, 131, 132], "do": [2, 3, 7, 8, 9, 10, 13, 14, 16, 19, 20, 21, 24, 28, 30, 33, 34, 35, 39, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 64, 73, 75, 113, 114, 131], "so": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 28, 29, 30, 34, 35, 39, 40, 41, 45, 47, 48, 50, 51, 52, 53, 56, 58, 73, 75, 108, 109, 119, 120, 130, 131], "file": [2, 4, 9, 11, 17, 22, 25, 26, 31, 36, 42, 43, 46, 47, 48, 49, 50, 52, 53, 55, 56, 62, 64, 65, 66, 67, 121, 122, 123, 124, 131, 133], "includ": [2, 7, 9, 10, 13, 14, 19, 20, 21, 24, 28, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 64, 65, 66, 67, 78, 100, 101, 104, 130, 131, 132, 134], "contain": [2, 7, 10, 29, 33, 34, 41, 45, 46, 47, 48, 50, 56, 58, 64, 65, 66, 67, 68, 69, 84, 93, 94, 95, 102, 131], "vector": [2, 35, 117], "indvpsd": 2, "valu": [2, 8, 9, 13, 19, 21, 24, 28, 29, 30, 33, 39, 40, 41, 45, 46, 48, 49, 50, 51, 52, 58, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 83, 85, 88, 91, 92, 95, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 129, 130, 131, 132], "ravel": 2, "read_csv": 2, "1": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 25, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 49, 50, 51, 52, 53, 54, 57, 64, 66, 67, 73, 83, 101, 104, 105, 106, 108, 109, 113, 114, 115, 116, 117, 119, 120, 125, 128, 129, 130, 131, 132], "101": 2, "now": [2, 3, 8, 10, 13, 16, 19, 24, 33, 34, 39, 40, 41, 45, 47, 48, 49, 50, 51, 52, 56, 58, 131], "have": [2, 3, 8, 9, 10, 15, 19, 20, 24, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 64, 66, 67, 86, 93, 94, 102, 108, 109, 130, 131, 132], "our": [2, 3, 9, 10, 15, 19, 21, 28, 30, 34, 39, 40, 41, 45, 48, 51, 132], "defin": [2, 3, 9, 10, 13, 14, 16, 19, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 48, 50, 52, 53, 56, 58, 60, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 86, 95, 98, 100, 103, 104, 114, 125, 131, 132], "peak_width": 2, "8": [2, 3, 7, 8, 13, 19, 21, 28, 29, 34, 39, 40, 41, 45, 47, 48, 49, 50, 52, 53, 63, 103, 104, 131], "peak_width_limit": [2, 3, 9, 47, 48, 49, 50, 52, 53, 54, 64, 65, 66, 67, 80, 83, 131], "n_peak": [2, 74, 75, 76, 77, 108, 109, 110], "6": [2, 3, 8, 9, 21, 39, 40, 41, 48, 49, 50, 52, 53, 54, 58, 83, 131], "max_n_peak": [2, 3, 8, 10, 47, 48, 50, 52, 53, 54, 64, 65, 66, 67, 80, 131], "peak_height": 2, "0": [2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 73, 83, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 128, 129, 131, 132, 133], "min_peak_height": [2, 3, 8, 9, 13, 15, 16, 45, 47, 48, 50, 52, 53, 54, 56, 64, 65, 66, 67, 80, 83, 131], "rang": [2, 3, 9, 16, 19, 20, 21, 24, 28, 29, 34, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 57, 64, 65, 66, 67, 71, 72, 73, 74, 75, 82, 83, 90, 95, 96, 97, 98, 103, 104, 108, 109, 110, 117, 119, 120, 129, 131, 132], "psd_rang": 2, "3": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 22, 24, 28, 29, 30, 31, 36, 39, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 58, 73, 74, 75, 76, 77, 83, 108, 109, 110, 119, 120, 129, 131], "40": [2, 3, 9, 13, 16, 21, 28, 29, 30, 39, 45, 46, 47, 48, 49, 50, 53, 58, 131], "initi": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 24, 30, 39, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 63, 64, 65, 66, 67, 83, 103, 131], "fm": [2, 7, 13, 14, 15, 16, 20, 24, 46, 47, 48, 49, 50, 52, 53, 54, 131], "verbos": [2, 3, 7, 8, 15, 19, 20, 24, 30, 39, 45, 53, 64, 65, 66, 67], "fals": [2, 3, 7, 13, 15, 16, 19, 20, 24, 29, 30, 39, 40, 41, 45, 47, 53, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 88, 90, 92, 95, 96, 98, 100, 101, 108, 109, 110, 126, 128], "over": [2, 13, 20, 33, 44, 45, 46, 48, 49, 50, 52, 55, 58, 63, 64, 65, 66, 67, 99, 104, 110, 130, 133], "hz": [2, 9, 16, 21, 24, 35, 39, 46, 47, 48, 49, 50, 51, 52, 54, 58, 63, 64, 65, 66, 67, 80, 108, 109, 110, 112, 113, 114, 125, 132], "report": [2, 16, 24, 39, 44, 49, 50, 51, 55, 57, 58, 64, 65, 66, 67, 108, 109, 131, 133], "wa": [2, 7, 8, 9, 16, 24, 39, 41, 45, 46, 47, 49, 50, 51, 52, 54, 56, 58, 73, 75, 109, 131, 132], "run": [2, 3, 7, 8, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 64, 65, 66, 67, 79, 83, 131], "resolut": [2, 9, 16, 24, 29, 46, 47, 48, 49, 50, 51, 52, 54, 58, 64, 65, 66, 67, 82, 108, 109, 110, 117], "50": [2, 7, 8, 10, 13, 14, 15, 19, 20, 24, 29, 30, 34, 39, 46, 50, 51, 52, 54, 58, 106, 108, 109, 113, 114, 115, 116, 117, 128, 129], "paramet": [2, 3, 7, 8, 9, 15, 17, 20, 21, 24, 27, 31, 40, 41, 45, 47, 48, 50, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "offset": [2, 7, 16, 19, 24, 29, 41, 45, 46, 47, 48, 49, 50, 52, 64, 65, 66, 67, 78, 90, 91, 105, 107, 108, 109, 112, 115, 116, 130, 134], "expon": [2, 3, 7, 9, 16, 19, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 56, 64, 65, 66, 67, 78, 91, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 125, 130, 134], "2": [2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 39, 40, 41, 45, 46, 49, 50, 51, 52, 53, 54, 57, 58, 64, 65, 66, 67, 104, 106, 108, 109, 119, 120, 125, 131], "1629": 2, "9838": 2, "were": [2, 8, 9, 10, 15, 16, 20, 24, 28, 29, 39, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 64, 65, 66, 67, 128, 131, 132], "found": [2, 16, 24, 29, 39, 46, 47, 49, 50, 52, 53, 71, 72, 74, 131], "cf": [2, 16, 24, 28, 29, 46, 47, 48, 49, 50, 51, 52, 53, 64, 65, 66, 67, 71, 73, 74, 75, 76, 78, 96, 97, 130], "24": [2, 29, 39, 50], "pw": [2, 16, 24, 29, 46, 47, 48, 49, 50, 51, 52, 53, 56, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 96, 97, 130], "393": [2, 29, 31, 133], "bw": [2, 16, 24, 29, 46, 47, 48, 49, 50, 51, 52, 53, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 96, 97, 130], "38": [2, 50, 52], "19": [2, 40, 50, 52, 131], "57": [2, 24, 52], "372": 2, "good": [2, 8, 9, 10, 15, 16, 24, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 65, 132], "metric": [2, 9, 16, 24, 46, 47, 48, 49, 50, 52, 65], "r": [2, 16, 24, 46, 47, 48, 49, 50, 52, 65, 78, 100, 125, 131, 132], "9891": 2, "0583": 2, "As": [2, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 24, 30, 33, 34, 41, 45, 46, 47, 50, 51, 56, 58, 64, 65, 66, 67, 78, 132], "remind": [2, 9, 46], "save": [2, 9, 20, 52, 57, 62, 64, 65, 66, 67, 131], "save_report": [2, 48, 50, 52, 64, 65, 66, 67, 131], "method": [2, 3, 7, 10, 14, 20, 21, 35, 37, 38, 46, 47, 50, 51, 52, 54, 56, 57, 63, 64, 65, 66, 67, 84, 103, 126, 127, 131], "indv_demo": 2, "file_path": [2, 9, 20, 48, 52, 62, 64, 65, 66, 67, 121, 122, 123, 124], "output_path": 2, "all": [2, 3, 5, 8, 9, 10, 15, 16, 19, 20, 29, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 83, 108, 109, 130, 131, 132, 133], "inform": [2, 8, 9, 10, 29, 33, 34, 45, 48, 50, 52, 53, 56, 57, 58, 64, 65, 66, 67, 82, 126, 127, 131], "attribut": [2, 8, 46, 50, 51, 56, 63, 64, 65, 66, 67, 71, 72, 73, 78, 79, 80, 81, 82, 87, 103], "learn": [2, 46, 131], "trail": [2, 46, 48], "underscor": [2, 46, 47, 48], "print": [2, 8, 9, 10, 13, 15, 28, 29, 30, 39, 40, 41, 46, 47, 48, 50, 51, 52, 53, 54, 64, 65, 66, 67, 126, 127, 131, 132], "n": [2, 10, 26, 30, 43, 45, 46, 48, 64, 65, 66, 67, 121, 124], "aperiodic_params_": [2, 13, 46, 48, 50, 56, 64, 65], "peak_params_": [2, 46, 48, 50, 64, 65], "error_": [2, 15, 46, 48, 64, 65], "r_squared_": [2, 46, 48, 64, 65], "number": [2, 7, 8, 9, 10, 19, 29, 35, 46, 48, 50, 51, 52, 54, 56, 58, 63, 64, 65, 66, 67, 75, 80, 83, 104, 108, 109, 110, 119, 120, 128, 131, 132], "n_peaks_": [2, 46, 48, 52, 64, 65, 66, 67], "16291607": 2, "98379651": 2, "23978577": 2, "39291114": 2, "38095481": 2, "56651381": 2, "37190897": 2, "19412328": 2, "05826562245386353": 2, "9891330764764598": 2, "anoth": [2, 10, 13, 30, 45, 52, 131], "wai": [2, 7, 9, 10, 15, 24, 39, 40, 41, 45, 47, 48, 50, 52, 54, 58, 113, 114, 131], "get_param": [2, 3, 7, 9, 10, 13, 19, 30, 39, 46, 48, 52, 53, 64, 65, 66, 67], "extract": [2, 3, 7, 9, 13, 14, 19, 34, 40, 46, 48, 52, 58, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 121, 124, 129, 131, 132], "ap": [2, 40, 45, 49, 50, 56, 64, 65, 66, 67, 90, 91, 104, 105, 106], "aperiodic_param": [2, 3, 9, 10, 19, 28, 29, 30, 39, 46, 50, 53, 64, 65, 66, 67, 78, 81, 108, 109, 110], "peak_param": [2, 10, 46, 50, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78], "err": [2, 46], "r2": [2, 9, 50, 51, 52], "r_squar": [2, 7, 10, 46, 50, 64, 65, 66, 67, 78], "specif": [2, 7, 9, 19, 30, 33, 34, 39, 40, 41, 45, 46, 50, 51, 53, 56, 58, 65, 95, 128, 131, 132], "exp": [2, 3, 29, 45, 46, 50, 53, 90, 91, 130], "out": [2, 8, 9, 15, 20, 24, 28, 30, 33, 40, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 58, 62, 64, 65, 66, 67, 126, 127, 131, 132], "With": [2, 32, 36, 37, 46, 47, 48, 52, 58, 63, 64, 65, 66, 67, 131, 133], "level": [2, 29, 46, 52, 81, 108, 109, 110], "2f": [2, 30, 39, 40, 46, 52, 53], "": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 21, 30, 33, 34, 35, 39, 40, 41, 45, 46, 48, 49, 50, 51, 53, 54, 58, 64, 65, 66, 67, 78, 90, 91, 96, 97, 100, 107, 119, 120, 130, 132], "format": [2, 9, 15, 30, 39, 40, 41, 46, 52, 53, 67], "join": [2, 20, 46], "map": [2, 46, 58], "str": [2, 9, 34, 46, 52, 61, 62, 63, 64, 65, 66, 67, 90, 91, 96, 97, 98, 100, 101, 121, 122, 123, 124], "round": [2, 46, 119, 120, 129], "06": [2, 17, 36, 39, 44, 55, 58, 63, 64, 65, 66, 67, 78, 99, 110, 133], "98": [2, 46, 49, 51, 52], "next": [2, 3, 7, 13, 14, 15, 19, 24, 30, 33, 34, 35, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 54, 104, 131], "flatten": [2, 14, 20, 40, 48, 89, 113, 114], "It": [2, 39, 45, 47, 49, 52, 54, 56, 58, 108, 109, 119, 120, 129, 131], "remov": [2, 3, 14, 24, 48, 63], "whether": [2, 3, 14, 19, 20, 21, 34, 47, 48, 53, 58, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 79, 84, 87, 88, 90, 92, 95, 96, 98, 100, 101, 108, 109, 110, 123, 126, 128], "log": [2, 19, 21, 46, 47, 48, 49, 64, 65, 66, 67, 90, 92, 95, 98, 101, 114, 119, 120, 130], "space": [2, 15, 20, 21, 40, 45, 46, 47, 49, 64, 65, 66, 67, 83, 85, 88, 90, 92, 95, 98, 101, 108, 109, 110, 114, 117, 119, 120, 130, 131], "plt_log": [2, 13, 16, 20, 45, 47, 49, 65, 88, 95], "robust": [2, 47, 119, 120], "exclud": [2, 3, 8, 10, 47, 52], "outlier": [2, 8, 10, 24, 47], "init_ap_fit": [2, 47], "_robust_ap_fit": [2, 47], "power_spectrum": [2, 3, 14, 39, 47, 48, 64, 65, 66, 67, 95, 113, 114, 115, 116], "recomput": [2, 14, 47], "init_flat_spec": [2, 47], "label": [2, 3, 16, 19, 21, 24, 29, 34, 39, 40, 41, 45, 46, 47, 56, 63, 90, 91, 96, 97, 98, 100, 101], "color": [2, 3, 14, 19, 21, 40, 45, 47, 58, 90, 91, 96, 97, 98, 100, 101], "black": [2, 14, 21, 40, 45, 47], "also": [2, 3, 7, 8, 9, 10, 13, 15, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 64, 65, 66, 67, 95, 100, 101, 109, 131, 132], "ha": [2, 5, 8, 9, 13, 15, 16, 19, 20, 24, 33, 34, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 64, 65, 66, 67, 73, 98, 100, 101, 108, 110, 114, 130, 131], "o": [2, 9], "reload": [2, 9, 50], "specifi": [2, 3, 7, 10, 13, 14, 20, 21, 28, 29, 30, 40, 46, 48, 49, 50, 53, 61, 64, 65, 66, 67, 103, 105, 108, 109, 112, 131], "result": [2, 3, 5, 6, 8, 9, 10, 11, 14, 19, 20, 28, 30, 34, 39, 46, 47, 49, 51, 52, 54, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 73, 78, 83, 84, 85, 86, 88, 93, 94, 95, 102, 108, 109, 114, 130, 131, 133], "fit_set": 2, "save_set": [2, 48, 50, 64, 65, 66, 67], "true": [2, 3, 8, 9, 10, 13, 15, 16, 19, 20, 21, 24, 28, 29, 30, 39, 40, 41, 45, 48, 49, 50, 52, 58, 64, 65, 66, 67, 68, 69, 71, 72, 74, 84, 88, 90, 95, 96, 108, 109, 110, 113, 115, 123, 128, 131], "fit_result": 2, "save_result": [2, 9, 48, 50, 64, 65, 66, 67, 131], "fit_data": 2, "save_data": [2, 48, 64, 65, 66, 67], "option": [2, 7, 10, 19, 21, 24, 28, 29, 45, 48, 49, 50, 52, 53, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 83, 84, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 106, 108, 109, 110, 121, 122, 123, 124, 126, 127, 128, 130, 131], "rather": [2, 33, 40, 49, 52, 58, 64, 65, 66, 67], "than": [2, 10, 30, 33, 46, 49, 50, 52, 53, 58, 104], "default": [2, 7, 16, 20, 28, 40, 48, 50, 52, 56, 58, 62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 83, 84, 88, 90, 92, 95, 96, 98, 100, 101, 108, 109, 110, 123, 126, 128, 132], "json": [2, 48, 50, 56, 64, 65, 66, 67], "export": [2, 5, 6, 11, 63, 64, 65, 108, 109, 131, 133], "datafram": [2, 7, 64, 66, 67, 131], "see": [2, 3, 8, 9, 10, 13, 14, 15, 16, 19, 20, 24, 28, 33, 34, 35, 39, 40, 41, 45, 49, 51, 52, 54, 56, 58, 66, 67, 100, 109, 110, 125, 130, 131], "other": [2, 3, 9, 28, 29, 30, 33, 34, 35, 41, 48, 50, 51, 53, 56, 57, 104, 108, 109, 125], "further": [2, 3, 9, 14, 16, 35, 44, 48, 51, 52, 55, 56, 63, 64, 65, 71, 73, 106, 108, 118, 131, 133], "guidanc": [2, 51, 56], "topic": [2, 5, 13, 16, 37, 40, 131, 134], "convert": [2, 3, 9, 48, 64, 65, 66, 67], "df": 2, "to_df": [2, 7, 48, 64, 65, 66, 67], "none": [2, 3, 7, 34, 40, 48, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 83, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 121, 122, 123, 124, 126, 127], "abov": [2, 3, 7, 8, 10, 13, 14, 15, 16, 19, 20, 24, 28, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 58, 64, 65, 66, 67, 73, 77, 90, 96, 101, 119, 120, 129, 130, 131, 132], "to_csv": 2, "identifi": [2, 15, 39, 47, 52, 130, 131], "being": [2, 8, 15, 21, 28, 32, 33, 37, 39, 45, 47, 52, 58, 64, 65, 66, 67, 70], "well": [2, 3, 14, 15, 16, 20, 24, 35, 39, 45, 47, 49, 51, 52, 53, 56, 58, 67, 108, 109, 130, 131, 132], "when": [2, 3, 7, 8, 9, 10, 14, 16, 20, 21, 24, 28, 29, 30, 33, 34, 39, 40, 41, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 64, 66, 67, 114, 130, 131], "accomplish": 2, "In": [2, 3, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 24, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 125, 130, 131, 132], "fluctuat": [2, 34], "around": [2, 13, 15, 30, 47, 51, 58, 92, 96, 101, 108, 109, 110, 113, 114], "05": [2, 11, 13, 39, 44, 45, 50, 51, 53, 55, 65, 133], "mean": [2, 3, 7, 8, 9, 10, 13, 15, 16, 24, 33, 39, 40, 41, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 64, 65, 66, 67, 78, 84, 85, 90, 92, 96, 101, 108, 109, 130, 131], "absolut": [2, 47, 48, 52, 64, 65, 66, 67, 80, 131], "mae": [2, 52], "There": [2, 8, 20, 21, 24, 28, 33, 46, 48, 49, 52, 54, 56, 58, 131, 132], "point": [2, 13, 16, 24, 30, 33, 37, 45, 46, 47, 48, 49, 58, 70, 100, 108, 109, 111, 113, 114, 119, 120, 132], "somewhat": [2, 58], "poor": [2, 52], "particularli": [2, 10, 15, 33, 52, 131], "4": [2, 3, 7, 8, 10, 11, 17, 19, 20, 21, 28, 29, 34, 39, 40, 50, 52, 53, 54, 58, 63, 75, 77, 96], "9": [2, 7, 8, 10, 16, 19, 20, 29, 40, 46, 48, 50, 52, 53, 125], "14": [2, 3, 7, 10, 40, 50, 51, 58, 71, 73], "consider": [2, 52, 58], "necessari": [2, 16, 58], "plot_error": [2, 15, 68, 69], "comput": [2, 13, 14, 15, 24, 30, 33, 35, 39, 46, 47, 50, 57, 111, 125], "errs_fm": [2, 15], "return_error": [2, 15, 68, 69], "averag": [2, 3, 15, 19, 39, 40, 41, 51, 52, 58, 84, 85, 90, 96, 101, 119, 120], "global": [2, 15], "t": [2, 3, 8, 9, 10, 15, 24, 30, 39, 40, 41, 45, 46, 47, 48, 49, 52, 56, 58, 64, 65, 66, 67, 125, 131, 132], "3f": [2, 15, 40], "total": [2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 109, 133], "058": 2, "need": [2, 3, 7, 9, 10, 24, 28, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 109, 130, 131, 132], "eoppsd": 2, "one": [2, 9, 14, 15, 19, 21, 24, 28, 33, 34, 41, 45, 48, 50, 51, 53, 58, 61, 64, 66, 67, 73, 75, 98, 100, 104, 131, 132], "each": [2, 3, 9, 14, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 58, 61, 63, 64, 65, 66, 67, 71, 73, 74, 75, 78, 90, 91, 95, 96, 97, 103, 105, 106, 108, 109, 110, 119, 120, 130], "subject": [2, 3, 9, 10, 19, 34, 39, 40, 50, 52, 53, 58, 131], "eop": 2, "get": [2, 3, 8, 9, 15, 20, 24, 41, 47, 48, 52, 53, 58, 64, 65, 66, 67, 131], "n_subj": [2, 19], "shape": [2, 9, 10, 16, 33, 50, 53, 58, 64, 66, 67, 74, 75, 76, 77, 83, 105, 114, 125], "d": 2, "60": [2, 24, 29, 52, 119, 120], "fg": [2, 3, 7, 8, 9, 10, 13, 15, 50, 52, 53, 54, 131], "print_result": [2, 9, 46, 47, 48, 50, 52, 64, 65, 66, 67], "without": [2, 8, 9, 10, 34, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 58, 113, 114, 127, 131], "knee": [2, 9, 15, 20, 24, 29, 48, 50, 51, 52, 54, 58, 64, 65, 66, 67, 78, 80, 90, 91, 107, 108, 109, 113, 114, 125, 130], "min": [2, 9, 50, 51, 52], "438": 2, "max": [2, 9, 48, 50, 51, 52, 54, 132], "915": 2, "515": 2, "208": 2, "786": 2, "998": [2, 3], "990": [2, 50], "019": 2, "107": 2, "030": 2, "befor": [2, 10, 14, 15, 24, 30, 33, 35, 45, 51], "eop_demo": 2, "addit": [2, 19, 21, 29, 30, 34, 35, 48, 50, 53, 56, 62, 64, 65, 66, 67, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 132], "here": [2, 3, 8, 9, 10, 14, 15, 19, 21, 28, 33, 34, 35, 39, 40, 47, 48, 49, 50, 51, 52, 53, 131], "canon": [2, 21, 63], "per": [2, 3, 7, 15, 19, 50, 52, 53, 58, 67, 73, 75], "466666666666667": 2, "theta": [2, 3, 19, 21, 34, 39, 40, 45, 53, 58, 63], "alpha": [2, 3, 7, 10, 14, 19, 21, 28, 34, 39, 40, 41, 45, 47, 51, 53, 58, 63, 71, 73, 103, 105, 106, 109], "13": [2, 8, 19, 34, 39, 40, 48, 71, 73], "beta": [2, 3, 7, 19, 21, 28, 34, 39, 40, 45, 53, 56, 58, 63, 71, 73, 105, 106, 109], "30": [2, 3, 7, 9, 19, 21, 24, 34, 35, 39, 40, 45, 49, 50, 52, 53, 63, 71, 73, 83, 129], "limit": [2, 7, 14, 16, 24, 35, 46, 48, 51, 52, 54, 58, 63, 64, 65, 66, 67, 80, 113, 114, 131, 132], "measur": [2, 13, 14, 15, 16, 29, 30, 33, 34, 35, 39, 42, 45, 46, 47, 49, 51, 53, 57, 63, 100, 109, 118, 129, 131, 132, 133], "split": [2, 48], "up": [2, 3, 10, 14, 15, 28, 30, 41, 45, 48, 49, 50, 51, 52, 53, 58, 115, 116], "_": [2, 20, 34, 40, 41, 47, 48], "ax": [2, 3, 20, 21, 34, 40, 41, 45, 47, 48, 52, 60, 61, 65, 88, 90, 91, 92, 95, 96, 97, 98, 100, 101], "subplot": [2, 3, 20, 21, 34, 40, 41, 47, 64, 66, 67, 93, 94, 102], "figsiz": [2, 3, 20, 21, 34, 40, 41, 47, 60], "7": [2, 3, 7, 10, 39, 40, 49, 50, 51, 52, 58, 71, 73, 131], "all_band": 2, "zip": [2, 5, 20, 34, 37, 40, 41, 44, 46, 52], "set_titl": [2, 3, 40, 41], "fontsiz": [2, 3, 21, 39, 40, 41], "subplots_adjust": [2, 40], "hspace": [2, 40], "reconstruct": [2, 19, 20, 46, 47, 48, 52, 85, 90, 96], "compon": [2, 5, 8, 12, 13, 17, 18, 21, 22, 24, 29, 32, 33, 34, 35, 37, 39, 41, 44, 46, 48, 52, 55, 57, 63, 64, 65, 66, 67, 73, 80, 81, 88, 90, 91, 95, 96, 97, 98, 105, 108, 109, 110, 130, 131, 132, 133], "freq_rang": [2, 3, 9, 10, 19, 21, 28, 29, 41, 46, 48, 51, 53, 64, 65, 66, 67, 82, 83, 90, 95, 96, 97, 98, 108, 109, 110, 117, 131], "strict": 2, "optim": [2, 49, 52, 58], "appropri": [2, 48, 49, 52, 58, 64, 65, 66, 67], "record": [2, 3, 9, 24, 41, 52, 58, 108, 109, 130], "modal": [2, 52, 53, 57, 130, 132], "suggest": [2, 15, 19, 34, 39, 52, 58], "driven": [2, 39, 40, 41, 58, 131], "approach": [2, 3, 7, 19, 20, 21, 24, 30, 32, 37, 38, 39, 40, 41, 45, 47, 48, 52, 53, 56, 58, 64, 65, 66, 67, 80, 90, 95, 96, 101, 114, 119, 120, 125, 131, 132], "perform": [2, 15, 48, 49, 52, 79], "while": [2, 9, 13, 16, 52, 67], "account": [2, 24, 58], "your": [2, 49, 52, 53, 56, 131, 132], "expect": [2, 13, 15, 24, 30, 33, 39, 46, 48, 49, 52, 58, 131], "activ": [2, 3, 24, 32, 33, 34, 35, 37, 38, 39, 40, 45, 47, 53, 57, 130], "given": [2, 3, 24, 33, 35, 39, 41, 45, 46, 48, 49, 51, 52, 58, 64, 65, 66, 67, 74, 75, 77, 83, 96, 104, 111, 112, 125], "question": [2, 14, 34, 53, 56, 57, 131], "interest": [2, 3, 7, 9, 10, 13, 14, 19, 34, 39, 41, 49, 51, 53, 57, 71, 72, 73, 74, 75, 131], "prior": [2, 39, 46, 47, 48, 56, 64, 65, 66, 67, 131], "find": [2, 3, 8, 13, 32, 36, 37, 39, 47, 52, 56, 58, 63, 111, 132, 133], "One": [2, 3, 24, 28, 30, 34, 45, 58, 130], "subset": [2, 10, 58], "evalu": [2, 5, 12, 15, 56], "test": [2, 8, 15, 19, 21, 52], "randomli": [2, 28, 33, 106, 108], "select": [2, 3, 7, 19, 28, 48, 50, 52, 53, 58, 64, 65, 66, 67, 71, 73, 128], "output": [2, 3, 7, 29, 34, 48, 53, 54, 58, 64, 65, 66, 67, 131], "folder": [2, 46, 47, 48, 49, 50, 53], "let": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 30, 33, 34, 35, 39, 40, 41, 45, 48, 49, 50, 51, 52, 53, 54], "sub": [2, 19, 21, 46, 49, 56, 64, 66, 67], "sampl": [2, 3, 28, 33, 52, 105, 106, 108, 119, 120], "random": [2, 16, 33, 34, 39, 40, 45, 52, 53, 105, 118], "seed": [2, 16, 33, 34, 39, 40, 45, 52, 53, 118], "subsampl": [2, 128], "subsample_frac": 2, "spectra_subsampl": 2, "two": [2, 13, 16, 19, 21, 28, 29, 30, 34, 35, 39, 40, 45, 48, 49, 58, 64, 65, 66, 67, 111, 131], "compar": [2, 3, 9, 10, 15, 19, 21, 28, 29, 37, 38, 40, 46, 47, 48, 50, 52, 53, 56, 58, 87], "m1_peak_width": 2, "5": [2, 3, 7, 8, 9, 10, 15, 16, 19, 20, 21, 24, 28, 29, 30, 34, 35, 39, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 58, 64, 65, 66, 67, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 128, 129], "m2_peak_width": 2, "m1_n_peak": 2, "m2_n_peak": 2, "m1_peak_height": 2, "m2_peak_height": 2, "m1_psd_rang": 2, "20": [2, 3, 9, 10, 19, 21, 28, 30, 39, 40, 41, 50, 52, 53, 58, 105, 106, 108, 109], "m2_psd_rang": 2, "m1_freq": 2, "m1_spectra": 2, "m2_freq": 2, "m2_spectra": 2, "differ": [2, 3, 5, 7, 9, 13, 14, 19, 20, 21, 32, 33, 34, 35, 37, 39, 40, 41, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 68, 69, 70, 105, 130, 131], "fg1": [2, 19, 86], "could": [2, 9, 10, 19, 29, 33, 34, 35, 39, 41, 45, 50, 52, 53, 54, 58, 92], "ind": [2, 3, 9, 10, 50, 51, 52, 64, 67, 128], "len": [2, 9, 10, 13, 21, 28, 33, 34, 103], "temp_model": 2, "get_model": [2, 3, 10, 14, 48, 50, 52, 56, 64, 65, 66, 67], "regener": [2, 28, 50, 52, 64, 65, 66, 67, 84, 123], "fg2": [2, 19, 86], "manag": [2, 3, 7, 10, 11, 19, 20, 21, 29, 34, 51, 56, 57, 64, 65, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 131, 133], "redefin": [2, 41, 66], "again": [2, 3, 7, 8, 15, 19, 35, 39, 40, 45, 131], "settings1": 2, "peak_threshold": [2, 3, 48, 52, 54, 64, 65, 66, 67, 80, 131], "aperiodic_mod": [2, 13, 20, 24, 45, 48, 49, 54, 56, 64, 65, 66, 67, 80, 131], "fix": [2, 15, 29, 48, 49, 54, 56, 64, 65, 66, 67, 80, 108, 109, 113, 114, 131], "settings2": 2, "_asdict": 2, "don": [2, 3, 45, 49, 52, 58], "explicitli": [2, 7, 10, 20, 45, 58, 66], "trim": 2, "refit": [2, 8, 15], "respect": [2, 45, 119, 120, 129], "At": [2, 46, 47, 58], "regim": 2, "after": [2, 9, 24, 30, 46, 52, 53, 62, 83], "often": [2, 7, 9, 13, 14, 24, 39, 41, 45, 58, 130, 134], "worthwhil": 2, "below": [2, 24, 29, 33, 41, 45, 46, 48, 51, 52, 53, 54, 56, 58, 90, 96, 101, 111, 119, 120, 129, 131], "correspond": [2, 3, 9, 13, 14, 21, 49, 50, 52, 53, 61, 66, 105], "top": [2, 20], "script": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "distribut": [2, 3, 9, 15, 33, 45, 52, 58, 105, 130, 131], "present": [2, 40, 45, 49, 52, 58, 64, 65, 66, 67, 73, 75], "print_report": 2, "fig": [2, 3, 20, 21, 40, 41], "ax0": 2, "ax1": 2, "varianc": 2, "explain": 2, "index": [2, 40, 50, 52, 53, 64, 65, 66, 67, 132], "worst": [2, 52], "worst_fit_ind": [2, 52], "argmax": [2, 3, 15, 52], "2831": 2, "4376": 2, "45": [2, 52], "413": 2, "7858": 2, "1071": 2, "potenti": [2, 10, 15, 47, 49, 50, 58, 130, 131], "under": [2, 16, 39, 40, 52, 53, 56, 111, 131], "threshold": [2, 10, 47, 48, 52, 53, 54, 64, 65, 66, 67, 71, 72, 73, 74, 75, 77, 80, 131, 132], "underfit_error_threshold": 2, "100": [2, 29, 33, 50, 51], "underfit_check": 2, "re": [2, 3, 46, 48, 49, 52, 64, 65, 66, 67, 73, 131], "enumer": [2, 3, 9, 52], "append": [2, 9, 48, 50, 51, 52, 64, 65, 66, 67], "loop": [2, 9, 34, 52], "through": [2, 8, 9, 10, 20, 21, 44, 47, 48, 52, 56, 58, 131], "problem": [2, 52], "overfit_error_threshold": 2, "02": [2, 10, 24, 25, 28, 29, 36, 39, 44, 49, 52, 55, 65, 78, 133], "overfit_check": 2, "group_set": 2, "group_result": [2, 50, 64, 67, 131], "line": [2, 5, 15, 20, 23, 25, 30, 45, 49, 50, 65, 95, 98, 100, 101, 109, 119, 120, 129, 133], "indic": [2, 8, 10, 15, 21, 33, 34, 45, 46, 48, 49, 50, 52, 54, 64, 65, 66, 67, 128], "deviat": [2, 15, 16, 46, 48, 50, 51, 52, 64, 65, 66, 67, 78, 80, 92, 101, 105, 108, 109], "03": [2, 4, 17, 24, 39, 42, 44, 49, 52, 53, 55, 65, 89, 98, 133], "highest": [2, 3, 7, 15, 52, 53, 58, 71, 72, 74, 76], "largest": [2, 3, 48], "occur": [2, 8, 13, 30, 34, 39, 45, 58, 125], "issu": [2, 8, 15, 24, 40, 52, 53, 56, 131], "lower": [2, 3, 24, 39, 46, 51, 52, 54, 63, 131], "return": [2, 3, 9, 10, 14, 15, 28, 29, 30, 34, 39, 40, 41, 46, 48, 50, 53, 54, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 86, 87, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131], "2d": [2, 9, 15, 21, 29, 50, 64, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 78, 90, 91, 96, 97, 98, 99, 100, 101, 108, 110, 119, 128, 129, 131], "matrix": [2, 15, 29, 50, 64, 66, 67, 108, 110, 131], "errs_fg": [2, 15], "f_max_err": [2, 15], "f_max_std": [2, 15], "std": [2, 15, 64, 65, 66, 67, 90, 96, 101], "drop": [2, 48, 64, 66, 67], "fail": [2, 5, 6, 11, 47, 48, 52, 64, 65, 108, 133], "done": [2, 7, 10, 19, 20, 21, 24, 35, 39, 46, 49, 52, 53, 56, 131], "shown": [2, 41, 54, 131], "particip": [2, 19], "who": [2, 14], "greater": [2, 49, 58, 104], "vari": [2, 3, 7, 19, 39, 40, 41, 52, 58], "depend": [2, 7, 20, 24, 33, 39, 45, 48, 49, 53, 58, 67], "characterist": [2, 13, 33, 35, 45, 49, 53, 58, 131], "base": [2, 3, 7, 9, 13, 39, 48, 50, 51, 53, 58, 64, 65, 66, 67, 78, 79, 80, 81, 82, 121, 124, 125, 128], "repositori": [2, 8, 131, 132, 134], "time": [2, 3, 7, 8, 9, 10, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 63, 64, 65, 66, 67, 99, 110, 124, 131], "minut": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "190": [2, 4, 133], "second": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "jupyt": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "notebook": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 64, 66, 67], "plot_dev_demo": [2, 4, 133], "ipynb": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "sourc": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134], "py": [2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 125, 133], "galleri": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 133], "sphinx": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "tutori": [3, 9, 14, 45, 46, 47, 51, 52, 53, 56, 57, 58, 131, 133], "requir": [3, 7, 29, 45, 46, 48, 52, 53, 58, 108, 109, 126, 131, 132], "instal": [3, 7, 54, 132], "alreadi": [3, 24, 60, 64, 65, 66, 67, 73, 83, 131], "instruct": [3, 48, 52, 65, 131], "explor": [3, 5, 7, 9, 10, 12, 13, 15, 16, 17, 19, 20, 21, 24, 30, 33, 34, 35, 37, 40, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 65, 98, 109, 131, 133, 134], "cm": 3, "colorbar": 3, "dataset": [3, 52, 58, 61], "spectral": [3, 5, 16, 23, 24, 33, 35, 51, 54, 56, 57, 129, 130, 132], "specparam": [3, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 34, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 132], "combin": [3, 7, 9, 14, 16, 20, 34, 35, 37, 38, 40, 41, 45, 48, 52, 58, 64, 65, 66, 67, 86, 95, 130, 131], "meg": [3, 58, 130, 131], "eeg": [3, 58, 130, 131], "audiovisu": 3, "task": [3, 9, 53, 57], "quick": [3, 9, 40, 48], "look": [3, 8, 9, 15, 16, 19, 20, 33, 34, 39, 45, 49, 52, 54, 132], "local": [3, 49, 58, 130, 131], "cell": 3, "raw_fnam": 3, "sample_audvis_filt": 3, "40_raw": 3, "fif": 3, "io": [3, 9], "read_raw_fif": 3, "preload": 3, "channel": [3, 9, 10, 50, 52, 131], "pick": [3, 48, 49, 52, 58], "bad": [3, 49, 58, 64, 65, 66, 67], "projector": 3, "project": [3, 8, 39, 53, 58, 131], "pca": 3, "v1": 3, "n_channel": [3, 9], "102": 3, "v2": 3, "v3": 3, "set_eeg_refer": 3, "type": [3, 33, 66, 67, 130], "referenc": [3, 44, 55, 64, 65, 108, 109, 126, 127, 133], "exist": [3, 21, 37, 38, 56, 58, 64, 65, 66, 67], "thing": [3, 28, 34, 39, 45, 50, 52, 58, 130, 131], "keep": [3, 7, 9, 28, 29, 30, 34, 45, 47, 52, 54, 58, 64, 65, 66, 67, 73, 75], "mind": [3, 7, 34, 45, 58], "guarante": [3, 8, 48, 50, 56, 131], "detect": [3, 16, 35, 39, 45, 48, 51, 58, 64, 65, 66, 67, 80], "ani": [3, 5, 7, 8, 9, 10, 13, 16, 28, 29, 33, 34, 37, 46, 47, 48, 50, 51, 52, 53, 54, 58, 64, 65, 66, 67, 105, 108, 109, 126, 127, 130, 131, 132], "consid": [3, 7, 8, 14, 16, 19, 24, 30, 33, 34, 35, 41, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 130], "pro": 3, "sinc": [3, 7, 9, 10, 24, 33, 45, 46, 50, 51, 52, 53, 58], "abl": [3, 10, 21, 24, 28, 30, 39, 46, 49, 52, 56, 58], "adjud": [3, 39, 40], "evid": [3, 33, 39, 41, 57], "oscillatori": [3, 16, 34, 35, 39, 40, 45, 58], "within": [3, 7, 9, 10, 19, 34, 39, 40, 41, 45, 51, 53, 54, 58, 71, 72, 73, 74, 75, 108, 109, 131], "doe": [3, 7, 8, 14, 16, 24, 30, 33, 34, 39, 45, 46, 47, 49, 50, 51, 57, 64, 66, 67, 93, 94, 102, 108, 109, 119, 120, 129], "sometim": [3, 8, 10, 16, 30, 34, 58], "doesn": [3, 10, 15, 24, 40, 58, 64, 65, 66, 67], "alwai": [3, 9, 34, 50, 53, 58], "veri": [3, 24, 33, 49, 50, 51, 52, 58], "want": [3, 7, 8, 9, 10, 14, 19, 20, 29, 45, 46, 50, 52, 53, 58, 111, 132], "polici": 3, "them": [3, 8, 9, 10, 14, 19, 24, 30, 33, 34, 39, 40, 41, 45, 50, 52, 53, 54, 56, 58, 113, 114, 119, 120], "def": [3, 39, 40, 41], "check_nan": 3, "nan_polici": 3, "zero": [3, 19, 24, 28, 33, 34, 35, 39, 45, 48, 52, 90, 105], "replac": [3, 56], "nan_ind": 3, "isnan": 3, "desir": [3, 8, 9, 10, 29, 48, 66, 67, 83, 114], "elif": [3, 125], "nanmean": [3, 53], "els": 3, "rais": [3, 8, 48, 50, 64, 65, 66, 67, 68, 69, 79, 84, 86, 88, 93, 94, 102, 104, 107, 114], "valueerror": [3, 50, 64, 65, 66, 67, 84, 104, 114], "understood": [3, 50, 64, 65, 66, 67, 84], "seri": [3, 7, 9, 24, 32, 34, 35, 36, 37, 38, 46, 56, 58, 65, 89, 131, 133], "represent": [3, 14, 20, 35, 45, 58, 131], "leverag": 3, "time_frequ": 3, "particular": [3, 8, 10, 15, 16, 21, 28, 32, 33, 37, 38, 41, 45, 48, 50, 51, 52, 53, 56, 57, 109, 125, 130], "compute_psd": 3, "continu": [3, 8, 9, 10, 33, 40, 45, 47, 52, 58], "welch": [3, 46], "fmin": 3, "fmax": 3, "tmin": 3, "tmax": 3, "250": 3, "n_overlap": 3, "150": [3, 20, 24, 29, 34, 45, 49, 58], "n_fft": 3, "300": [3, 52], "get_data": [3, 14, 48, 64, 65, 66, 67], "return_freq": 3, "effect": [3, 13, 24, 30, 33, 46, 51, 52, 54, 65], "window": [3, 50, 51, 58, 66, 67, 99, 102, 110], "size": [3, 7, 19, 58, 60, 128], "multipl": [3, 7, 8, 10, 16, 19, 29, 30, 33, 35, 39, 40, 41, 45, 49, 51, 58, 87, 98, 100, 108, 131], "15": [3, 7, 9, 13, 21, 28, 29, 34, 39, 40, 41, 45, 47, 48, 50, 53, 63, 109], "overal": [3, 9, 15, 16, 34, 50, 52, 56, 58], "group": [3, 9, 10, 13, 19, 28, 39, 44, 48, 51, 54, 55, 58, 64, 65, 66, 67, 69, 73, 75, 77, 78, 83, 84, 85, 86, 109, 119, 122, 128, 131, 133], "fact": 3, "both": [3, 7, 10, 14, 19, 32, 33, 37, 39, 40, 45, 48, 52, 54, 58, 111, 131], "preserv": [3, 10, 58, 64, 66, 67], "order": [3, 5, 8, 10, 20, 24, 28, 30, 33, 34, 37, 44, 47, 48, 50, 52, 53, 58, 73, 75, 131], "kept": [3, 47], "did": [3, 7, 39], "That": [3, 7, 54], "plot_topomap": 3, "pass": [3, 7, 19, 20, 21, 24, 29, 46, 47, 48, 59, 61, 62, 64, 65, 66, 67, 68, 69, 95, 99, 100], "locat": [3, 20, 130], "alpha_pw": [3, 7], "viz": 3, "info": [3, 54], "cmap": 3, "viridi": 3, "contour": 3, "imag": 3, "axesimag": 3, "0x7fc5c2cdca90": 3, "And": 3, "show": [3, 7, 13, 14, 29, 35, 39, 40, 41, 134], "make": [3, 8, 19, 45, 49, 50, 52, 58, 108, 109, 131], "sens": [3, 16, 20, 33, 50, 52], "centro": 3, "posterior": 3, "extend": 3, "band_def": [3, 39], "current": [3, 34, 37, 48, 49, 54, 56, 58, 64, 65, 66, 67, 107, 113, 115, 121, 122, 123, 124, 131, 132], "band_pow": [3, 41], "topomap": 3, "oscil": [3, 16, 21, 32, 33, 36, 37, 45, 57, 63, 130, 131, 133], "titl": [3, 21, 34, 39, 41, 58], "might": [3, 8, 9, 13, 15, 48, 52, 54, 58, 131, 132], "notic": [3, 10, 13, 47, 52, 54], "littl": 3, "patchi": 3, "becaus": [3, 7, 13, 24, 33, 34, 48, 49, 58, 113, 114], "singl": [3, 7, 9, 10, 16, 19, 21, 29, 33, 45, 46, 48, 49, 50, 51, 58, 61, 71, 72, 74, 76, 86, 108, 109, 131], "what": [3, 8, 13, 15, 16, 20, 21, 30, 33, 34, 39, 40, 41, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 64, 65, 66, 67, 95, 111, 132], "like": [3, 8, 9, 13, 16, 20, 29, 33, 34, 35, 39, 41, 45, 49, 51, 52, 53, 58, 73, 130, 131, 132], "underli": [3, 9, 13, 16, 21, 46, 53, 58, 66], "most": [3, 7, 9, 16, 20, 40, 45, 47, 48, 51, 52, 53, 58, 131], "add_legend": [3, 20, 65, 95], "aesthet": [3, 21, 34], "yaxi": [3, 40, 41], "set_ticklabel": 3, "biggest": 3, "16": [3, 20, 39, 40, 41, 47, 49, 50], "simpli": [3, 14, 24, 33, 35, 39, 48], "0x7fc5bc6a9a30": 3, "fair": 3, "amount": [3, 29, 41, 52, 105, 112, 115, 116], "variat": [3, 19, 34], "scalp": 3, "term": [3, 7, 33, 41, 45, 46, 48, 50, 52, 58, 130, 131], "seem": [3, 8, 16, 51], "spatial": [3, 53], "structur": [3, 33], "much": [3, 8, 30, 52, 58], "those": [3, 19, 56, 64, 65, 66, 67, 73, 130], "between": [3, 9, 10, 13, 15, 19, 39, 40, 41, 45, 50, 52, 53, 56, 58, 65, 68, 69, 70, 78, 111, 119, 120, 131], "low": [3, 15, 24, 34, 40, 46, 51, 52, 54, 58, 106], "high": [3, 10, 15, 33, 34, 40, 52, 58, 106], "argmin": 3, "seen": [3, 13, 30, 33, 34, 45, 51], "692": [3, 4, 133], "plot_mne_exampl": [3, 4, 133], "00": [4, 10, 11, 17, 19, 22, 24, 25, 26, 30, 31, 36, 39, 42, 43, 47, 49, 50, 52, 55, 133], "07": [4, 39, 44, 50, 55, 64, 65, 78, 106, 108, 109, 118, 133], "882": 4, "execut": [4, 11, 17, 22, 25, 26, 31, 36, 42, 43, 55, 133], "auto_exampl": [4, 11, 17, 22, 25, 26, 31], "analys": [4, 9, 10, 14, 19, 33, 34, 39, 41, 47, 50, 56, 57, 58, 63, 64, 73, 98, 131, 132, 133], "mem": [4, 11, 17, 22, 25, 26, 31, 36, 42, 43, 55, 133], "mb": [4, 11, 17, 22, 25, 26, 31, 36, 42, 43, 55, 133], "04": [4, 11, 22, 39, 44, 46, 52, 55, 58, 65, 133], "section": [5, 32, 35, 37, 38, 40, 44, 45, 52, 54, 56, 132], "deal": [5, 16, 23, 25, 39, 65, 98, 109, 120, 129, 133], "nois": [5, 23, 25, 29, 34, 46, 51, 52, 54, 57, 65, 81, 98, 108, 109, 110, 119, 120, 129, 133], "check": [5, 6, 8, 9, 10, 13, 14, 19, 20, 29, 30, 33, 39, 45, 46, 48, 49, 50, 53, 56, 57, 58, 59, 60, 64, 65, 66, 67, 79, 87, 131], "3d": [5, 6, 11, 51, 64, 65, 66, 72, 83, 86, 106, 108, 117, 122, 133], "error": [5, 7, 9, 10, 12, 16, 17, 24, 46, 47, 48, 49, 50, 51, 52, 56, 64, 65, 66, 67, 68, 69, 78, 79, 101, 108, 109, 133], "cover": [5, 7, 10, 21, 24, 27, 33, 51, 53, 54, 56, 58], "transform": [5, 27, 31, 33, 34, 65, 81, 98, 109, 133], "auto_examples_python": 5, "auto_examples_jupyt": 5, "model": [6, 11, 17, 18, 21, 22, 24, 29, 30, 35, 39, 44, 49, 50, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 102, 105, 106, 108, 109, 110, 117, 118, 121, 122, 123, 124, 130, 131, 132, 133], "ad": [7, 20, 29, 33, 41, 45, 47, 48, 54, 56, 64, 65, 66, 67, 81, 90, 91, 96, 97, 105], "version": [7, 14, 34, 41, 45, 47, 52, 56, 57, 64, 65, 66, 67, 111], "simul": [7, 8, 9, 10, 13, 14, 15, 16, 20, 21, 24, 31, 33, 35, 39, 45, 51, 54, 57, 58, 81, 98, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 119, 120, 128, 129, 131, 132, 133], "sim_power_spectrum": [7, 10, 13, 14, 15, 16, 20, 21, 24, 28, 29, 30, 39, 40, 41, 45, 52, 54, 56, 113, 114, 115, 116, 120, 129], "sim_group_power_spectra": [7, 8, 9, 13, 14, 15, 16, 19, 21, 28, 29, 52, 53, 54, 56, 110, 119, 128], "just": [7, 8, 10, 15, 29, 30, 33, 34, 39, 45, 46, 48, 49, 50, 51, 52, 53, 64, 65, 66, 67, 106, 113, 114, 131], "try": [7, 8, 24, 34, 45, 46, 47, 49, 51, 52, 53, 58], "access": [7, 14, 21, 46, 47, 48, 50, 53, 54, 56, 64, 67], "get_result": [7, 46, 48, 64, 65, 66, 67], "A": [7, 9, 13, 24, 26, 30, 33, 34, 39, 43, 46, 47, 50, 52, 57, 58, 61, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 77, 105, 106, 108, 111, 128, 130, 131, 132], "difficulti": 7, "notabl": [7, 13, 14, 16, 45, 51, 56, 67], "thei": [7, 8, 9, 10, 14, 16, 20, 21, 30, 39, 40, 41, 45, 47, 48, 49, 50, 52, 56, 57, 64, 65, 66, 67, 109, 111, 130], "kind": [7, 8, 10, 29, 34, 52, 58, 64, 65, 66, 67, 95], "strategi": [7, 9, 24, 58], "bands1": 7, "25": [7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 28, 29, 30, 35, 39, 40, 45, 46, 50, 51, 52, 54, 104, 106, 108, 111, 112, 113, 114, 128], "freq_r": [7, 8, 9, 10, 13, 14, 16, 29, 48, 54, 64, 65, 66, 67, 82, 108, 109, 110, 117], "support": [7, 51, 56, 108, 109], "893708": 7, "489264": 7, "026236": 7, "979900": 7, "dtype": [7, 10], "float64": [7, 10], "peak_org": [7, 51, 64, 65, 66, 67, 121, 124], "argument": [7, 14, 21, 59, 61, 62, 64, 65, 66, 67, 68, 69, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "integ": [7, 10, 50], "cf_0": 7, "164700": 7, "pw_0": 7, "311485": 7, "bw_0": 7, "726545": 7, "By": [7, 16, 20, 24, 45, 48, 51, 58, 130], "domin": [7, 58], "enforc": [7, 48], "ideal": 7, "therefor": [7, 10, 34, 40, 45, 49, 51, 52, 58, 111], "instead": [7, 14, 49, 50, 73, 108, 109], "alpha_cf": 7, "alpha_bw": 7, "necessarili": [7, 15, 30, 33, 34, 35, 46, 50, 52, 58, 65, 73, 75], "howev": [7, 8, 14, 20, 30, 33, 34, 39, 40, 41, 49, 50, 51, 52, 56, 58], "fulli": [7, 47, 48, 131], "reflect": [7, 9, 10, 13, 14, 16, 33, 34, 35, 39, 40, 41, 45, 49, 51, 52, 53, 56, 57, 66, 73, 75, 130, 131], "basic": [7, 35, 46, 51, 53, 58], "togeth": [7, 10, 14, 20, 33, 41, 46, 47, 49, 86, 109], "003628": 7, "002424": 7, "003998": 7, "999835": 7, "000225": 7, "999766": 7, "003836": 7, "999847": 7, "001016": 7, "000432": 7, "003853": 7, "999841": 7, "003479": 7, "002637": 7, "004029": 7, "999842": 7, "007235": 7, "004835": 7, "004196": 7, "999828": 7, "043314": 7, "248111": 7, "974811": 7, "167240": 7, "148414": 7, "879215": 7, "021462": 7, "244480": 7, "983061": 7, "995533": 7, "248785": 7, "945071": 7, "707462": 7, "243566": 7, "496726": 7, "449806": 7, "254810": 7, "500000": 7, "326524": 7, "237630": 7, "562351": 7, "previous": [7, 51, 57, 63], "new": [7, 10, 15, 20, 29, 30, 41, 47, 48, 52, 56, 63, 64, 66, 67, 107, 113, 115, 131], "chang": [7, 8, 10, 13, 19, 29, 37, 38, 39, 40, 42, 52, 56, 58, 63, 100, 106, 108, 109, 111, 112, 113, 114, 115, 116, 129, 131, 133], "bands2": 7, "beta_cf": 7, "beta_pw": 7, "beta_bw": 7, "nan": [7, 10, 13, 39, 53, 65, 73, 75], "77397": 7, "007925": 7, "682203": 7, "171": [7, 11, 133], "plot_data_export": [7, 11, 133], "fiterror": [8, 65], "help": [8, 9, 10, 15, 19, 20, 24, 46, 52, 53, 58], "core": [8, 21, 29, 46, 48, 50, 52, 58, 64, 66, 67, 83], "procedur": [8, 14, 35, 47, 48, 50, 52, 56, 108, 109, 130, 131], "rare": 8, "onli": [8, 10, 20, 39, 41, 46, 47, 50, 51, 52, 53, 54, 58, 64, 65, 66, 67, 68, 69, 78, 90, 96, 101, 108, 109, 110, 113, 114, 119, 120, 128], "happen": [8, 16, 24, 51, 52, 58], "noisi": [8, 52, 58, 64, 65, 66, 67], "solut": [8, 16, 111], "should": [8, 9, 14, 24, 28, 33, 34, 39, 45, 48, 49, 50, 51, 52, 54, 56, 57, 63, 64, 65, 66, 67, 105, 108, 109, 110, 113, 114, 119, 120, 132], "lead": [8, 24, 35, 41, 46, 47, 48, 49, 51, 52, 54, 58, 64, 65, 66, 67, 108, 109], "clean": 8, "exit": 8, "encod": 8, "null": [8, 10, 64, 66, 67], "onward": 8, "nlv": [8, 10, 15, 21, 28, 29, 30, 39, 40, 41, 51, 52, 81, 108, 109, 110], "far": [8, 9, 15, 30, 41, 45, 50, 51, 52, 53], "provid": [8, 29, 30, 35, 53, 56, 64, 65, 66, 67, 83, 95, 96, 101, 108, 109, 125, 126], "These": [8, 14, 16, 21, 24, 28, 30, 33, 35, 37, 45, 47, 48, 52, 53, 56, 58, 64, 109, 130, 131, 132], "n_null_": [8, 10, 64, 66, 67], "null_inds_": [8, 10, 64, 66, 67], "trick": [8, 52], "iter": [8, 28, 47, 48, 61, 103, 104], "_maxfev": 8, "normal": [8, 33, 47, 105], "usag": [8, 47, 100], "would": [8, 9, 19, 29, 45, 58], "never": 8, "hack": 8, "reproduc": 8, "unsuccess": [8, 48, 64, 65, 66, 67], "mani": [8, 9, 10, 29, 33, 34, 40, 46, 48, 50, 52, 56, 58, 64, 65, 66, 67, 131], "possibl": [8, 20, 28, 33, 34, 40, 41, 52, 64, 65, 66, 67, 80, 105, 106, 108, 131], "reason": [8, 35, 40, 45, 58], "least": [8, 58], "step": [8, 9, 10, 13, 14, 21, 28, 51, 52, 103, 104, 108, 131, 132], "algorithm": [8, 24, 44, 46, 48, 51, 54, 55, 56, 57, 65, 80, 89, 98, 130, 131, 132, 133], "small": [8, 24, 46, 50, 51, 52, 54, 57, 119, 120], "investig": [8, 9, 15, 19, 20, 32, 37, 38, 39, 40, 41, 52, 53, 58], "bit": [8, 52], "stop": [8, 28, 103], "catch": [8, 130], "except": [8, 33, 39], "actual": [8, 13, 16, 30, 33, 40, 41, 46, 58], "websit": 8, "purpos": [8, 24, 45, 47], "set_debug_mod": [8, 48, 64, 65, 66, 67], "due": [8, 15, 30, 34, 56, 58], "aspect": [8, 33, 34, 37, 39, 41, 58, 87, 130], "tweak": [8, 56], "known": [8, 52, 58], "caught": 8, "outsid": 8, "unanticip": 8, "unsur": 8, "open": [8, 34, 58], "095": [8, 11, 133], "plot_failed_fit": [8, 11, 133], "materi": [9, 53, 56], "ll": [9, 10, 21, 28, 52], "electrophysiolog": [9, 41, 58, 130, 131], "dimens": 9, "condit": [9, 10, 48, 58], "trial": [9, 10, 50, 51, 52, 53, 58], "multi": [9, 21], "dimension": 9, "n_condit": [9, 83], "n_freq": [9, 50, 64, 66, 67, 83, 108, 110], "epoch": 9, "n_epoch": 9, "n_subject": 9, "n_region": 9, "matter": [9, 40, 57], "exact": [9, 41, 46, 50, 125, 131], "inherit": [9, 50, 64, 66, 67], "obj": [9, 10], "combine_model_obj": [9, 10, 56], "create_freq": 9, "param": [9, 13, 16, 19, 21, 28, 29, 30, 48, 51, 52, 53, 64, 65, 66, 67, 77, 108], "param_sampl": [9, 52, 53, 108], "load_group_model": 9, "imagin": [9, 13], "experi": 9, "sever": [9, 21, 41, 54], "someth": [9, 13, 15, 34, 58, 73], "n_time": 9, "calcul": [9, 14, 15, 30, 41, 47, 52, 58, 64, 65, 66, 67, 68, 69, 70, 92, 108, 109, 111, 112, 119, 120, 132], "becom": [9, 58], "ap_opt": [9, 28, 52, 108], "pe_opt": [9, 28, 108], "149": 9, "goal": [9, 30, 41, 45, 47, 51, 53, 58], "effici": [9, 131], "track": [9, 28, 47, 54, 73, 75], "pre": [9, 24, 65], "maintain": [9, 24, 56, 67], "input": [9, 10, 19, 20, 21, 28, 29, 34, 46, 48, 50, 52, 54, 56, 61, 64, 65, 66, 67, 73, 75, 76, 78, 80, 86, 87, 98, 100, 101, 107, 113, 114, 128], "intern": [9, 14, 46, 47, 48, 50, 56, 64, 65, 66, 67], "list": [9, 10, 19, 21, 28, 29, 48, 50, 53, 56, 58, 59, 61, 64, 65, 66, 67, 81, 82, 83, 86, 87, 90, 91, 95, 96, 97, 98, 100, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 128, 129, 131, 132], "0x7fc5d76cbfd0": 9, "0x7fc5d76cbf40": 9, "0x7fc5d76cb520": 9, "length": [9, 10, 20, 29, 33, 50, 61, 83, 103, 108, 109, 110, 132], "equival": [9, 10, 45, 49, 56, 57, 114, 119, 120, 130, 131], "outermost": 9, "setup": 9, "onc": [9, 20, 24, 46, 47, 48, 53, 58], "simpl": [9, 24, 49, 53], "appear": [9, 34, 52], "4f": [9, 30, 41, 46], "2500": [9, 30], "6507": 9, "4510": 9, "properti": [9, 10, 13, 15, 16, 33, 34, 39, 40, 45, 49, 53, 58, 63, 64, 65, 66, 67, 119, 120, 130, 131], "broader": [9, 20, 24, 45, 49], "directori": [9, 64, 65, 66, 67, 121, 122, 123, 124, 131], "isdir": 9, "mkdir": 9, "name": [9, 28, 29, 46, 48, 50, 57, 62, 64, 65, 66, 67, 131], "subj_01_cond_0": 9, "file_nam": [9, 20, 48, 52, 62, 64, 65, 66, 67, 121, 122, 123, 124, 131], "listdir": 9, "all_fg": 9, "997": 9, "003": [9, 58], "451": 9, "29": [9, 49], "000": [9, 26, 40, 43, 52], "005": [9, 30, 108, 109, 110], "004": [9, 15], "701": [9, 11, 133], "plot_fit_models_3d": [9, 11, 133], "etc": [10, 45, 56, 57, 66], "aris": [10, 58], "offer": [10, 40, 41, 48, 50, 53, 58, 131], "average_group": [10, 56], "compare_model_obj": [10, 56], "powers_1": [10, 30], "powers_2": [10, 30], "01": [10, 15, 17, 22, 24, 29, 31, 36, 42, 44, 49, 50, 55, 65, 88, 98, 109, 118, 133], "powers_3": 10, "11": [10, 16, 19, 39, 41, 46, 50, 52, 133], "fm1": [10, 24, 30, 39, 45, 86], "fm2": [10, 24, 30, 39, 45, 86], "fm3": [10, 86], "copi": [10, 40, 48, 64, 65, 66, 67, 131], "meta": [10, 64, 65, 66, 67, 132], "ensur": [10, 53], "meet": [10, 52], "criterion": [10, 48, 52], "get_group": [10, 64, 66, 67], "request": [10, 20, 50, 53, 56, 64, 65, 66, 67, 84, 108, 109], "nfg": [10, 50], "qualiti": 10, "control": [10, 19, 20, 21, 39, 64, 65, 66, 67, 90, 98, 100, 101, 119, 120, 130, 131], "futur": [10, 56, 58, 131], "clear": [10, 35, 49, 64, 65, 66, 67], "liter": 10, "th": [10, 15, 49], "dure": [10, 48, 64], "despit": [10, 33, 41, 58], "still": [10, 24, 35, 52, 53, 56, 58], "fitresult": [10, 48, 50, 56, 64, 65, 66, 67], "gaussian_param": [10, 29, 46, 50, 64, 65, 66, 67, 71, 72, 73, 78], "boolean": [10, 48, 65, 88, 90, 95, 98, 100, 101], "mask": [10, 114], "final": [10, 14, 15, 21, 30, 47, 48, 52, 58, 131], "otherwis": [10, 16, 50, 52, 58], "had": [10, 54], "afm": 10, "avg_method": [10, 84, 85], "median": [10, 84, 85, 90, 96, 101], "645": [10, 11, 133], "plot_manipulating_model": [10, 11, 133], "611": 11, "scipi": [13, 131], "stat": 13, "spearmanr": 13, "annot": [13, 16, 45, 47], "plot_annotated_model": [13, 16, 45], "stepper": [13, 16, 21, 28, 104, 108], "param_it": [13, 16, 21, 108], "compute_time_const": [13, 16], "compute_knee_frequ": [13, 16], "character": [13, 49, 53, 131], "f": [13, 24, 35, 41, 45, 49, 57, 114, 119, 120, 130, 131], "00231232": 13, "00125184": 13, "annotate_peak": [13, 16, 45, 88], "annotate_aperiod": [13, 16, 45, 88], "common": [13, 16, 24, 34, 39, 40, 41, 45, 46, 130, 131], "exp_step": 13, "ap_param": [13, 21, 28, 39, 46, 51, 52, 108], "f_rotat": [13, 30, 108, 109, 110, 111, 112, 113, 114], "log_pow": [13, 21, 24, 28, 29, 30, 39, 40, 41, 45, 98, 100, 101], "mode": [13, 15, 20, 29, 49, 52, 54, 58, 64, 65, 66, 67, 79, 108, 109, 113, 114, 126, 132], "ap_valu": 13, "correl": [13, 39, 58, 134], "spearmanrresult": 13, "9999999999999999": 13, "pvalu": 13, "match": [13, 14, 39, 54, 58], "highli": 13, "rotat": [13, 57, 108, 109, 110, 111, 112, 113, 114], "almost": 13, "anim": [13, 134], "independ": [13, 35, 46, 47, 50, 58, 130], "baselin": [13, 30, 40, 41], "freqs2": [13, 24, 45], "powers2": [13, 19, 21, 24, 45], "125": [13, 45], "75": [13, 14, 21, 24, 28, 30, 40, 41, 54, 106, 108, 119, 120], "0210882": 13, "88552889": 13, "01325761": 13, "obviou": 13, "abstract": 13, "quantifi": [13, 51, 58], "formal": [13, 45, 130], "intuit": 13, "estim": [13, 47, 58, 125, 131], "knee_frequ": 13, "321017221359204": 13, "direct": [13, 45, 131, 132], "relationship": [13, 30, 45, 57], "auto": [13, 132], "empir": [13, 16], "deriv": [13, 58, 111], "time_const": 13, "010018863343319995": 13, "309": [13, 17, 133], "separ": [14, 16, 45, 58, 65, 95, 130], "detail": [14, 45, 48, 56, 58, 66, 100, 110, 132], "dive": [14, 20, 48], "modeled_spectrum": 14, "origin": [14, 15, 24, 30, 33, 45, 47, 48, 52, 56, 58, 70, 111, 131], "modeled_spectrum_": [14, 47, 48, 52, 56, 64, 65], "red": [14, 20, 45, 47], "getter": 14, "blue": [14, 20, 21, 45, 47], "linestyl": [14, 47], "green": [14, 21, 45, 47], "earlier": 14, "log10": [14, 20, 29, 30, 45, 64, 65, 66, 67, 85, 88, 95], "aim": 14, "certain": [14, 58], "accept": [14, 50, 51, 61], "wherebi": [14, 16, 29, 33, 35, 45, 53, 58, 130], "user": [14, 29, 48, 52, 64, 65, 66, 67, 80], "unlog": 14, "aperiodic_compon": [14, 64, 65, 66, 67], "peak_compon": [14, 64, 65, 66, 67], "sum": [14, 33], "add": [14, 19, 20, 21, 28, 29, 41, 47, 48, 49, 56, 58, 61, 63, 64, 65, 66, 67, 95, 100, 105, 108, 109, 110], "dash": [14, 20, 45, 47], "hand": [14, 50, 54], "kei": [14, 16, 50, 57, 58, 66, 131], "post": [14, 24, 58, 64, 108, 109], "hoc": [14, 58], "benefit": [14, 53, 131], "529": [14, 17, 133], "plot_data_compon": [14, 17, 133], "though": [15, 33, 39, 40, 45, 47, 49, 58, 130, 131], "wrong": [15, 51], "better": [15, 24, 46, 47, 52, 58, 64, 65, 66, 67], "insight": 15, "analyz": [15, 24, 34, 37, 39, 41, 52, 57, 58, 131], "fairli": [15, 52], "even": [15, 24, 40, 41, 45, 58, 132], "move": [15, 30, 52, 56, 58, 115, 116, 125, 131], "maxim": [15, 52], "12": [15, 20, 21, 28, 34, 41, 47, 48, 50, 53, 54, 63, 64, 65, 66, 67, 103, 104], "stand": 15, "problemat": [15, 48, 65], "reveal": 15, "big": [15, 56], "surpris": 15, "scenario": [15, 39, 41], "form": [15, 45, 49], "evenli": 15, "uneven": 15, "mismatch": 15, "especi": [15, 45, 51], "bunch": 15, "sign": [15, 130], "worth": [15, 52], "235": [15, 17, 133], "plot_freq_by_freq_error": [15, 17, 133], "set_random_se": [16, 33, 34, 35, 39, 40, 45, 52, 53], "height": [16, 29, 45, 46, 47, 48, 50, 52, 54, 56, 64, 65, 66, 67, 78, 108, 109, 131, 132], "turn": [16, 40, 56, 58, 66, 67], "interpret": [16, 29, 33, 34, 35, 39, 40, 41, 57], "center": [16, 19, 21, 28, 29, 39, 41, 45, 46, 50, 53, 58, 64, 65, 66, 67, 96, 97, 100, 103, 104, 105, 108, 109, 130, 131], "bandwidth": [16, 19, 24, 29, 40, 41, 45, 46, 48, 51, 52, 54, 58, 64, 65, 66, 67, 71, 72, 73, 74, 75, 77, 97, 108, 109, 130, 131], "put": [16, 45, 58, 130, 131], "featur": [16, 45, 48, 50, 53, 56, 58, 64, 65, 66, 67, 131], "studi": [16, 53], "symmetr": 16, "approxim": [16, 24, 45, 46, 51, 52, 54, 58, 125, 130], "observ": [16, 33, 58], "empric": 16, "quit": 16, "captur": [16, 24, 45, 49], "simplifi": 16, "asymmetr": [16, 35, 58], "175": 16, "0024": 16, "0014": 16, "86": 16, "295": 16, "80": [16, 24, 50, 52], "23": [16, 46, 50, 52, 131, 132], "310": [16, 52], "9998": 16, "0037": 16, "yet": [16, 45, 56, 131], "serv": [16, 35, 52, 53], "accur": [16, 24, 45, 58], "interact": [16, 131], "width": [16, 24, 29, 35, 45, 46, 48, 51, 52, 54, 64, 65, 66, 67, 80, 131, 132], "adjac": [16, 51, 119, 120], "construct": [16, 58], "correct": [16, 39, 41], "know": [16, 35, 39, 41, 45, 48, 52, 58], "perhap": [16, 52, 58], "domain": [16, 24, 33, 35, 45, 58], "561": [16, 17, 133], "634": 17, "param_jitt": 19, "hypothet": 19, "simplic": 19, "grand": 19, "2400a8": 19, "00700b": 19, "g1_ap": 19, "g2_ap": 19, "g1_peak": 19, "g2_peak": 19, "powers1": [19, 21, 24, 45], "either": [19, 21, 24, 34, 39, 48, 119, 120], "g1_alpha": 19, "g2_alpha": 19, "x": [19, 29, 45, 57, 90, 92, 98, 100, 101, 131, 132], "axi": [19, 20, 40, 45, 61, 65, 90, 92, 95, 98, 100, 101, 113, 114], "y": [19, 29, 45, 65, 92, 95, 98, 100, 101, 130], "circl": 19, "aps1": 19, "aps2": 19, "control_offset": [19, 90], "tune": [19, 20, 21, 44, 51, 55, 56, 58, 64, 65, 78, 106, 108, 109, 118, 133], "log_freq": [19, 21, 28, 29, 30, 39, 40, 41, 90, 92, 98, 100, 101], "qualit": [19, 20, 52], "real": [19, 34, 39, 40], "statist": [19, 33, 53], "signific": [19, 56], "806": [19, 22, 49, 133], "plot_model_compon": [19, 22, 133], "deeper": [20, 48, 51], "22": [20, 28, 29, 41, 48, 52], "add_data": [20, 47, 48, 64, 65, 66, 67], "displai": [20, 24, 33, 35, 48, 58, 64, 65, 66, 67], "toggl": 20, "plot_aperiod": [20, 65, 95], "overlap": [20, 21, 45, 46, 58], "plot_peak": [20, 45, 65, 95], "string": [20, 39, 48, 50, 100, 107], "four": [20, 41], "dot": [20, 45, 65, 91, 95, 97], "outlin": [20, 65, 95], "vertic": [20, 45], "whole": [20, 30, 45, 49, 58], "peak_plot": 20, "Or": 20, "easier": 20, "highlight": [20, 21, 39], "legend": [20, 21, 65, 90, 91, 95, 96, 97, 98, 101], "save_fig": [20, 66, 67], "figur": [20, 21, 40, 41, 48, 52, 60, 61, 62, 64, 65, 66, 67, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102], "filenam": 20, "617": [20, 22, 133], "plot_model": [20, 22, 133], "plot_spectra_shad": [21, 39, 40, 41], "extra": [21, 48, 49, 50, 56, 131], "built": [21, 52], "ap_1": 21, "ap_2": 21, "1d": [21, 50, 64, 65, 66, 67, 68, 70, 71, 74, 76, 78, 83, 85, 92, 95, 98, 99, 100, 101, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 129, 131], "design": [21, 44, 45, 58], "freq_low": 21, "freq_high": 21, "shade_color": [21, 39, 40, 41, 100], "place": 21, "advantag": 21, "fade": 21, "altogeth": [21, 34, 47], "freqs_al10": 21, "powers_al10": 21, "cf_step": [21, 28], "freqs_al": 21, "powers_": 21, "onto": 21, "linewidth": [21, 39, 40], "fontweight": [21, 39, 40], "bold": [21, 39, 40], "text": [21, 39, 54, 56, 127, 132], "843": [21, 22, 133], "plot_power_spectra": [21, 22, 33, 35, 133], "266": 22, "interpolate_spectrum": 24, "neurodsp": [24, 33, 34, 35, 46], "sim_combin": [24, 33, 35], "filt": [24, 34], "filter_sign": [24, 34], "compute_spectrum": [24, 35], "artifact": 24, "impact": [24, 52], "awai": [24, 58, 119, 120], "rid": 24, "charact": 24, "subsequ": 24, "narrow": [24, 34, 41, 52], "freqs1": [24, 45], "prepar": 24, "interp_rang": [24, 119, 120], "58": [24, 119, 120], "62": [24, 29, 119, 120], "freqs_int1": 24, "powers_int1": 24, "ahead": 24, "0299": 24, "0184": 24, "734": 24, "9996": [24, 52], "0064": 24, "harmon": [24, 58], "500": [24, 29, 33, 58], "120": 24, "118": 24, "122": [24, 56], "freqs_int2": 24, "powers_int2": 24, "9362": 24, "420": 24, "9466": 24, "4713": 24, "486": 24, "84": 24, "9995": 24, "0045": 24, "cours": [24, 58], "been": [24, 34, 40, 41, 45, 46, 47, 52, 58, 64, 65, 66, 67, 131], "ignor": 24, "rest": [24, 33, 45], "inde": [24, 58], "0273": 24, "0168": 24, "735": 24, "81": [24, 53], "011": 24, "0061": 24, "9373": 24, "422": 24, "6075": 24, "4718": 24, "487": 24, "85": [24, 46, 50, 52], "757": 24, "99": [24, 52], "499": 24, "Such": 24, "unfortun": 24, "tri": 24, "overli": [24, 29, 33, 39, 40, 45, 52, 58, 64, 65, 66, 67], "neither": [24, 30, 45], "troubl": [24, 53], "concept": [24, 29, 36, 57, 58, 133], "miss": [24, 54, 126, 127], "pull": [24, 56], "down": [24, 30, 45], "think": [24, 34, 51, 52], "posit": [24, 113, 114, 115, 116], "neg": [24, 49, 58, 113, 114, 115, 116], "recommend": [24, 34, 46, 47, 48, 49, 51, 52, 53, 54, 58, 131, 132], "n_second": [24, 33, 34, 35], "1000": [24, 33, 34, 35], "signal": [24, 32, 35, 37, 57, 131], "sim_powerlaw": [24, 33, 34, 35], "sim_oscil": [24, 33, 35], "comp_var": 24, "sig": [24, 34, 35], "sig_filt": 24, "63": 24, "remove_edg": 24, "powers_pr": 24, "powers_post": 24, "leav": [24, 47], "dip": 24, "caus": 24, "warn": [24, 46, 48, 51, 52, 54, 56, 64, 65, 66, 67, 113, 131], "bound": [24, 46, 51, 52, 54, 131], "too": [24, 46, 51, 52, 54], "overfit": [24, 46, 51, 54], "2x": [24, 46, 51, 52, 54], "4709": 24, "8475": 24, "08": [24, 39, 44, 52, 55, 63, 64, 65, 71, 73, 106, 108, 118, 133], "054": 24, "7157": 24, "3081": 24, "inaccur": 24, "064": [24, 25, 133], "plot_line_nois": [24, 25, 133], "ground": [28, 29, 52], "truth": [28, 29, 52], "themselv": [28, 40, 50], "simparam": [28, 29, 30, 107, 108, 109, 110, 113, 115], "tupl": [28, 46, 60, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 80], "field": [28, 45, 49, 50, 58, 64, 65, 66, 67, 107, 125, 130], "periodic_param": [28, 29, 30, 53, 81, 108, 109, 110], "n_spectra": [28, 29, 50, 52, 53, 108, 110], "pe_param": [28, 51, 108], "sim_param": [28, 107, 108, 109, 110, 113, 115], "return_param": [28, 29, 30, 108, 109, 110, 113, 115], "cur_param": 28, "jitter": [28, 105], "probabl": [28, 106], "sampler": 28, "choos": [28, 48, 51, 52, 53, 56, 58, 131], "prob": [28, 106], "simualt": 28, "conjunct": 28, "stabl": [28, 56], "held": [28, 104], "constant": [28, 52, 104], "scale": [28, 45, 48, 49, 50, 52, 58, 64, 65, 66, 67, 101, 105], "401": [28, 31, 133], "plot_sim_param": [28, 31, 133], "emploi": 29, "conceptu": [29, 32, 33, 37, 38, 40, 41, 56, 58, 130], "three": [29, 40], "gaussian": [29, 45, 46, 47, 50, 52, 58, 64, 65, 66, 67, 78, 105], "modifi": [29, 64, 65, 66, 67], "infer": [29, 58, 108, 109], "flat": [29, 33, 47, 109], "sett": 29, "written": [29, 52, 56, 131], "success": [29, 108], "entri": [29, 63], "equal": [29, 33, 50], "taken": [29, 33, 34, 47, 48, 58, 119, 120], "sp": [29, 108, 113, 115], "tom": [29, 48, 52], "opt": [29, 48, 52], "anaconda3": [29, 48, 52], "lib": [29, 48, 52], "python3": [29, 48, 52], "site": [29, 45, 48, 52, 56, 131], "packag": [29, 48, 52, 58, 131], "func": 29, "runtimewarn": 29, "overflow": 29, "encount": 29, "descript": [29, 33, 44, 46, 50, 52, 53, 55, 58, 65, 88, 98, 109, 118, 130, 133], "plot_simulated_power_spectra": [29, 31, 133], "understand": 30, "context": [30, 37, 38, 39, 40, 58, 64], "framework": [30, 39], "outcom": [30, 47], "rotate_spectrum": 30, "translate_spectrum": 30, "rotate_sim_spectrum": 30, "translate_sim_spectrum": 30, "compute_rotation_offset": 30, "compute_rotation_frequ": 30, "delta_exp": 30, "r_power": 30, "off_chang": 30, "induc": [30, 112], "33": [30, 46, 55, 133], "delta_offset": [30, 112, 115, 116], "t_power": 30, "ve": [30, 45], "updat": [30, 40, 47, 48, 51, 52, 57, 64, 65, 66, 67, 107, 113, 115, 131], "r_s_power": 30, "r_param": 30, "3252574989159953": 30, "t_s_power": 30, "t_param": 30, "care": 30, "b": [30, 45, 49, 111, 125, 131, 132], "c": [30, 45, 111, 131], "delta": [30, 34, 39, 45, 107, 114], "delta_exp_1": 30, "delta_exp_2": 30, "exp_diff": [30, 41], "exp_diff_mea": 30, "f_rotation_1": 30, "f_rotation_2": 30, "off_diff": [30, 41], "off_diff_2": 30, "1747": 30, "cancel": 30, "formula": 30, "31": [30, 41, 49, 52], "mark": 30, "axvlin": 30, "line2d": 30, "0x7fc5ceae2a00": 30, "676": [30, 31, 133], "plot_transform": [30, 31, 133], "471": 31, "seek": [32, 35, 37, 53], "motiv": [32, 33, 35, 45, 56, 57, 58, 131, 133], "idea": [32, 33, 34, 35, 37, 39, 45, 50, 56, 58], "compris": [32, 33, 37, 45, 58, 108, 109], "notion": [32, 37, 39, 58], "digit": [32, 33, 37], "rhythmic": [32, 34, 35, 36, 37, 40, 45, 58, 130, 133], "filter": [32, 36, 37, 63, 133], "central": 33, "claim": [33, 35], "suffici": 33, "state": [33, 48, 53], "tell": 33, "u": [33, 45, 52, 58], "repres": [33, 34, 39, 47, 51, 52, 73, 75, 91, 97], "similar": [33, 46, 50, 51, 52, 58, 130, 131], "create_tim": [33, 34, 35], "compute_spectrum_welch": 33, "plot_time_seri": [33, 34, 35], "consist": [33, 34, 39, 40, 41, 45, 48, 49, 52, 53, 58, 87], "21": [33, 34, 39, 40, 45, 46, 47, 48, 50, 51, 52, 53], "s_rate": [33, 34], "n_point": 33, "arguabl": 33, "simplest": 33, "dirac_sig": 33, "non": [33, 34, 35, 45, 46, 56, 58, 125, 131], "thu": [33, 48, 130], "proof": 33, "principl": [33, 58], "impli": [33, 58], "transient": 33, "broadli": [33, 46, 47, 52, 58], "lot": [33, 56], "basi": 33, "sine": [33, 35], "wave": [33, 35, 58], "broadband": [33, 34, 45], "drawn": 33, "exhibit": [33, 34, 49, 58], "pattern": [33, 35, 39, 45, 58], "uncorrel": 33, "element": [33, 65, 95], "white_sig": 33, "systemat": [33, 39, 40, 58], "decreas": [33, 39, 45, 48, 58], "pink_sig": 33, "visibl": 33, "rhythm": [33, 35, 58], "nevertheless": [33, 53], "tempor": 33, "burst": [33, 58], "stick": [33, 131], "osc_sig": 33, "combined_sig": 33, "contribut": [33, 35, 41, 45, 51], "alon": 33, "promin": [33, 58], "absent": 33, "automat": 33, "427": [33, 36, 133], "plot_doyouevenoscil": [33, 36, 133], "corollari": 34, "arbitrarili": 34, "entail": 34, "pure": [34, 35], "low_gamma": 34, "high_gamma": 34, "pink": 34, "f_rang": [34, 39, 40, 41, 52, 129], "band_sig": 34, "bandpass": 34, "adjust": [34, 130], "xlim": [34, 35, 39], "ylim": 34, "xlabel": 34, "arbitrari": 34, "dynam": [34, 58, 125], "recal": [34, 48], "decompos": 34, "sinusoid": [34, 35, 58], "decomposit": 34, "abrupt": 34, "sig_comp1": 34, "sig_comp2": 34, "shift": [34, 39], "sig_delta_ap": 34, "hstack": 34, "gamma": [34, 39, 45], "affect": [34, 39, 40, 45], "isol": [34, 47, 48, 64, 65, 66, 67], "comparison": [34, 40, 41, 58, 131], "mi": 34, "extent": [34, 51], "remain": 34, "presum": 34, "ascertain": 34, "025": [34, 36, 50, 52, 133], "plot_ifyoufiltertheywillcom": [34, 36, 133], "behind": 35, "dissoci": 35, "ongo": [35, 58], "sine_wav": 35, "close": [35, 62], "complic": 35, "meant": [35, 54, 57], "closer": 35, "_may_": 35, "everi": 35, "sawtooth": 35, "although": [35, 56], "discuss": [35, 45, 53, 58, 131, 132], "cycl": [35, 58], "fundament": 35, "numer": 35, "550": [35, 36, 133], "plot_wigglypeak": [35, 36, 133], "002": [36, 58], "auto_motiv": [36, 42, 43], "methodolog": [37, 40, 58], "conflat": [37, 38, 39, 42, 58, 63, 100, 109, 129, 133], "variou": [37, 38], "ratio": [37, 38, 42, 63, 100, 109, 118, 129, 133], "auto_motivations_python": 37, "auto_motivations_jupyt": 37, "recent": [39, 48, 58, 131], "develop": [39, 57, 131], "get_band_peak": [39, 53, 56, 73], "predefin": [39, 41, 58, 131], "increas": [39, 45, 58], "higher": 39, "entiti": [39, 56, 130], "distinct": [39, 45, 58, 131], "altern": [39, 41, 46], "hypothesi": [39, 58], "manner": [39, 52, 58], "hypothes": [39, 58], "t_set": 39, "shade_col": 39, "e8dc35": 39, "46b870": 39, "1882d9": 39, "a218d9": 39, "e60026": 39, "exp_templ": 39, "pw_templat": 39, "throughout": [39, 45], "compare_exp": 39, "exp1": 39, "exp2": 39, "compare_peak_pw": 39, "pw1": 39, "pw2": 39, "compare_band_pw": 39, "focu": [39, 58], "clariti": 39, "pe_g1": 39, "pe_g2": 39, "g1_spectrum_band": 39, "g2_spectrum_band": 39, "fm_bands_g1": 39, "fm_bands_g2": 39, "_spectrum_flat": [39, 47], "ag": [39, 58], "18": [39, 46, 47, 48, 50, 51, 52, 55, 133], "neglig": 39, "give": [39, 52, 64, 65, 66, 67, 131], "g1_spectrum_pa": 39, "g2_spectrum_pa": 39, "fm_pa_g1": 39, "fm_pa_g2": 39, "determin": [39, 40], "saw": 39, "wherea": [39, 48], "parsimoni": [39, 52], "enough": [39, 47, 58], "differenti": 39, "conclud": [39, 40, 54], "ill": 39, "pose": 39, "disentangl": 39, "cannot": [39, 51, 58, 108, 109], "great": 39, "came": [39, 50, 64, 66, 67], "087": [39, 42, 133], "plot_bandbyband": [39, 42, 133], "rel": [40, 45, 47, 48, 49, 50, 52, 53, 58, 64, 65, 66, 67, 80, 131], "propos": 40, "br": 40, "frac": [40, 45, 49], "avg": [40, 84, 85], "complet": [40, 47, 130], "publish": 40, "github": [40, 52, 53, 56, 125, 131], "variabl": [40, 48, 51, 58, 131], "icf": 40, "ipw": 40, "ibw": 40, "0365c0": [40, 41], "f_re": [40, 41, 50], "35": [40, 41, 52, 53, 58], "commonli": [40, 52, 58, 64, 65, 66, 67], "exactli": [40, 41, 46, 58, 131], "calc_band_ratio": 40, "low_band": 40, "high_band": 40, "tbr": 40, "74": [40, 50], "deepcopi": 40, "upd": 40, "5041": 40, "61": 40, "212": [40, 51, 55, 133], "8845": 40, "388": 40, "1403": 40, "609": 40, "item": [40, 41, 48, 56], "title_set": 40, "set_xlim": 40, "set_ylim": 40, "xaxi": [40, 41], "set_vis": [40, 41], "off": [40, 58, 90, 91, 130], "empti": [40, 73], "wspace": 40, "ident": [40, 56], "condens": [40, 52], "exp_spectra": 40, "w": [40, 45], "1099": 40, "1417": 40, "ttbr": 40, "obtain": 40, "suppos": [40, 41], "insuffici": 40, "applic": [40, 52, 57, 58], "read": [40, 45], "580": [40, 42, 133], "plot_bandratio": [40, 42, 133], "implement": [41, 58, 130, 131], "quantit": [41, 45, 52], "misinterpret": [41, 58], "face": 41, "complex": [41, 49, 50], "categor": 41, "briefli": [41, 47, 53], "recap": 41, "minimum": [41, 48, 52, 53, 54, 71, 72, 73, 74, 75, 77, 131, 132], "concurr": 41, "alter": 41, "ap_bas": 41, "pe_bas": 41, "pw_diff": 41, "311": 41, "cf_diff": 41, "126": 41, "87": [41, 49, 52], "powers_bas": 41, "powers_pw": 41, "powers_cf": 41, "powers_off": 41, "powers_exp": 41, "all_pow": 41, "reshap": 41, "style": [41, 64, 65, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101], "Then": 41, "pair": 41, "calc_avg_pow": 41, "avg_pow": 41, "base_alpha": 41, "0171": 41, "easili": 41, "analogi": 41, "pe_base_na": 41, "off_diff_na": 41, "321": 41, "exp_diff_na": 41, "powers_noa_bas": 41, "all_powers_na": 41, "base_noa_pow": 41, "886": [41, 42, 133], "plot_periodicaperiodicfeatur": [41, 42, 133], "553": 42, "offici": 44, "introduc": [44, 45, 47, 49, 50, 51, 52, 53, 131], "troubleshoot": [44, 51, 55, 64, 65, 78, 106, 108, 109, 118, 133], "09": [44, 55, 64, 65, 108, 109, 126, 127, 133], "auto_tutorials_python": 44, "auto_tutorials_jupyt": 44, "welcom": [45, 131], "justifi": 45, "skip": 45, "past": [45, 49, 58], "itself": [45, 46, 56, 131], "semi": 45, "linear": [45, 46, 49, 64, 65, 66, 67, 83, 95, 98, 108, 109, 110, 117, 119, 120, 130, 131], "trend": 45, "hallmark": 45, "restat": 45, "sai": [45, 50], "revisit": 45, "peak_kwarg": [45, 65, 95], "bump": [45, 52], "enact": 45, "lai": 45, "own": [45, 58, 119, 120], "influenc": [45, 58], "co": 45, "unit": [45, 46, 48, 64, 65, 66, 67, 80], "horizont": [45, 49], "wherev": 45, "g": [45, 65, 131], "_n": 45, "chi": [45, 49, 130], "translat": [45, 115, 116], "curv": [45, 49], "diagon": 45, "less": [45, 50, 58], "k": [45, 49], "log_": 45, "formul": [45, 113, 114, 130], "bend": [45, 49, 58, 130], "technic": 45, "lorentzian": [45, 125], "exponenti": [45, 48, 125, 130], "choic": 45, "straight": 45, "equat": [45, 48, 49, 111], "af": 45, "later": [45, 47, 52, 131], "presenc": [45, 51], "On": 45, "g_n": 45, "summar": [45, 131], "quad": 45, "525": [45, 52, 55, 133], "plot_01": [45, 55, 133], "modeldescript": [45, 55, 133], "introduct": 46, "begin": 46, "load_example_data": [46, 47, 48, 49, 50, 53, 56], "npy": [46, 47, 48, 49, 50, 53], "hold": [46, 48, 49, 64, 65, 66, 67], "relev": [46, 48, 65, 130, 132], "scikit": [46, 131], "agnost": [46, 58], "produc": [46, 64, 65, 66, 67], "erron": [46, 48], "49": [46, 47, 50, 52, 53], "6185": 46, "7160": 46, "36": 46, "044": 46, "59": [46, 52], "17": [46, 49, 50], "230": 46, "88": [46, 52], "331": [46, 51], "9829": 46, "0356": 46, "conveni": [46, 50], "anyth": 46, "convent": [46, 48], "r2_": 46, "61849464": 46, "71602468": 46, "36187745": 46, "04444653": 46, "58739815": 46, "17320508": 46, "23009279": 46, "87553548": 46, "24842747": 46, "33142173": 46, "84617078": 46, "03560699607369899": 46, "9828918511262451": 46, "72": 46, "document": [46, 48, 50, 57], "ex": [46, 52, 109], "assess": [46, 52, 132], "side": [46, 64, 65, 66, 67, 119, 120], "gaussian_params_": [46, 52, 64, 65], "gauss": 46, "79": 46, "44": 46, "42": 46, "grab": [46, 50], "gather": 46, "fre": 46, "unpack": 46, "fit_error": 46, "gauss_param": [46, 52], "specparamresult": 46, "squar": [46, 47, 48, 50, 52, 65, 78], "97915803": 46, "79369908": 46, "16895001": 46, "43776774": 46, "33414213": 46, "42308539": 46, "237": [46, 55, 133], "plot_02": [46, 55, 133], "psdmodel": [46, 55, 133], "overview": 47, "subtract": 47, "candid": [47, 48, 131], "plot_annotated_peak_search": 47, "freqs_2": [47, 48], "spectrum_2": [47, 48], "intermedi": 47, "took": 47, "come": [47, 53, 56, 58, 73, 75, 125], "recreat": 47, "isn": 47, "ultim": [47, 58, 131], "longer": [47, 49, 56, 58, 64, 65, 66, 67, 131], "maximum": [47, 48, 52, 64, 65, 66, 67, 80, 131], "halt": [47, 48], "guess": 47, "unless": [47, 66, 131], "reach": [47, 48], "_peak_fit": 47, "_spectrum_peak_rm": 47, "made": 47, "_ap_fit": 47, "last": [47, 48, 56], "stage": [47, 48], "3713": 47, "1239": 47, "685": 47, "32": [47, 49, 52], "138": 47, "9909": 47, "0332": 47, "primarili": [47, 56], "henc": 47, "privat": [47, 48], "properli": [47, 48, 56], "017": [47, 55, 133], "plot_03": [47, 55, 133], "content": 48, "expos": 48, "hidden": 48, "cautiou": 48, "unlik": [48, 52], "__init__": [48, 63, 64, 65, 66, 67, 103], "magic": 48, "twice": 48, "until": 48, "met": 48, "int": [48, 50, 61, 64, 65, 66, 67, 75, 80, 83, 101, 103, 108, 110, 118, 119, 120, 121, 124, 128], "infinit": 48, "must": [48, 58, 61, 64, 65, 66, 67, 101, 105, 131], "constraint": [48, 52], "surpass": 48, "statu": [48, 64, 65, 66, 67], "check_set": 48, "print_set": [48, 54, 65], "inf": [48, 54, 64, 65, 66, 67], "propag": 48, "failur": 48, "interim": 48, "has_data": [48, 64, 65, 66, 67], "441406250001353": 48, "39": [48, 52], "55078125002192": 48, "48828125000027045": 48, "44140625": 48, "9296875": 48, "41796875": 48, "90625": 48, "39453125": 48, "99921865": 48, "99669556": 48, "02605736": 48, "96875308": 48, "15436702": 48, "row": [48, 50, 53, 65, 71, 73, 74, 75, 76, 78, 90, 91, 96, 97], "has_model": [48, 64, 65, 66, 67], "44372545": 48, "07510692": 48, "81511892": 48, "72768575": 48, "00442108": 48, "04276131": 48, "25957047": 48, "54345957": 48, "12826739": 48, "15093636": 48, "62563187": 48, "9922991770720878": 48, "029372423936023677": 48, "86047573": 48, "94558849": 48, "01750002": 48, "07961578": 48, "13385217": 48, "piec": 48, "public": [48, 132], "eval": 48, "__doc__": [48, 50], "dir": 48, "callabl": [48, 61, 101], "add_meta_data": [48, 64, 65, 66, 67], "spectrummetadata": [48, 56, 64, 65, 66, 67], "add_result": [48, 64, 65, 66, 67], "add_set": [48, 64, 65, 66, 67], "get_meta_data": [48, 64, 65, 66, 67], "get_run_mod": [48, 64, 65, 66, 67], "get_set": [48, 64, 65, 66, 67], "print_report_issu": [48, 52, 65], "bug": [48, 52, 56, 65, 131], "pdf": [48, 50, 64, 65, 66, 67], "set_check_mod": [48, 64, 65, 66, 67], "debug": [48, 64, 65, 66, 67, 79], "set_run_mod": [48, 64, 65, 66, 67], "simultan": [48, 64, 65, 66, 67], "back": [48, 52, 111], "everyth": [48, 111, 131], "nfm": 48, "64": [48, 52], "userwarn": [48, 52], "compat": [48, 52], "tight_layout": [48, 52], "incorrect": [48, 52, 64, 65, 66, 67], "savefig": [48, 52], "fpath": [48, 52], "fname": [48, 52], "save_format": [48, 52], "815": [48, 55, 133], "plot_04": [48, 55, 133], "modelobject": [48, 55, 133], "assum": [49, 58, 83, 86, 119, 120, 132], "assumpt": [49, 52, 58, 111, 119, 120], "broad": [49, 56, 58], "violat": 49, "freqs_lfp": 49, "spectrum_lfp": 49, "70": 49, "5759": 49, "2235": 49, "0354": 49, "233": 49, "9925": 49, "0405": 49, "transit": 49, "slope": [49, 56, 130], "root": 49, "inflect": 49, "jump": 49, "3476": 49, "3360": 49, "020": [49, 131, 132], "41": 49, "369": 49, "273": 49, "9847": 49, "0607": 49, "compens": 49, "ambigu": 49, "roughli": [49, 56], "smaller": [49, 52], "larger": 49, "Be": 49, "wari": [49, 58], "suboptim": 49, "difficult": [49, 58], "640": [49, 55, 133], "plot_05": [49, 55, 133], "aperiodicfit": [49, 55, 133], "group_freq": 50, "group_pow": 50, "programmat": 50, "matric": [50, 131], "mere": [50, 58], "whatev": 50, "power_spectra": [50, 52, 64, 66, 67, 83, 98, 100, 101, 129], "353": 50, "982": 50, "664": 50, "902": 50, "970": 50, "121": [50, 52, 55, 56, 133], "042": 50, "summari": 50, "group_report": 50, "59315937": 50, "66654703": 50, "4088037": 50, "44223655": 50, "13520588": 50, "44689677": 50, "62328343": 50, "36122323": 50, "972947704637623": 50, "05410881121030762": 50, "45321197": 50, "06760294": 50, "62588664": 50, "18061162": 50, "64485739": 50, "78116382": 50, "34931443": 50, "59788754": 50, "05215067": 50, "57383428": 50, "44989782": 50, "24937294": 50, "5393173": 50, "73999236": 50, "37682558": 50, "9795689264306686": 50, "053265515178037695": 50, "6014178": 50, "02607534": 50, "34781375": 50, "62468647": 50, "74005425": 50, "18841279": 50, "column": [50, 64, 65, 66, 67], "col": [50, 64, 65, 66, 67], "ndarrai": [50, 64, 66, 67], "nomodelerror": [50, 64, 65, 66, 67, 68, 69, 84, 88, 93, 94, 102], "shortcut": 50, "float": [50, 60, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 90, 95, 96, 97, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 125, 128, 129], "namedtupl": [50, 78, 79, 80, 81, 82], "immut": [50, 78, 79, 80, 81, 82], "97596319": 50, "35626813": 50, "66222008": 50, "5834865": 50, "76028338": 50, "46594578": 50, "70975766": 50, "60541614": 50, "73824334": 50, "39581644": 50, "70797695": 50, "63143897": 50, "78995515": 50, "50376861": 50, "83825229": 50, "62707641": 50, "72882427": 50, "71863448": 50, "74302618": 50, "8814779": 50, "35305533": 50, "39947473": 50, "98214346": 50, "48181063": 50, "25615364": 50, "57271777": 50, "67595773": 50, "61406526": 50, "jsonlin": 50, "fg_result": 50, "speed": 50, "n_job": [50, 64, 66, 67, 83], "linearli": [50, 119, 120], "launch": 50, "job": [50, 64, 66, 67, 83], "quicker": 50, "runtim": 50, "40hz": 50, "appreci": 50, "larg": [50, 52, 53, 56], "monitor": 50, "tqdm": [50, 64, 66, 67, 131], "termin": 50, "27": [50, 51], "93it": 50, "28": 50, "06it": 50, "27it": 50, "56": 50, "25it": 50, "68": 50, "62it": 50, "92": [50, 52], "89it": 50, "17it": 50, "1789": 50, "0581": 50, "292": 50, "347": 50, "722": 50, "340": 50, "82": [50, 52], "708": 50, "90": [50, 52], "97": [50, 52], "376": 50, "52": 50, "9940": 50, "0304": 50, "event": [50, 56, 66, 72, 121], "333": [50, 55, 133], "plot_06": [50, 55, 133], "groupfit": [50, 55, 133], "extens": [51, 56], "sim_spectrogram": 51, "plot_spectrogram": 51, "realli": 51, "n_pre_post": 51, "mildli": 51, "previou": [51, 56, 131], "ft": 51, "readi": [51, 56], "849": 51, "804": 51, "337": 51, "897": 51, "992": 51, "967": 51, "026": 51, "103": 51, "069": 51, "thought": 51, "n_event": [51, 66, 72], "cur_spect": 51, "fe": 51, "339": 51, "335": 51, "965": 51, "966": 51, "070": 51, "mimic": 51, "layout": 51, "dig": 51, "plot_07": [51, 55, 133], "timemodel": [51, 55, 133], "tip": 52, "minim": 52, "constrain": 52, "univers": 52, "smooth": [52, 64, 65, 66, 67], "priori": [52, 53], "guid": [52, 131], "bottom": 52, "regard": [52, 58], "imperfect": 52, "art": 52, "carefulli": 52, "chosen": [52, 57], "sensit": [52, 58], "long": [52, 58], "perturb": 52, "meaningfulli": 52, "liber": 52, "overzeal": 52, "relax": 52, "sure": [52, 58, 108, 109, 132], "remaind": 52, "goe": [52, 58], "assist": [52, 53, 54, 132], "score": 52, "nuanc": 52, "NOT": [52, 108, 109], "cost": 52, "artifici": 52, "right": [52, 58], "lowest": 52, "suitabl": 52, "left": 52, "simual": 52, "unconstrain": 52, "liabl": 52, "0456": 52, "0236": 52, "83": 52, "908": 52, "826": 52, "69": 52, "566": 52, "65": 52, "262": 52, "239": [52, 133], "54": 52, "46": 52, "209": 52, "9893": 52, "0710": 52, "suspici": 52, "0242": 52, "910": 52, "817": 52, "9860": 52, "0823": 52, "slightli": 52, "sy": 52, "fi": 52, "91": 52, "43": 52, "94": 52, "min_peak_threshold": 52, "loosen": 52, "restrict": [52, 64, 65, 66, 67, 129], "stem": [52, 58], "doubl": 52, "smoother": [52, 58, 64, 65, 66, 67], "accordingli": [52, 58], "9965": 52, "986": 52, "95": 52, "78": 52, "231": 52, "9992": 52, "0182": 52, "sim_freq_rang": 52, "010": 52, "gauss_opt": 52, "495": 52, "539": 52, "114": 52, "999": 52, "006": 52, "018": 52, "009": 52, "0718": 52, "5387": 52, "466": 52, "9993": 52, "0175": 52, "error_threshold": 52, "to_check": 52, "report_tocheck_": 52, "ey": 52, "touch": 52, "hopefulli": 52, "instanc": 52, "unexpect": 52, "weird": 52, "send": 52, "command": 52, "create_report": 52, "bad_fit_report": 52, "bad_fit_data": 52, "attach": 52, "plot_08": [52, 55, 133], "fed": 53, "predict": 53, "behaviour": 53, "physiolog": [53, 58, 131], "depth": [53, 58], "idiosyncrat": 53, "mostli": [53, 56], "fall": 53, "dictionari": [53, 63, 66], "48375518": 53, "91782335": 53, "similarli": 53, "03969822": 53, "48627641": 53, "78825893": 53, "03394581": 53, "4880723": 53, "82623257": 53, "04095458": 53, "49087164": 53, "81810629": 53, "retain": 53, "n_model": [53, 73, 75], "fill": [53, 54, 73, 75, 132], "api": [53, 56, 57, 58, 131], "page": [53, 54, 56, 58, 131, 132, 134], "aforement": 53, "histogram": 53, "51748191": 53, "51806639": 53, "99827884": 53, "51563434": 53, "00559925": 53, "01700177": 53, "00089211": 53, "02010911": 53, "51575117": 53, "99955831": 53, "topographi": 53, "demograph": 53, "diseas": 53, "decod": 53, "behavior": 53, "submit": 53, "375": [53, 55, 133], "plot_09": [53, 55, 133], "furtheranalysi": [53, 55, 133], "methods_report_info": [54, 132], "methods_report_text": [54, 132], "environ": 54, "__version__": [54, 132], "specparam_vers": [54, 132], "0rc2": 54, "xx": [54, 126, 127, 132], "familiar": 54, "insert": [54, 132], "edit": [54, 131], "483": [54, 55, 133], "plot_10": [54, 55, 133], "755": 55, "auto_tutori": 55, "releas": [56, 131], "major": [56, 131], "minor": 56, "refactor": 56, "class": [56, 63, 64, 65, 66, 67, 78, 79, 80, 81, 82, 103], "break": [56, 131], "resolv": [56, 57, 131], "spectraltimemodel": [56, 102, 124], "spectraltimeeventmodel": [56, 72, 93, 121], "flexibli": 56, "wip": 56, "fooofgroup": 56, "fooofed_spectrum_": 56, "get_fooof": 56, "fooofresult": 56, "fooofset": 56, "fooofmetadata": 56, "combine_fooof": 56, "compare_info": 56, "average_fg": 56, "fit_fooof_3d": 56, "fit_models_3d": 56, "get_band_peak_fm": 56, "get_band_peak_fg": 56, "get_band_peak_arr": 56, "get_band_peak_group_arr": 56, "compute_pointwise_error_fm": 56, "compute_pointwise_error_fg": 56, "compute_pointwise_error_arr": 56, "save_fm": 56, "save_model": 56, "save_fg": 56, "save_group": 56, "fetch_fooof_data": 56, "load_fooof_data": 56, "gen_power_spectrum": 56, "gen_group_power_spectra": 56, "fooof_obj": 56, "model_obj": [56, 86, 87, 126, 127, 132], "plan": 56, "upcom": 56, "older": 56, "vocabulari": 56, "synth": 56, "background": [56, 58], "background_mod": 56, "background_params_": 56, "short": [56, 58, 130], "bg": 56, "amplitud": 56, "min_peak_amplitud": 56, "amp": 56, "miscellan": 56, "histori": 56, "commit": 56, "bulk": 56, "went": 56, "152": 56, "139": 56, "130": 56, "129": 56, "reorgan": 56, "cleanup": 56, "terminologi": [56, 58], "frequent": [56, 57], "ask": [56, 57, 131], "glossari": [56, 57, 131], "won": 56, "box": [56, 132], "plain": 56, "word": 56, "old": 56, "scheme": [56, 131], "deprec": 56, "am": 57, "changelog": [57, 131], "answer": [58, 131], "neurophysiolog": 58, "reli": 58, "role": 58, "quantif": 58, "mathemat": [58, 130], "arrhythm": [58, 130], "white": 58, "operation": 58, "nor": 58, "research": 58, "focus": 58, "clarifi": 58, "utmost": 58, "factor": [58, 101], "theoret": 58, "various": 58, "free": 58, "amongst": 58, "imprecis": 58, "neutral": 58, "physic": 58, "perspect": 58, "truli": 58, "invok": 58, "neurosci": [58, 131, 132], "v": 58, "foreground": 58, "frame": 58, "unwant": 58, "uninterest": 58, "prefer": 58, "descriptor": 58, "avoid": 58, "confound": 58, "argu": 58, "situat": 58, "prove": 58, "absenc": 58, "bursti": 58, "partial": 58, "sharp": 58, "bycycl": 58, "waveform": 58, "few": 58, "attempt": 58, "jointli": 58, "capabl": 58, "magnetophysiolog": [58, 130], "intracrani": 58, "lfp": [58, 130, 131], "electroencephalographi": [58, 130], "magnetoencephalographi": [58, 130], "electrocorticographi": [58, 130], "ecog": [58, 130, 131], "ieeg": 58, "ye": 58, "tend": 58, "analog": 58, "train": 58, "inspect": 58, "m": [58, 131, 132], "system": 58, "balanc": 58, "excitatori": 58, "inhibitori": 58, "synapt": 58, "ei": 58, "precis": [58, 125], "fine": 58, "regardless": 58, "trade": 58, "shorter": 58, "segment": [58, 64, 65, 66, 67, 132], "fewer": 58, "messier": 58, "fft": [58, 64, 65, 66, 67], "messi": 58, "bia": 58, "cleanli": 58, "rule": 58, "thumb": 58, "theori": 58, "converg": 58, "slide": 58, "fashion": 58, "hope": 58, "soon": 58, "stood": 58, "stuck": 58, "renam": 58, "podvalni": 58, "et": 58, "al": 58, "2017": 58, "unifi": 58, "extracellular": 58, "respons": 58, "human": 58, "cortex": 58, "1152": 58, "jn": 58, "00943": 58, "2014": 58, "2015": 58, "1523": 58, "jneurosci": 58, "2332": 58, "gao": [58, 125, 131, 132], "peterson": [58, 131, 132], "excit": 58, "inhibit": 58, "neuroimag": 58, "078": 58, "buzs\u00e1ki": 58, "logotheti": 58, "singer": 58, "2013": 58, "brain": 58, "evolutionari": 58, "neuron": [58, 125], "cole": 58, "2019": 58, "00273": 58, "he": 58, "tic": 58, "valid": [59, 64, 65, 66, 67, 119, 120], "plot_funct": 61, "kwarg": [61, 64, 66, 67], "recurs": 61, "upon": [61, 64, 65, 66, 67, 88, 90, 91, 92, 95, 96, 97, 98, 100, 101], "keyword": [61, 64, 65, 66, 67, 68, 69, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "save_kwarg": 62, "bool": [62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 79, 84, 87, 90, 92, 96, 98, 100, 101, 108, 109, 110, 123, 126, 128], "input_band": 63, "dict": [63, 65, 66, 67, 95], "f_low": [63, 108, 109, 110, 117, 129], "f_high": [63, 108, 109, 110, 117, 129], "add_band": 63, "band_definit": 63, "upper": [63, 131], "n_band": 63, "remove_band": 63, "arg": [64, 66, 67], "silent": [64, 65, 66, 67], "lower_bound": [64, 65, 66, 67, 80, 100], "upper_bound": [64, 65, 66, 67, 80, 100], "abbrevi": [64, 65, 66, 67, 130], "n_power_spectra": [64, 67, 83, 108], "lowest_freq": [64, 65, 66, 67, 82, 119, 120, 129], "highest_freq": [64, 65, 66, 67, 82, 119, 120, 129], "clear_result": [64, 65, 66, 67], "entir": [64, 65, 66, 67, 83], "meta_data": [64, 65, 66, 67, 87], "array_lik": [64, 66, 67], "progress": [64, 66, 67, 131], "parallel": [64, 66, 67, 83], "bar": [64, 66, 67, 131], "modelrunmod": [64, 65, 66, 67], "plot_kwarg": [64, 65, 66, 67, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "style_plot": [64, 65, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101], "concis": [64, 65, 66, 67, 126], "fileobject": [64, 65, 66, 67, 123], "save_model_report": [64, 66], "check_freq": [64, 65, 66, 67, 79], "check_data": [64, 65, 66, 67, 79], "model_kwarg": [65, 95], "nodataerror": [65, 68, 69], "data_kwarg": [65, 95], "aperiodic_kwarg": [65, 95], "overrid": [65, 95], "static": 65, "plot_full_rang": 65, "conflict": 65, "pend": 65, "plot_": 65, "n_time_window": [66, 67, 72, 99], "event_group_result": 66, "event_time_result": 66, "convert_result": [66, 67], "drop_ind": 66, "window_ind": 66, "event_ind": 66, "output_typ": [66, 67], "spectraltimeeventobject": 66, "spectraltimeobject": [66, 67], "spectralgroupobject": [66, 67], "marker": 66, "event_index": 66, "window_index": 66, "view": [66, 67], "transpos": [66, 67], "orient": [66, 67, 130, 131], "time_result": [66, 67], "plot_typ": 67, "print_typ": 67, "report_typ": 67, "plt_kwarg": [68, 69], "data_model": 70, "wise": 70, "select_highest": [71, 72, 73, 74], "thresh_param": [71, 72, 73, 74, 75], "lower_frequency_bound": [71, 72, 73, 74, 75], "upper_frequency_bound": [71, 72, 73, 74, 75], "search": [71, 72, 74, 89], "n_peak_param": 72, "vstack": 73, "band_peak": [74, 75], "n_fit": 75, "singular": 76, "thresholded_peak": 77, "all_model": 83, "collaps": 84, "avg_model": 85, "concaten": 86, "incompatiblesettingserror": 86, "incompat": [86, 131], "whose": [87, 108], "illustr": 89, "sem": [90, 96, 101], "plot_individu": [90, 96], "f_min": [90, 96, 97], "f_max": [90, 96, 97], "yshade": [90, 96], "event_model": 93, "grid": [98, 100, 101], "n_frequenc": 99, "add_cent": 100, "multipli": [101, 114], "time_model": 102, "increment": [103, 104], "alpha_cf_step": 103, "its": 104, "yield": [104, 105, 106], "uniformli": 106, "new_sim_param": [107, 113, 115], "inconsistentdataerror": 107, "inconsist": [107, 113, 114], "inclus": [108, 109, 110, 117], "enter": [108, 109], "n_window": 110, "delta_exponent_b": 111, "f_rotation_b": 111, "delta_exponent_c": 111, "f_rotation_c": 111, "f_rotation_bc": 111, "plug": 111, "arriv": 111, "delta_expon": [112, 113, 114], "clockwis": [113, 114], "steepen": [113, 114], "counterclockwis": [113, 114], "unchang": [113, 114], "rotated_spectrum": [113, 114], "unspecifi": [113, 114], "rotated_pow": [113, 114], "new_sp": [113, 115], "invalid": 114, "uniti": 114, "original_expon": 114, "rotation_frequ": 114, "upward": [115, 116], "downward": [115, 116], "translated_spectrum": [115, 116], "translated_pow": [115, 116], "gen_freq": 117, "seed_valu": 118, "buffer": [119, 120], "interpol": [119, 120], "intend": [119, 120], "interp_range_low": [119, 120], "interp_range_high": [119, 120], "plateau": 125, "decai": 125, "convers": 125, "van": 125, "den": 125, "brink": 125, "pfeffer": 125, "2020": [125, 131, 132], "timescal": 125, "cortic": 125, "microarchitectur": 125, "e61277": 125, "7554": 125, "61277": 125, "rdgao": 125, "echo": 125, "blob": 125, "master": 125, "echo_util": 125, "l64": 125, "return_ind": 128, "proport": 128, "densiti": [129, 130], "freqs_ext": 129, "power_spectra_ext": 129, "intercept": 130, "kne": 130, "flip": 130, "formerli": 131, "fast": 131, "conceiv": 131, "rise": 131, "rewrit": 131, "faq": 131, "pytest": 131, "suit": 131, "anaconda": 131, "pip": 131, "strictli": 131, "stai": 131, "latest": 131, "conda": 131, "forg": 131, "clone": 131, "git": 131, "coupl": 131, "wrapper": 131, "reimplement": 131, "exhaust": 131, "toolbox": 131, "brainstorm": 131, "fieldtrip": 131, "fooof_mat": 131, "pipelin": 131, "mat_py_mat": 131, "julia": 131, "reticul": 131, "haller": [131, 132], "ej": [131, 132], "varma": [131, 132], "p": [131, 132], "sebastian": [131, 132], "noto": [131, 132], "lara": [131, 132], "ah": [131, 132], "walli": [131, 132], "jd": [131, 132], "knight": [131, 132], "rt": [131, 132], "shestyuk": [131, 132], "natur": [131, 132], "1655": [131, 132], "1665": [131, 132], "1038": [131, 132], "s41593": [131, 132], "00744": [131, 132], "encourag": 131, "commun": 131, "tracker": 131, "board": 131, "conduct": 131, "cross": 131, "workflow": 131, "nih": 131, "award": 131, "r01": 131, "gm134363": 131, "nigm": 131, "articl": 132, "googl": 132, "scholar": 132, "preprocess": 132, "emphas": 134}, "objects": {"fooof.plts.style": [[59, 0, 1, "", "check_style_options"]], "fooof.plts.utils": [[60, 0, 1, "", "check_ax"], [61, 0, 1, "", "recursive_plot"], [62, 0, 1, "", "save_figure"]], "specparam": [[63, 1, 1, "", "Bands"], [64, 1, 1, "", "SpectralGroupModel"], [65, 1, 1, "", "SpectralModel"], [66, 1, 1, "", "SpectralTimeEventModel"], [67, 1, 1, "", "SpectralTimeModel"], [83, 0, 1, "", "fit_models_3d"]], "specparam.Bands": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "add_band"], [63, 3, 1, "", "definitions"], [63, 3, 1, "", "labels"], [63, 3, 1, "", "n_bands"], [63, 2, 1, "", "remove_band"]], "specparam.SpectralGroupModel": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "add_data"], [64, 2, 1, "", "add_meta_data"], [64, 2, 1, "", "add_results"], [64, 2, 1, "", "add_settings"], [64, 2, 1, "", "copy"], [64, 2, 1, "", "drop"], [64, 2, 1, "", "fit"], [64, 2, 1, "", "get_data"], [64, 2, 1, "", "get_group"], [64, 2, 1, "", "get_meta_data"], [64, 2, 1, "", "get_model"], [64, 2, 1, "", "get_params"], [64, 2, 1, "", "get_results"], [64, 2, 1, "", "get_run_modes"], [64, 2, 1, "", "get_settings"], [64, 3, 1, "", "has_data"], [64, 3, 1, "", "has_model"], [64, 2, 1, "", "load"], [64, 3, 1, "", "n_null_"], [64, 3, 1, "", "n_peaks_"], [64, 3, 1, "", "null_inds_"], [64, 2, 1, "", "plot"], [64, 2, 1, "", "print_results"], [64, 2, 1, "", "report"], [64, 2, 1, "", "save"], [64, 2, 1, "", "save_model_report"], [64, 2, 1, "", "save_report"], [64, 2, 1, "", "set_check_modes"], [64, 2, 1, "", "set_debug_mode"], [64, 2, 1, "", "set_run_modes"], [64, 2, 1, "", "to_df"]], "specparam.SpectralModel": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "add_data"], [65, 2, 1, "", "add_meta_data"], [65, 2, 1, "", "add_results"], [65, 2, 1, "", "add_settings"], [65, 2, 1, "", "copy"], [65, 2, 1, "", "fit"], [65, 2, 1, "", "get_data"], [65, 2, 1, "", "get_meta_data"], [65, 2, 1, "", "get_model"], [65, 2, 1, "", "get_params"], [65, 2, 1, "", "get_results"], [65, 2, 1, "", "get_run_modes"], [65, 2, 1, "", "get_settings"], [65, 3, 1, "", "has_data"], [65, 3, 1, "", "has_model"], [65, 2, 1, "", "load"], [65, 3, 1, "", "n_peaks_"], [65, 2, 1, "", "plot"], [65, 2, 1, "", "print_report_issue"], [65, 2, 1, "", "print_results"], [65, 2, 1, "", "print_settings"], [65, 2, 1, "", "report"], [65, 2, 1, "", "save"], [65, 2, 1, "", "save_report"], [65, 2, 1, "", "set_check_modes"], [65, 2, 1, "", "set_debug_mode"], [65, 2, 1, "", "set_run_modes"], [65, 2, 1, "", "to_df"]], "specparam.SpectralTimeEventModel": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "add_data"], [66, 2, 1, "", "add_meta_data"], [66, 2, 1, "", "add_results"], [66, 2, 1, "", "add_settings"], [66, 2, 1, "", "convert_results"], [66, 2, 1, "", "copy"], [66, 2, 1, "", "drop"], [66, 2, 1, "", "fit"], [66, 2, 1, "", "get_data"], [66, 2, 1, "", "get_group"], [66, 2, 1, "", "get_meta_data"], [66, 2, 1, "", "get_model"], [66, 2, 1, "", "get_params"], [66, 2, 1, "", "get_results"], [66, 2, 1, "", "get_run_modes"], [66, 2, 1, "", "get_settings"], [66, 3, 1, "", "has_data"], [66, 3, 1, "", "has_model"], [66, 2, 1, "", "load"], [66, 3, 1, "", "n_events"], [66, 3, 1, "", "n_null_"], [66, 3, 1, "", "n_peaks_"], [66, 3, 1, "", "n_time_windows"], [66, 3, 1, "", "null_inds_"], [66, 2, 1, "", "plot"], [66, 2, 1, "", "print_results"], [66, 2, 1, "", "report"], [66, 2, 1, "", "save"], [66, 2, 1, "", "save_model_report"], [66, 2, 1, "", "save_report"], [66, 2, 1, "", "set_check_modes"], [66, 2, 1, "", "set_debug_mode"], [66, 2, 1, "", "set_run_modes"], [66, 3, 1, "", "spectrogram"], [66, 2, 1, "", "to_df"]], "specparam.SpectralTimeModel": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "add_data"], [67, 2, 1, "", "add_meta_data"], [67, 2, 1, "", "add_results"], [67, 2, 1, "", "add_settings"], [67, 2, 1, "", "convert_results"], [67, 2, 1, "", "copy"], [67, 2, 1, "", "drop"], [67, 2, 1, "", "fit"], [67, 2, 1, "", "get_data"], [67, 2, 1, "", "get_group"], [67, 2, 1, "", "get_meta_data"], [67, 2, 1, "", "get_model"], [67, 2, 1, "", "get_params"], [67, 2, 1, "", "get_results"], [67, 2, 1, "", "get_run_modes"], [67, 2, 1, "", "get_settings"], [67, 3, 1, "", "has_data"], [67, 3, 1, "", "has_model"], [67, 2, 1, "", "load"], [67, 3, 1, "", "n_null_"], [67, 3, 1, "", "n_peaks_"], [67, 3, 1, "", "n_time_windows"], [67, 3, 1, "", "null_inds_"], [67, 2, 1, "", "plot"], [67, 2, 1, "", "print_results"], [67, 2, 1, "", "report"], [67, 2, 1, "", "save"], [67, 2, 1, "", "save_report"], [67, 2, 1, "", "set_check_modes"], [67, 2, 1, "", "set_debug_mode"], [67, 2, 1, "", "set_run_modes"], [67, 3, 1, "", "spectrogram"], [67, 2, 1, "", "to_df"]], "specparam.analysis": [[68, 0, 1, "", "compute_pointwise_error"], [69, 0, 1, "", "compute_pointwise_error_group"], [71, 0, 1, "", "get_band_peak"], [72, 0, 1, "", "get_band_peak_event"], [73, 0, 1, "", "get_band_peak_group"]], "specparam.analysis.error": [[70, 0, 1, "", "compute_pointwise_error_arr"]], "specparam.analysis.periodic": [[74, 0, 1, "", "get_band_peak_arr"], [75, 0, 1, "", "get_band_peak_group_arr"], [76, 0, 1, "", "get_highest_peak"], [77, 0, 1, "", "threshold_peaks"]], "specparam.data": [[78, 1, 1, "", "FitResults"], [79, 1, 1, "", "ModelRunModes"], [80, 1, 1, "", "ModelSettings"], [81, 1, 1, "", "SimParams"], [82, 1, 1, "", "SpectrumMetaData"]], "specparam.objs": [[84, 0, 1, "", "average_group"], [85, 0, 1, "", "average_reconstructions"], [86, 0, 1, "", "combine_model_objs"], [87, 0, 1, "", "compare_model_objs"]], "specparam.plts.annotate": [[88, 0, 1, "", "plot_annotated_model"], [89, 0, 1, "", "plot_annotated_peak_search"]], "specparam.plts.aperiodic": [[90, 0, 1, "", "plot_aperiodic_fits"], [91, 0, 1, "", "plot_aperiodic_params"]], "specparam.plts.error": [[92, 0, 1, "", "plot_spectral_error"]], "specparam.plts.event": [[93, 0, 1, "", "plot_event_model"]], "specparam.plts.group": [[94, 0, 1, "", "plot_group_model"]], "specparam.plts.model": [[95, 0, 1, "", "plot_model"]], "specparam.plts.periodic": [[96, 0, 1, "", "plot_peak_fits"], [97, 0, 1, "", "plot_peak_params"]], "specparam.plts": [[98, 0, 1, "", "plot_spectra"], [99, 0, 1, "", "plot_spectrogram"]], "specparam.plts.spectra": [[100, 0, 1, "", "plot_spectra_shading"], [101, 0, 1, "", "plot_spectra_yshade"]], "specparam.plts.time": [[102, 0, 1, "", "plot_time_model"]], "specparam.sim.params": [[103, 1, 1, "", "Stepper"], [104, 0, 1, "", "param_iter"], [105, 0, 1, "", "param_jitter"], [106, 0, 1, "", "param_sampler"], [107, 0, 1, "", "update_sim_ap_params"]], "specparam.sim.params.Stepper": [[103, 2, 1, "", "__init__"]], "specparam.sim": [[108, 0, 1, "", "sim_group_power_spectra"], [109, 0, 1, "", "sim_power_spectrum"], [110, 0, 1, "", "sim_spectrogram"]], "specparam.sim.transform": [[111, 0, 1, "", "compute_rotation_frequency"], [112, 0, 1, "", "compute_rotation_offset"], [113, 0, 1, "", "rotate_sim_spectrum"], [114, 0, 1, "", "rotate_spectrum"], [115, 0, 1, "", "translate_sim_spectrum"], [116, 0, 1, "", "translate_spectrum"]], "specparam.sim.utils": [[117, 0, 1, "", "create_freqs"], [118, 0, 1, "", "set_random_seed"]], "specparam.utils": [[119, 0, 1, "", "interpolate_spectra"], [120, 0, 1, "", "interpolate_spectrum"], [128, 0, 1, "", "subsample_spectra"], [129, 0, 1, "", "trim_spectrum"]], "specparam.utils.io": [[121, 0, 1, "", "load_event_model"], [122, 0, 1, "", "load_group_model"], [123, 0, 1, "", "load_model"], [124, 0, 1, "", "load_time_model"]], "specparam.utils.params": [[125, 0, 1, "", "compute_knee_frequency"]], "specparam.utils.reports": [[126, 0, 1, "", "methods_report_info"], [127, 0, 1, "", "methods_report_text"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "document": [0, 56, 131], "tabl": [0, 57, 58, 132], "content": [0, 5, 37, 57, 58, 132], "model": [0, 2, 3, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 45, 46, 47, 48, 51, 52, 53, 54, 58, 95], "object": [0, 5, 6, 7, 9, 10, 20, 46, 48, 50, 53, 54], "base": 0, "group": [0, 2, 7, 15, 29, 50, 52, 53, 94], "time": [0, 4, 11, 13, 17, 22, 25, 26, 31, 33, 36, 42, 43, 51, 55, 58, 102, 133], "event": [0, 51, 93], "util": [0, 53, 60, 61, 62, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "data": [0, 2, 3, 9, 14, 19, 34, 40, 41, 47, 48, 53, 56, 58, 78, 79, 80, 81, 82], "band": [0, 7, 39, 40, 51, 58, 63], "inform": [0, 54, 132], "simul": [0, 5, 19, 27, 28, 29, 30, 34, 40, 41, 52, 53], "paramet": [0, 5, 12, 13, 16, 19, 28, 29, 30, 39, 46, 49], "analyz": [0, 9, 14, 53], "result": [0, 7, 48, 50, 53], "error": [0, 2, 8, 15, 70, 92], "period": [0, 3, 14, 16, 19, 20, 33, 39, 40, 41, 45, 53, 58, 74, 75, 76, 77, 96, 97], "compon": [0, 14, 19, 20, 45, 47, 49, 53, 58], "code": [0, 56], "gener": [0, 132], "power": [0, 2, 3, 9, 19, 20, 21, 29, 30, 35, 41, 45, 46, 52, 53, 58], "spectra": [0, 2, 3, 9, 21, 29, 30, 39, 41, 45, 46, 50, 52, 58, 100, 101], "manag": [0, 5, 6, 9, 28], "transform": [0, 30, 111, 112, 113, 114, 115, 116], "plot": [0, 3, 5, 18, 19, 20, 21, 41], "function": [0, 39], "properti": 0, "annot": [0, 88, 89], "style": [0, 59], "input": 0, "output": 0, "io": [0, 121, 122, 123, 124], "method": [0, 48, 58, 132], "report": [0, 46, 48, 52, 54, 126, 127, 132], "analys": [1, 3, 5, 53], "development": 2, "demo": 2, "spectral": [2, 39, 58, 131, 134], "parameter": [2, 51, 58, 131], "studi": 2, "neurodevelop": 2, "access": 2, "exampl": [2, 5, 7, 9, 45, 46, 49, 53, 54, 63, 64, 65, 66, 67, 68, 69, 71, 73, 78, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 125, 126, 127, 128, 129, 132], "fit": [2, 3, 8, 9, 10, 14, 15, 19, 24, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58], "an": [2, 46, 49], "individu": [2, 15, 21, 50], "spectrum": [2, 3, 9, 19, 20, 45, 46, 47, 53], "check": [2, 3, 15, 52, 54, 132], "qualiti": [2, 52], "tune": [2, 52], "specparam": [2, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131], "algorithm": [2, 47, 52, 58], "frequenc": [2, 13, 15, 30, 33, 35, 53, 58], "conclus": [2, 3, 19, 33, 34, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53], "topograph": 3, "mne": 3, "load": [3, 50, 53], "deal": [3, 24], "nan": 3, "valu": 3, "calcul": [3, 40, 46], "topographi": 3, "aperiod": [3, 13, 14, 19, 20, 33, 34, 39, 40, 41, 45, 47, 48, 49, 53, 58, 90, 91], "comput": [4, 11, 17, 22, 25, 26, 31, 36, 42, 43, 55, 58, 133], "process": [5, 23], "export": 7, "defin": [7, 51], "oscil": [7, 34, 35, 41, 51, 58], "us": [7, 58, 63, 64, 65, 66, 67, 68, 69, 71, 73, 78, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 125, 126, 127, 128, 129, 131], "definit": 7, "fail": [8, 10], "failur": 8, "induc": 8, "debug": 8, "mode": [8, 48], "across": [9, 10, 15, 52], "3d": 9, "arrai": 9, "run": 9, "organ": [9, 56], "set": [9, 19, 39, 48, 52, 58], "up": [9, 19], "multipl": [9, 21, 24, 50], "fit_models_3d": [9, 83], "manipul": 10, "combin": [10, 33, 47], "note": [10, 14, 45, 46, 49, 53, 56], "sub": 10, "select": [10, 46], "from": [10, 20, 53, 58], "spectralgroupmodel": [10, 50, 53, 64], "drop": 10, "spectralmodel": [10, 53, 65], "averag": 10, "fix": 13, "compar": [13, 39, 41], "offset": [13, 30], "expon": [13, 45], "knee": [13, 45, 49], "constant": 13, "explor": [14, 48, 53], "full": [14, 47], "isol": 14, "linear": 14, "v": 14, "log": [14, 45], "space": 14, "peak": [14, 16, 19, 24, 35, 46, 47, 48, 52, 53, 58], "addit": [14, 54], "when": 15, "There": 15, "i": [15, 58, 131], "problem": [15, 24], "gaussian": 16, "overlap": 16, "experi": 19, "other": [20, 54, 58, 131], "option": 20, "With": [21, 29, 34], "shade": 21, "region": [21, 24], "put": 21, "all": 21, "togeth": 21, "line": 24, "nois": [24, 33, 58], "interpol": 24, "The": [24, 33], "bandstop": 24, "filter": [24, 34], "param_sampl": [28, 106], "param_it": [28, 104], "param_jitt": [28, 105], "neural": [29, 41, 58], "creat": [29, 47, 48], "differ": [29, 30, 58], "track": [29, 30], "rotat": [30, 134], "relat": [30, 45], "chang": [30, 34, 41, 48], "translat": 30, "while": 30, "between": 30, "same": 30, "amount": 30, "concept": [32, 37], "rhythmic": 33, "seri": 33, "fourier": 33, "theorem": 33, "represent": 33, "signal": [33, 34, 58], "dirac": 33, "delta": 33, "section": 33, "color": 33, "white": 33, "pink": 33, "sinusoid": 33, "complex": 33, "find": 34, "observ": 34, "specif": 35, "interim": 35, "harmon": 35, "motiv": 37, "measur": [37, 38, 40, 41, 52, 58], "overview": [39, 45, 131], "helper": 39, "flatten": [39, 47], "ratio": 40, "introduct": [40, 45], "project": 40, "impact": 40, "conflat": 41, "activ": [41, 58], "without": 41, "ani": 41, "tutori": 44, "01": 45, "descript": [45, 47, 48], "conceptu": 45, "visual": [45, 134], "mathemat": 45, "overal": 45, "A": [45, 49, 53, 56], "slope": 45, "02": 46, "interpret": [46, 49, 52, 58], "fitresult": [46, 78], "03": 47, "step": 47, "1": [47, 48, 56, 58], "initi": 47, "2": [47, 48, 56], "3": [47, 48], "detect": 47, "4": [47, 48], "5": 47, "remov": 47, "6": 47, "re": 47, "7": 47, "addendum": 47, "attribut": [47, 48], "04": 48, "control": 48, "search": 48, "stop": 48, "criteria": 48, "verbos": 48, "save": [48, 50, 56], "05": 49, "approach": 49, "gone": 49, "wrong": 49, "choos": 49, "procedur": 49, "06": [50, 51], "get_param": 50, "parallel": 50, "support": [50, 131], "progress": 50, "bar": 50, "extract": [50, 53], "over": 51, "spectrogram": 51, "spectraltimemodel": [51, 67], "repeat": 51, "spectraltimeeventmodel": [51, 66], "07": 52, "troubleshoot": 52, "reduc": 52, "overfit": 52, "No": 52, "underfit": 52, "bad": 52, "08": 53, "further": 53, "analysi": [53, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "custom": 53, "rang": [53, 58], "09": 54, "referenc": 54, "modul": [54, 132], "version": [54, 58, 131, 132], "get": 54, "changelog": 56, "0": 56, "develop": 56, "kei": 56, "updat": 56, "relationship": 56, "fooof": [56, 58, 59, 60, 61, 62, 131], "name": [56, 58], "previous": 56, "x": 56, "frequent": 58, "ask": 58, "question": 58, "what": 58, "meant": 58, "why": 58, "should": [58, 131], "import": 58, "call": 58, "f": 58, "etc": 58, "ar": 58, "evid": 58, "how": 58, "thei": 58, "equival": 58, "modal": 58, "can": 58, "chosen": 58, "If": 58, "am": 58, "interest": 58, "particular": 58, "small": 58, "doe": 58, "reflect": 58, "matter": 58, "appli": 58, "task": 58, "resolv": 58, "do": 58, "cite": 58, "thi": 58, "refer": [58, 131, 132], "plt": [59, 60, 61, 62, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "check_style_opt": 59, "check_ax": 60, "recursive_plot": 61, "save_figur": 62, "compute_pointwise_error": 68, "compute_pointwise_error_group": 69, "compute_pointwise_error_arr": 70, "get_band_peak": 71, "get_band_peak_ev": 72, "get_band_peak_group": 73, "get_band_peak_arr": 74, "get_band_peak_group_arr": 75, "get_highest_peak": 76, "threshold_peak": 77, "modelrunmod": 79, "modelset": 80, "simparam": 81, "spectrummetadata": 82, "obj": [84, 85, 86, 87], "average_group": 84, "average_reconstruct": 85, "combine_model_obj": 86, "compare_model_obj": 87, "plot_annotated_model": 88, "plot_annotated_peak_search": 89, "plot_aperiodic_fit": 90, "plot_aperiodic_param": 91, "plot_spectral_error": 92, "plot_event_model": 93, "plot_group_model": 94, "plot_model": 95, "plot_peak_fit": 96, "plot_peak_param": 97, "plot_spectra": 98, "plot_spectrogram": 99, "plot_spectra_shad": 100, "plot_spectra_yshad": 101, "plot_time_model": 102, "sim": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "param": [103, 104, 105, 106, 107, 125], "stepper": 103, "update_sim_ap_param": 107, "sim_group_power_spectra": 108, "sim_power_spectrum": 109, "sim_spectrogram": 110, "compute_rotation_frequ": 111, "compute_rotation_offset": 112, "rotate_sim_spectrum": 113, "rotate_spectrum": 114, "translate_sim_spectrum": 115, "translate_spectrum": 116, "create_freq": 117, "set_random_se": 118, "interpolate_spectra": 119, "interpolate_spectrum": 120, "load_event_model": 121, "load_group_model": 122, "load_model": 123, "load_time_model": 124, "compute_knee_frequ": 125, "methods_report_info": 126, "methods_report_text": 127, "subsample_spectra": 128, "trim_spectrum": 129, "glossari": 130, "upcom": 131, "stabl": 131, "which": 131, "depend": 131, "instal": 131, "test": 131, "languag": 131, "matlab": 131, "contribut": 131, "quickstart": 131, "fund": 131, "applic": 132, "templat": 132}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Table of Contents": [[0, "table-of-contents"], [57, "table-of-contents"], [58, "table-of-contents"], [132, "table-of-contents"]], "Model Objects": [[0, "model-objects"]], "Base Object": [[0, "base-object"]], "Group Object": [[0, "group-object"]], "Time & Event Objects": [[0, "time-event-objects"]], "Object Utilities": [[0, "object-utilities"]], "Data Objects": [[0, "data-objects"]], "Bands Object": [[0, "bands-object"]], "Model Information": [[0, "model-information"]], "Simulation Parameters": [[0, "simulation-parameters"], [28, "simulation-parameters"], [28, "id1"]], "Analyze Model Results": [[0, "analyze-model-results"]], "Analyze Model Errors": [[0, "analyze-model-errors"]], "Analyze Periodic Components": [[0, "analyze-periodic-components"]], "Simulation Code": [[0, "simulation-code"]], "Generate Power Spectra": [[0, "generate-power-spectra"]], "Manage Parameters": [[0, "manage-parameters"]], "Transform Power Spectra": [[0, "transform-power-spectra"]], "Simulation Utilities": [[0, "simulation-utilities"]], "Plotting Functions": [[0, "plotting-functions"]], "Plot Power Spectra": [[0, "plot-power-spectra"], [21, "plot-power-spectra"]], "Plot Model Properties & Parameters": [[0, "plot-model-properties-parameters"]], "Plot Model Objects": [[0, "plot-model-objects"]], "Annotated Plots": [[0, "annotated-plots"]], "Plot Utilities & Styling": [[0, "plot-utilities-styling"]], "Utilities": [[0, "utilities"]], "Data Utilities": [[0, "data-utilities"]], "Parameter Utilities": [[0, "parameter-utilities"]], "Input / Output (IO)": [[0, "input-output-io"]], "Methods Reports": [[0, "methods-reports"]], "Analyses": [[1, "analyses"], [5, "analyses"]], "Developmental Data Demo": [[2, "developmental-data-demo"]], "Spectral Parameterization for studying neurodevelopment": [[2, "spectral-parameterization-for-studying-neurodevelopment"]], "Access Example Data": [[2, "access-example-data"]], "Fitting an Individual Power Spectrum": [[2, "fitting-an-individual-power-spectrum"]], "Checking model fit quality": [[2, "checking-model-fit-quality"]], "Fitting a Group of Power Spectra": [[2, "fitting-a-group-of-power-spectra"]], "Tuning the specparam algorithm": [[2, "tuning-the-specparam-algorithm"]], "Frequency-by-frequency errors": [[2, "frequency-by-frequency-errors"]], "Conclusions": [[2, "conclusions"], [19, "conclusions"], [34, "conclusions"]], "Topographical Analyses with MNE": [[3, "topographical-analyses-with-mne"]], "Load & Check MNE Data": [[3, "load-check-mne-data"]], "Dealing with NaN Values": [[3, "dealing-with-nan-values"]], "Calculating Power Spectra": [[3, "calculating-power-spectra"], [46, "calculating-power-spectra"]], "Fitting Power Spectrum Models": [[3, "fitting-power-spectrum-models"]], "Plotting Topographies": [[3, "plotting-topographies"]], "Plotting Periodic Topographies": [[3, "plotting-periodic-topographies"]], "Plotting Aperiodic Topographies": [[3, "plotting-aperiodic-topographies"]], "Conclusion": [[3, "conclusion"], [33, "conclusion"], [39, "conclusion"], [40, "conclusion"], [41, "conclusion"], [45, "conclusion"], [46, "conclusion"], [47, "conclusion"], [48, "conclusion"], [49, "conclusion"], [50, "conclusion"], [51, "conclusion"], [52, "conclusion"], [53, "conclusion"]], "Computation times": [[4, "computation-times"], [11, "computation-times"], [17, "computation-times"], [22, "computation-times"], [25, "computation-times"], [26, "computation-times"], [31, "computation-times"], [36, "computation-times"], [42, "computation-times"], [43, "computation-times"], [55, "computation-times"], [133, "computation-times"]], "Examples": [[5, "examples"]], "Contents": [[5, "contents"], [37, "contents"]], "Processing": [[5, "processing"], [23, "processing"]], "Managing Objects": [[5, "managing-objects"], [6, "managing-objects"]], "Models & Parameters": [[5, "models-parameters"], [12, "models-parameters"]], "Plotting": [[5, "plotting"], [18, "plotting"]], "Simulations": [[5, "simulations"], [27, "simulations"]], "Exporting Model Results": [[7, "exporting-model-results"]], "Exporting Results": [[7, "exporting-results"]], "Defining Oscillation Bands": [[7, "defining-oscillation-bands"], [51, "defining-oscillation-bands"]], "Using Band Definitions": [[7, "using-band-definitions"]], "Example on Group Object": [[7, "example-on-group-object"]], "Failed Model Fits": [[8, "failed-model-fits"]], "Model Fit Failures": [[8, "model-fit-failures"]], "Inducing Model Fit Failures": [[8, "inducing-model-fit-failures"]], "Debug Mode": [[8, "debug-mode"]], "Debugging Model Fit Errors": [[8, "debugging-model-fit-errors"]], "Fitting Power Spectrum Models Across 3D Arrays": [[9, "fitting-power-spectrum-models-across-3d-arrays"]], "Running Across 3D": [[9, "running-across-3d"]], "Organizing Data into 3D Objects": [[9, "organizing-data-into-3d-objects"]], "Example Set-Up": [[9, "example-set-up"]], "Fitting Multiple Power Spectra": [[9, "fitting-multiple-power-spectra"]], "fit_models_3d": [[9, "fit-models-3d"]], "Analyzing Model Objects": [[9, "analyzing-model-objects"]], "Managing Model Objects": [[9, "managing-model-objects"]], "Manipulating Objects": [[10, "manipulating-objects"]], "Combining Model Objects": [[10, "combining-model-objects"]], "Note on Manipulating Model Objects": [[10, "note-on-manipulating-model-objects"]], "Sub-Select from SpectralGroupModel": [[10, "sub-select-from-spectralgroupmodel"]], "Dropping Fits from SpectralGroupModel": [[10, "dropping-fits-from-spectralgroupmodel"]], "Note on Dropped or Failed Fits": [[10, "note-on-dropped-or-failed-fits"]], "Note on Selecting from SpectralModel Objects": [[10, "note-on-selecting-from-spectralmodel-objects"]], "Averaging Across Model Fits": [[10, "averaging-across-model-fits"]], "Aperiodic Parameters": [[13, "aperiodic-parameters"]], "\u2018Fixed\u2019 Model": [[13, "fixed-model"]], "Comparing Offset & Exponent": [[13, "comparing-offset-exponent"]], "Knee Model": [[13, "knee-model"]], "Knee Frequency": [[13, "knee-frequency"]], "Time Constant": [[13, "time-constant"]], "Exploring Data Components": [[14, "exploring-data-components"]], "Data & Model Components": [[14, "data-model-components"]], "Full Data & Model Components": [[14, "full-data-model-components"]], "Isolated Components": [[14, "isolated-components"]], "Aperiodic Component": [[14, "aperiodic-component"], [45, "aperiodic-component"]], "Periodic Component": [[14, "periodic-component"], [45, "periodic-component"]], "Full Model Fit": [[14, "full-model-fit"]], "Linear vs Log Spacing": [[14, "linear-vs-log-spacing"]], "Aperiodic Components in Linear Space": [[14, "aperiodic-components-in-linear-space"]], "Peak Component in Linear Space": [[14, "peak-component-in-linear-space"]], "Linear Space Additive Model": [[14, "linear-space-additive-model"]], "Notes on Analyzing Data & Model Components": [[14, "notes-on-analyzing-data-model-components"]], "Frequency-by-Frequency Errors": [[15, "frequency-by-frequency-errors"]], "Frequency-by-Frequency Error": [[15, "frequency-by-frequency-error"]], "Checking the Error of Individual Model Fits": [[15, "checking-the-error-of-individual-model-fits"]], "Checking the Error Across Groups of Model Fits": [[15, "checking-the-error-across-groups-of-model-fits"]], "Frequency-by-Frequency Errors When There is a Problem": [[15, "frequency-by-frequency-errors-when-there-is-a-problem"]], "Periodic Parameters": [[16, "periodic-parameters"]], "Gaussian Peak Model": [[16, "gaussian-peak-model"]], "Overlapping Peaks": [[16, "overlapping-peaks"]], "Plot Model Components": [[19, "plot-model-components"]], "Experiment Set Up & Simulate Data": [[19, "experiment-set-up-simulate-data"]], "Fit Power Spectrum Models": [[19, "fit-power-spectrum-models"]], "Plotting Parameters & Components": [[19, "plotting-parameters-components"]], "Periodic Components": [[19, "periodic-components"]], "Plotting Peak Parameters": [[19, "plotting-peak-parameters"]], "Plotting Peak Fits": [[19, "plotting-peak-fits"]], "Aperiodic Components": [[19, "aperiodic-components"]], "Plotting Aperiodic Parameters": [[19, "plotting-aperiodic-parameters"]], "Plotting Aperiodic Fits": [[19, "plotting-aperiodic-fits"]], "Plot Power Spectrum Models": [[20, "plot-power-spectrum-models"]], "Plotting from model objects": [[20, "plotting-from-model-objects"]], "Plotting Aperiodic Components": [[20, "plotting-aperiodic-components"]], "Plotting Periodic Components": [[20, "plotting-periodic-components"]], "Other Plotting Options": [[20, "other-plotting-options"]], "Plotting Power Spectra": [[21, "plotting-power-spectra"], [41, "plotting-power-spectra"]], "Plotting Individual Power Spectra": [[21, "plotting-individual-power-spectra"]], "Plotting Multiple Power Spectra": [[21, "plotting-multiple-power-spectra"]], "Plots With Shaded Regions": [[21, "plots-with-shaded-regions"]], "Put it all together": [[21, "put-it-all-together"]], "Dealing with Line Noise": [[24, "dealing-with-line-noise"]], "Line Noise Peaks": [[24, "line-noise-peaks"]], "Interpolating Line Noise Peaks": [[24, "interpolating-line-noise-peaks"]], "Multiple Interpolation Regions": [[24, "multiple-interpolation-regions"]], "Fitting Line Noise as Peaks": [[24, "fitting-line-noise-as-peaks"]], "The Problem with Bandstop Filtering": [[24, "the-problem-with-bandstop-filtering"]], "Managing Parameters": [[28, "managing-parameters"]], "param_sampler": [[28, "param-sampler"]], "param_iter": [[28, "param-iter"]], "param_jitter": [[28, "param-jitter"]], "Simulating Neural Power Spectra": [[29, "simulating-neural-power-spectra"]], "Creating Simulated Power Spectra": [[29, "creating-simulated-power-spectra"]], "Simulating With Different Parameters": [[29, "simulating-with-different-parameters"]], "Simulating a Group of Power Spectra": [[29, "simulating-a-group-of-power-spectra"], [52, "simulating-a-group-of-power-spectra"]], "Tracking Simulation Parameters": [[29, "tracking-simulation-parameters"]], "Transforming Power Spectra": [[30, "transforming-power-spectra"]], "Rotating Power Spectra": [[30, "rotating-power-spectra"]], "Rotation Related Offset Changes": [[30, "rotation-related-offset-changes"]], "Translating Power Spectra": [[30, "translating-power-spectra"]], "Transforming while Tracking Simulation Parameters": [[30, "transforming-while-tracking-simulation-parameters"]], "Relations Between Power Spectra": [[30, "relations-between-power-spectra"]], "Rotate at the Same Rotation Frequencies": [[30, "rotate-at-the-same-rotation-frequencies"]], "Rotate at Different Rotation Frequencies": [[30, "rotate-at-different-rotation-frequencies"]], "Rotate Different Amounts at Different Frequencies": [[30, "rotate-different-amounts-at-different-frequencies"]], "Concepts": [[32, "concepts"], [37, "concepts"]], "Rhythmicity of Time Series": [[33, "rhythmicity-of-time-series"], [33, "id1"]], "The Fourier Theorem": [[33, "the-fourier-theorem"]], "Frequency Representations of Aperiodic Signals": [[33, "frequency-representations-of-aperiodic-signals"]], "The Dirac Delta": [[33, "the-dirac-delta"]], "Section Conclusions": [[33, "section-conclusions"]], "Colored Noise Signals": [[33, "colored-noise-signals"]], "White Noise": [[33, "white-noise"]], "Pink Noise": [[33, "pink-noise"]], "Section Conclusion": [[33, "section-conclusion"], [33, "id2"], [33, "id3"]], "Frequency Representations of Rhythmic Signals": [[33, "frequency-representations-of-rhythmic-signals"]], "Sinusoidal Signals": [[33, "sinusoidal-signals"]], "Frequency Representations of Complex Signals": [[33, "frequency-representations-of-complex-signals"]], "Combined Aperiodic & Periodic Signals": [[33, "combined-aperiodic-periodic-signals"]], "Finding \u2018Oscillations\u2019 With Filters": [[34, "finding-oscillations-with-filters"]], "Filtering Signals": [[34, "filtering-signals"]], "Simulating Data": [[34, "simulating-data"], [40, "simulating-data"], [41, "simulating-data"]], "Filtering Aperiodic Signals": [[34, "filtering-aperiodic-signals"]], "Observing Changes in Filtered Signals": [[34, "observing-changes-in-filtered-signals"]], "\u2018Oscillations\u2019 as Peaks": [[35, "oscillations-as-peaks"]], "Frequency Specific Power": [[35, "frequency-specific-power"]], "Interim Conclusion": [[35, "interim-conclusion"]], "Harmonic Peaks": [[35, "harmonic-peaks"]], "Motivations": [[37, "motivations"]], "Measurements": [[37, "measurements"], [38, "measurements"]], "Band-by-Band": [[39, "band-by-band"], [39, "id1"]], "Overview": [[39, "overview"], [131, "overview"]], "Settings": [[39, "settings"]], "Helper Functions": [[39, "helper-functions"]], "Flatten the Spectra": [[39, "flatten-the-spectra"], [39, "id2"]], "Compare Spectral Parameters": [[39, "compare-spectral-parameters"], [39, "id3"]], "Periodic & Aperiodic": [[39, "periodic-aperiodic"]], "Band Ratio Measures": [[40, "band-ratio-measures"]], "Introduction": [[40, "introduction"], [45, "introduction"]], "Band Ratios Project": [[40, "band-ratios-project"]], "Calculating Band Ratios": [[40, "calculating-band-ratios"]], "Periodic Impacts on Band Ratio Measures": [[40, "periodic-impacts-on-band-ratio-measures"]], "Aperiodic Impacts on Band Ratio Measures": [[40, "aperiodic-impacts-on-band-ratio-measures"]], "Conflating Periodic & Aperiodic Changes": [[41, "conflating-periodic-aperiodic-changes"]], "Measuring Neural Activity": [[41, "measuring-neural-activity"]], "Comparing Power Spectra": [[41, "comparing-power-spectra"]], "Spectra Without any Oscillations": [[41, "spectra-without-any-oscillations"]], "Tutorial": [[44, "tutorial"]], "01: Model Description": [[45, "model-description"]], "Example Power Spectra and Models": [[45, "example-power-spectra-and-models"]], "Conceptual Overview": [[45, "conceptual-overview"]], "Visualizing Power Spectrum Models": [[45, "visualizing-power-spectrum-models"]], "Mathematical Description of Overall Model": [[45, "mathematical-description-of-overall-model"]], "Mathematical Description of the Periodic Component": [[45, "mathematical-description-of-the-periodic-component"]], "Mathematical Description of the Aperiodic Component": [[45, "mathematical-description-of-the-aperiodic-component"]], "A Note on Logging": [[45, "a-note-on-logging"]], "Relating Exponents to Power Spectrum Slope": [[45, "relating-exponents-to-power-spectrum-slope"]], "Fitting Knees": [[45, "fitting-knees"]], "02: Fitting Power Spectrum Models": [[46, "fitting-power-spectrum-models"]], "Model Object": [[46, "model-object"]], "Fitting an Example Power Spectrum": [[46, "fitting-an-example-power-spectrum"]], "Fitting Models with \u2018Report\u2019": [[46, "fitting-models-with-report"]], "Model Parameters": [[46, "model-parameters"]], "Selecting Parameters": [[46, "selecting-parameters"]], "Notes on Interpreting Peak Parameters": [[46, "notes-on-interpreting-peak-parameters"]], "FitResults": [[46, "fitresults"]], "03: Fitting Algorithm": [[47, "fitting-algorithm"]], "Algorithmic Description": [[47, "algorithmic-description"]], "Step 1: Initial Aperiodic Fit": [[47, "step-1-initial-aperiodic-fit"]], "Step 2: Flatten the Spectrum": [[47, "step-2-flatten-the-spectrum"]], "Step 3: Detect Peaks": [[47, "step-3-detect-peaks"]], "Step 4: Create Full Peak Fit": [[47, "step-4-create-full-peak-fit"]], "Step 5: Create a Peak-Removed Spectrum": [[47, "step-5-create-a-peak-removed-spectrum"]], "Step 6: Re-fit the Aperiodic Component": [[47, "step-6-re-fit-the-aperiodic-component"]], "Step 7: Combine the Full Model Fit": [[47, "step-7-combine-the-full-model-fit"]], "Addendum: Data & Model Component Attributes": [[47, "addendum-data-model-component-attributes"]], "04: Exploring the model object": [[48, "exploring-the-model-object"]], "Description of methods and attributes": [[48, "description-of-methods-and-attributes"]], "1) Settings (attributes)": [[48, "settings-attributes"]], "Controlling Peak Fits": [[48, "controlling-peak-fits"]], "Peak Search Stopping Criteria": [[48, "peak-search-stopping-criteria"]], "Aperiodic Mode": [[48, "aperiodic-mode"]], "Verbosity": [[48, "verbosity"]], "Changing Settings": [[48, "changing-settings"]], "2) Data (attributes)": [[48, "data-attributes"]], "3) Results (attributes)": [[48, "results-attributes"]], "4) Methods": [[48, "methods"]], "Saving Data & Results": [[48, "saving-data-results"]], "Creating Reports": [[48, "creating-reports"]], "05: Aperiodic Component Fitting": [[49, "aperiodic-component-fitting"]], "Aperiodic Fitting Approaches": [[49, "aperiodic-fitting-approaches"]], "Fitting with an Aperiodic \u2018Knee\u2019": [[49, "fitting-with-an-aperiodic-knee"]], "A note on interpreting the \u2018knee\u2019 parameter": [[49, "a-note-on-interpreting-the-knee-parameter"]], "Example: Aperiodic Fitting Gone Wrong": [[49, "example-aperiodic-fitting-gone-wrong"]], "Choosing an Aperiodic Fitting Procedure": [[49, "choosing-an-aperiodic-fitting-procedure"]], "06: Fitting group of spectra": [[50, "fitting-group-of-spectra"]], "Fitting Multiple Spectra": [[50, "fitting-multiple-spectra"]], "SpectralGroupModel": [[50, "spectralgroupmodel"]], "Group Results": [[50, "group-results"]], "get_params": [[50, "get-params"]], "Saving & Loading Group Objects": [[50, "saving-loading-group-objects"]], "Parallel Support": [[50, "parallel-support"]], "Progress Bar": [[50, "progress-bar"]], "Extracting Individual Fits": [[50, "extracting-individual-fits"]], "06: Fitting Models over Time": [[51, "fitting-models-over-time"]], "Parameterizing Spectrograms": [[51, "parameterizing-spectrograms"]], "Fitting Spectrograms": [[51, "fitting-spectrograms"]], "SpectralTimeModel": [[51, "spectraltimemodel"]], "Parameterizing Repeated Events": [[51, "parameterizing-repeated-events"]], "SpectralTimeEventModel": [[51, "spectraltimeeventmodel"]], "07: Tuning & Troubleshooting": [[52, "tuning-troubleshooting"]], "Algorithm Settings": [[52, "algorithm-settings"]], "Tuning the Algorithm": [[52, "tuning-the-algorithm"]], "Interpreting Model Fit Quality Measures": [[52, "interpreting-model-fit-quality-measures"]], "Reducing Overfitting": [[52, "reducing-overfitting"]], "Simulating Power Spectra": [[52, "simulating-power-spectra"]], "Power Spectra with No Peaks": [[52, "power-spectra-with-no-peaks"]], "Reducing Underfitting": [[52, "reducing-underfitting"]], "Checking Fits Across a Group": [[52, "checking-fits-across-a-group"]], "Reporting Bad Fits": [[52, "reporting-bad-fits"]], "08: Further Analysis": [[53, "further-analysis"]], "Exploring Power Spectrum Model Results": [[53, "exploring-power-spectrum-model-results"]], "Load and Fit Example Data": [[53, "load-and-fit-example-data"]], "Simulate and Fit Group Data": [[53, "simulate-and-fit-group-data"]], "Analysis Utilities": [[53, "analysis-utilities"]], "Analyzing Periodic Components": [[53, "analyzing-periodic-components"]], "Extracting peaks from SpectralModel Objects": [[53, "extracting-peaks-from-spectralmodel-objects"]], "Extracting peaks from SpectralGroupModel Objects": [[53, "extracting-peaks-from-spectralgroupmodel-objects"]], "Customizing Peak Extraction": [[53, "customizing-peak-extraction"]], "A Note on Frequency Ranges": [[53, "a-note-on-frequency-ranges"]], "Analyzing the Aperiodic Component": [[53, "analyzing-the-aperiodic-component"]], "Example Analyses": [[53, "example-analyses"]], "09: Reporting & Referencing": [[54, "reporting-referencing"]], "Checking Module Version": [[54, "checking-module-version"]], "Getting Model Reporting Information": [[54, "getting-model-reporting-information"]], "Additional Examples": [[54, "additional-examples"]], "Other Model Objects": [[54, "other-model-objects"]], "Code Changelog": [[56, "code-changelog"]], "2.0.0 (in development)": [[56, "in-development"]], "Key Updates": [[56, "key-updates"]], "Relationship to fooof": [[56, "relationship-to-fooof"]], "Naming Updates": [[56, "naming-updates"], [56, "id4"]], "1.1.0": [[56, "id2"]], "1.0.0": [[56, "id3"]], "Code Organization": [[56, "code-organization"]], "Code Updates": [[56, "code-updates"]], "Documentation Updates": [[56, "documentation-updates"]], "A Note on Previously Saved Data": [[56, "a-note-on-previously-saved-data"]], "0.1.X": [[56, "x"]], "Frequently Asked Questions": [[58, "frequently-asked-questions"]], "What is spectral parameterization?": [[58, "what-is-spectral-parameterization"]], "What is meant by \u2018aperiodic\u2019 activity?": [[58, "what-is-meant-by-aperiodic-activity"]], "What is meant by \u2018periodic\u2019 activity?": [[58, "what-is-meant-by-periodic-activity"]], "Why should I parameterize power spectra?": [[58, "why-should-i-parameterize-power-spectra"]], "Why is it important to measure aperiodic activity?": [[58, "why-is-it-important-to-measure-aperiodic-activity"]], "Why call it \u2018aperiodic\u2019? Why not call it \u20181/f\u2019 or \u2018noise\u2019, etc?": [[58, "why-call-it-aperiodic-why-not-call-it-1-f-or-noise-etc"]], "Why are spectral peak used as evidence of periodic activity?": [[58, "why-are-spectral-peak-used-as-evidence-of-periodic-activity"]], "What if there is no peak? Is there no periodic activity?": [[58, "what-if-there-is-no-peak-is-there-no-periodic-activity"]], "How should peaks be interpreted? Are they equivalent to oscillations?": [[58, "how-should-peaks-be-interpreted-are-they-equivalent-to-oscillations"]], "Why is parameterizing neural power spectra different from other methods?": [[58, "why-is-parameterizing-neural-power-spectra-different-from-other-methods"]], "What data modalities can be used for parameterizing neural power spectra?": [[58, "what-data-modalities-can-be-used-for-parameterizing-neural-power-spectra"]], "Are there settings for the fitting algorithm?": [[58, "are-there-settings-for-the-fitting-algorithm"]], "How should algorithm settings be chosen?": [[58, "how-should-algorithm-settings-be-chosen"]], "What frequency range should the model be fit on?": [[58, "what-frequency-range-should-the-model-be-fit-on"]], "If I am interested in a particular oscillation band, should I fit a small range?": [[58, "if-i-am-interested-in-a-particular-oscillation-band-should-i-fit-a-small-range"]], "What does the \u2018aperiodic\u2019 component of the signal reflect?": [[58, "what-does-the-aperiodic-component-of-the-signal-reflect"]], "Does it matter how power spectra are computed?": [[58, "does-it-matter-how-power-spectra-are-computed"]], "Can spectral parameterization be applied to task data?": [[58, "can-spectral-parameterization-be-applied-to-task-data"]], "Is there a time resolved version?": [[58, "is-there-a-time-resolved-version"]], "What is the \u2018FOOOF\u2019 name?": [[58, "what-is-the-fooof-name"]], "How do I cite this method?": [[58, "how-do-i-cite-this-method"]], "References": [[58, "references"]], "fooof.plts.style.check_style_options": [[59, "fooof-plts-style-check-style-options"]], "fooof.plts.utils.check_ax": [[60, "fooof-plts-utils-check-ax"]], "fooof.plts.utils.recursive_plot": [[61, "fooof-plts-utils-recursive-plot"]], "fooof.plts.utils.save_figure": [[62, "fooof-plts-utils-save-figure"]], "specparam.Bands": [[63, "specparam-bands"]], "Examples using specparam.Bands": [[63, "examples-using-specparam-bands"]], "specparam.SpectralGroupModel": [[64, "specparam-spectralgroupmodel"]], "Examples using specparam.SpectralGroupModel": [[64, "examples-using-specparam-spectralgroupmodel"]], "specparam.SpectralModel": [[65, "specparam-spectralmodel"]], "Examples using specparam.SpectralModel": [[65, "examples-using-specparam-spectralmodel"]], "specparam.SpectralTimeEventModel": [[66, "specparam-spectraltimeeventmodel"]], "Examples using specparam.SpectralTimeEventModel": [[66, "examples-using-specparam-spectraltimeeventmodel"]], "specparam.SpectralTimeModel": [[67, "specparam-spectraltimemodel"]], "Examples using specparam.SpectralTimeModel": [[67, "examples-using-specparam-spectraltimemodel"]], "specparam.analysis.compute_pointwise_error": [[68, "specparam-analysis-compute-pointwise-error"]], "Examples using specparam.analysis.compute_pointwise_error": [[68, "examples-using-specparam-analysis-compute-pointwise-error"]], "specparam.analysis.compute_pointwise_error_group": [[69, "specparam-analysis-compute-pointwise-error-group"]], "Examples using specparam.analysis.compute_pointwise_error_group": [[69, "examples-using-specparam-analysis-compute-pointwise-error-group"]], "specparam.analysis.error.compute_pointwise_error_arr": [[70, "specparam-analysis-error-compute-pointwise-error-arr"]], "specparam.analysis.get_band_peak": [[71, "specparam-analysis-get-band-peak"]], "Examples using specparam.analysis.get_band_peak": [[71, "examples-using-specparam-analysis-get-band-peak"]], "specparam.analysis.get_band_peak_event": [[72, "specparam-analysis-get-band-peak-event"]], "specparam.analysis.get_band_peak_group": [[73, "specparam-analysis-get-band-peak-group"]], "Examples using specparam.analysis.get_band_peak_group": [[73, "examples-using-specparam-analysis-get-band-peak-group"]], "specparam.analysis.periodic.get_band_peak_arr": [[74, "specparam-analysis-periodic-get-band-peak-arr"]], "specparam.analysis.periodic.get_band_peak_group_arr": [[75, "specparam-analysis-periodic-get-band-peak-group-arr"]], "specparam.analysis.periodic.get_highest_peak": [[76, "specparam-analysis-periodic-get-highest-peak"]], "specparam.analysis.periodic.threshold_peaks": [[77, "specparam-analysis-periodic-threshold-peaks"]], "specparam.data.FitResults": [[78, "specparam-data-fitresults"]], "Examples using specparam.data.FitResults": [[78, "examples-using-specparam-data-fitresults"]], "specparam.data.ModelRunModes": [[79, "specparam-data-modelrunmodes"]], "specparam.data.ModelSettings": [[80, "specparam-data-modelsettings"]], "Examples using specparam.data.ModelSettings": [[80, "examples-using-specparam-data-modelsettings"]], "specparam.data.SimParams": [[81, "specparam-data-simparams"]], "Examples using specparam.data.SimParams": [[81, "examples-using-specparam-data-simparams"]], "specparam.data.SpectrumMetaData": [[82, "specparam-data-spectrummetadata"]], "specparam.fit_models_3d": [[83, "specparam-fit-models-3d"]], "Examples using specparam.fit_models_3d": [[83, "examples-using-specparam-fit-models-3d"]], "specparam.objs.average_group": [[84, "specparam-objs-average-group"]], "Examples using specparam.objs.average_group": [[84, "examples-using-specparam-objs-average-group"]], "specparam.objs.average_reconstructions": [[85, "specparam-objs-average-reconstructions"]], "specparam.objs.combine_model_objs": [[86, "specparam-objs-combine-model-objs"]], "Examples using specparam.objs.combine_model_objs": [[86, "examples-using-specparam-objs-combine-model-objs"]], "specparam.objs.compare_model_objs": [[87, "specparam-objs-compare-model-objs"]], "Examples using specparam.objs.compare_model_objs": [[87, "examples-using-specparam-objs-compare-model-objs"]], "specparam.plts.annotate.plot_annotated_model": [[88, "specparam-plts-annotate-plot-annotated-model"]], "Examples using specparam.plts.annotate.plot_annotated_model": [[88, "examples-using-specparam-plts-annotate-plot-annotated-model"]], "specparam.plts.annotate.plot_annotated_peak_search": [[89, "specparam-plts-annotate-plot-annotated-peak-search"]], "Examples using specparam.plts.annotate.plot_annotated_peak_search": [[89, "examples-using-specparam-plts-annotate-plot-annotated-peak-search"]], "specparam.plts.aperiodic.plot_aperiodic_fits": [[90, "specparam-plts-aperiodic-plot-aperiodic-fits"]], "Examples using specparam.plts.aperiodic.plot_aperiodic_fits": [[90, "examples-using-specparam-plts-aperiodic-plot-aperiodic-fits"]], "specparam.plts.aperiodic.plot_aperiodic_params": [[91, "specparam-plts-aperiodic-plot-aperiodic-params"]], "Examples using specparam.plts.aperiodic.plot_aperiodic_params": [[91, "examples-using-specparam-plts-aperiodic-plot-aperiodic-params"]], "specparam.plts.error.plot_spectral_error": [[92, "specparam-plts-error-plot-spectral-error"]], "specparam.plts.event.plot_event_model": [[93, "specparam-plts-event-plot-event-model"]], "specparam.plts.group.plot_group_model": [[94, "specparam-plts-group-plot-group-model"]], "specparam.plts.model.plot_model": [[95, "specparam-plts-model-plot-model"]], "specparam.plts.periodic.plot_peak_fits": [[96, "specparam-plts-periodic-plot-peak-fits"]], "Examples using specparam.plts.periodic.plot_peak_fits": [[96, "examples-using-specparam-plts-periodic-plot-peak-fits"]], "specparam.plts.periodic.plot_peak_params": [[97, "specparam-plts-periodic-plot-peak-params"]], "Examples using specparam.plts.periodic.plot_peak_params": [[97, "examples-using-specparam-plts-periodic-plot-peak-params"]], "specparam.plts.plot_spectra": [[98, "specparam-plts-plot-spectra"]], "Examples using specparam.plts.plot_spectra": [[98, "examples-using-specparam-plts-plot-spectra"]], "specparam.plts.plot_spectrogram": [[99, "specparam-plts-plot-spectrogram"]], "Examples using specparam.plts.plot_spectrogram": [[99, "examples-using-specparam-plts-plot-spectrogram"]], "specparam.plts.spectra.plot_spectra_shading": [[100, "specparam-plts-spectra-plot-spectra-shading"]], "Examples using specparam.plts.spectra.plot_spectra_shading": [[100, "examples-using-specparam-plts-spectra-plot-spectra-shading"]], "specparam.plts.spectra.plot_spectra_yshade": [[101, "specparam-plts-spectra-plot-spectra-yshade"]], "specparam.plts.time.plot_time_model": [[102, "specparam-plts-time-plot-time-model"]], "specparam.sim.params.Stepper": [[103, "specparam-sim-params-stepper"]], "Examples using specparam.sim.params.Stepper": [[103, "examples-using-specparam-sim-params-stepper"]], "specparam.sim.params.param_iter": [[104, "specparam-sim-params-param-iter"]], "Examples using specparam.sim.params.param_iter": [[104, "examples-using-specparam-sim-params-param-iter"]], "specparam.sim.params.param_jitter": [[105, "specparam-sim-params-param-jitter"]], "Examples using specparam.sim.params.param_jitter": [[105, "examples-using-specparam-sim-params-param-jitter"]], "specparam.sim.params.param_sampler": [[106, "specparam-sim-params-param-sampler"]], "Examples using specparam.sim.params.param_sampler": [[106, "examples-using-specparam-sim-params-param-sampler"]], "specparam.sim.params.update_sim_ap_params": [[107, "specparam-sim-params-update-sim-ap-params"]], "specparam.sim.sim_group_power_spectra": [[108, "specparam-sim-sim-group-power-spectra"]], "Examples using specparam.sim.sim_group_power_spectra": [[108, "examples-using-specparam-sim-sim-group-power-spectra"]], "specparam.sim.sim_power_spectrum": [[109, "specparam-sim-sim-power-spectrum"]], "Examples using specparam.sim.sim_power_spectrum": [[109, "examples-using-specparam-sim-sim-power-spectrum"]], "specparam.sim.sim_spectrogram": [[110, "specparam-sim-sim-spectrogram"]], "Examples using specparam.sim.sim_spectrogram": [[110, "examples-using-specparam-sim-sim-spectrogram"]], "specparam.sim.transform.compute_rotation_frequency": [[111, "specparam-sim-transform-compute-rotation-frequency"]], "Examples using specparam.sim.transform.compute_rotation_frequency": [[111, "examples-using-specparam-sim-transform-compute-rotation-frequency"]], "specparam.sim.transform.compute_rotation_offset": [[112, "specparam-sim-transform-compute-rotation-offset"]], "Examples using specparam.sim.transform.compute_rotation_offset": [[112, "examples-using-specparam-sim-transform-compute-rotation-offset"]], "specparam.sim.transform.rotate_sim_spectrum": [[113, "specparam-sim-transform-rotate-sim-spectrum"]], "Examples using specparam.sim.transform.rotate_sim_spectrum": [[113, "examples-using-specparam-sim-transform-rotate-sim-spectrum"]], "specparam.sim.transform.rotate_spectrum": [[114, "specparam-sim-transform-rotate-spectrum"]], "Examples using specparam.sim.transform.rotate_spectrum": [[114, "examples-using-specparam-sim-transform-rotate-spectrum"]], "specparam.sim.transform.translate_sim_spectrum": [[115, "specparam-sim-transform-translate-sim-spectrum"]], "Examples using specparam.sim.transform.translate_sim_spectrum": [[115, "examples-using-specparam-sim-transform-translate-sim-spectrum"]], "specparam.sim.transform.translate_spectrum": [[116, "specparam-sim-transform-translate-spectrum"]], "Examples using specparam.sim.transform.translate_spectrum": [[116, "examples-using-specparam-sim-transform-translate-spectrum"]], "specparam.sim.utils.create_freqs": [[117, "specparam-sim-utils-create-freqs"]], "Examples using specparam.sim.utils.create_freqs": [[117, "examples-using-specparam-sim-utils-create-freqs"]], "specparam.sim.utils.set_random_seed": [[118, "specparam-sim-utils-set-random-seed"]], "Examples using specparam.sim.utils.set_random_seed": [[118, "examples-using-specparam-sim-utils-set-random-seed"]], "specparam.utils.interpolate_spectra": [[119, "specparam-utils-interpolate-spectra"]], "specparam.utils.interpolate_spectrum": [[120, "specparam-utils-interpolate-spectrum"]], "Examples using specparam.utils.interpolate_spectrum": [[120, "examples-using-specparam-utils-interpolate-spectrum"]], "specparam.utils.io.load_event_model": [[121, "specparam-utils-io-load-event-model"]], "specparam.utils.io.load_group_model": [[122, "specparam-utils-io-load-group-model"]], "Examples using specparam.utils.io.load_group_model": [[122, "examples-using-specparam-utils-io-load-group-model"]], "specparam.utils.io.load_model": [[123, "specparam-utils-io-load-model"]], "specparam.utils.io.load_time_model": [[124, "specparam-utils-io-load-time-model"]], "specparam.utils.params.compute_knee_frequency": [[125, "specparam-utils-params-compute-knee-frequency"]], "Examples using specparam.utils.params.compute_knee_frequency": [[125, "examples-using-specparam-utils-params-compute-knee-frequency"]], "specparam.utils.reports.methods_report_info": [[126, "specparam-utils-reports-methods-report-info"]], "Examples using specparam.utils.reports.methods_report_info": [[126, "examples-using-specparam-utils-reports-methods-report-info"]], "specparam.utils.reports.methods_report_text": [[127, "specparam-utils-reports-methods-report-text"]], "Examples using specparam.utils.reports.methods_report_text": [[127, "examples-using-specparam-utils-reports-methods-report-text"]], "specparam.utils.subsample_spectra": [[128, "specparam-utils-subsample-spectra"]], "Examples using specparam.utils.subsample_spectra": [[128, "examples-using-specparam-utils-subsample-spectra"]], "specparam.utils.trim_spectrum": [[129, "specparam-utils-trim-spectrum"]], "Examples using specparam.utils.trim_spectrum": [[129, "examples-using-specparam-utils-trim-spectrum"]], "Glossary": [[130, "glossary"]], "Spectral Parameterization": [[131, "spectral-parameterization"]], "specparam (upcoming version)": [[131, "specparam-upcoming-version"], [131, "id1"]], "fooof (stable version)": [[131, "fooof-stable-version"], [131, "id2"], [131, "id3"]], "Which version should I use?": [[131, "which-version-should-i-use"]], "Documentation": [[131, "documentation"]], "Dependencies": [[131, "dependencies"]], "Installation": [[131, "installation"]], "specparam (test version)": [[131, "specparam-test-version"]], "Other Language Support": [[131, "other-language-support"]], "Matlab": [[131, "matlab"]], "Other Languages": [[131, "other-languages"]], "Reference": [[131, "id4"], [132, "reference"], [132, null]], "Contribute": [[131, "contribute"]], "Quickstart": [[131, "quickstart"]], "Funding": [[131, "funding"]], "Reference and Reporting Information": [[132, "reference-and-reporting-information"]], "Example Applications": [[132, "example-applications"]], "Methods Reporting": [[132, "methods-reporting"]], "Reporting Template & Example": [[132, "reporting-template-example"]], "Methods Report Template": [[132, null]], "Checking module version": [[132, "checking-module-version"]], "Generating Methods Reports": [[132, "generating-methods-reports"]], "Visualizers": [[134, "visualizers"]], "Spectral Rotation": [[134, "spectral-rotation"]]}, "indexentries": {"check_style_options() (in module fooof.plts.style)": [[59, "fooof.plts.style.check_style_options"]], "check_ax() (in module fooof.plts.utils)": [[60, "fooof.plts.utils.check_ax"]], "recursive_plot() (in module fooof.plts.utils)": [[61, "fooof.plts.utils.recursive_plot"]], "save_figure() (in module fooof.plts.utils)": [[62, "fooof.plts.utils.save_figure"]], "bands (class in specparam)": [[63, "specparam.Bands"]], "__init__() (specparam.bands method)": [[63, "specparam.Bands.__init__"]], "add_band() (specparam.bands method)": [[63, "specparam.Bands.add_band"]], "definitions (specparam.bands property)": [[63, "specparam.Bands.definitions"]], "labels (specparam.bands property)": [[63, "specparam.Bands.labels"]], "n_bands (specparam.bands property)": [[63, "specparam.Bands.n_bands"]], "remove_band() (specparam.bands method)": [[63, "specparam.Bands.remove_band"]], "spectralgroupmodel (class in specparam)": [[64, "specparam.SpectralGroupModel"]], "__init__() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.__init__"]], "add_data() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.add_data"]], "add_meta_data() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.add_meta_data"]], "add_results() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.add_results"]], "add_settings() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.add_settings"]], "copy() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.copy"]], "drop() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.drop"]], "fit() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.fit"]], "get_data() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.get_data"]], "get_group() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.get_group"]], "get_meta_data() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.get_meta_data"]], "get_model() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.get_model"]], "get_params() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.get_params"]], "get_results() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.get_results"]], "get_run_modes() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.get_run_modes"]], "get_settings() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.get_settings"]], "has_data (specparam.spectralgroupmodel property)": [[64, "specparam.SpectralGroupModel.has_data"]], "has_model (specparam.spectralgroupmodel property)": [[64, "specparam.SpectralGroupModel.has_model"]], "load() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.load"]], "n_null_ (specparam.spectralgroupmodel property)": [[64, "specparam.SpectralGroupModel.n_null_"]], "n_peaks_ (specparam.spectralgroupmodel property)": [[64, "specparam.SpectralGroupModel.n_peaks_"]], "null_inds_ (specparam.spectralgroupmodel property)": [[64, "specparam.SpectralGroupModel.null_inds_"]], "plot() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.plot"]], "print_results() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.print_results"]], "report() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.report"]], "save() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.save"]], "save_model_report() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.save_model_report"]], "save_report() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.save_report"]], "set_check_modes() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.set_check_modes"]], "set_debug_mode() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.set_debug_mode"]], "set_run_modes() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.set_run_modes"]], "to_df() (specparam.spectralgroupmodel method)": [[64, "specparam.SpectralGroupModel.to_df"]], "spectralmodel (class in specparam)": [[65, "specparam.SpectralModel"]], "__init__() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.__init__"]], "add_data() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.add_data"]], "add_meta_data() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.add_meta_data"]], "add_results() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.add_results"]], "add_settings() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.add_settings"]], "copy() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.copy"]], "fit() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.fit"]], "get_data() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.get_data"]], "get_meta_data() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.get_meta_data"]], "get_model() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.get_model"]], "get_params() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.get_params"]], "get_results() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.get_results"]], "get_run_modes() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.get_run_modes"]], "get_settings() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.get_settings"]], "has_data (specparam.spectralmodel property)": [[65, "specparam.SpectralModel.has_data"]], "has_model (specparam.spectralmodel property)": [[65, "specparam.SpectralModel.has_model"]], "load() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.load"]], "n_peaks_ (specparam.spectralmodel property)": [[65, "specparam.SpectralModel.n_peaks_"]], "plot() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.plot"]], "print_report_issue() (specparam.spectralmodel static method)": [[65, "specparam.SpectralModel.print_report_issue"]], "print_results() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.print_results"]], "print_settings() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.print_settings"]], "report() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.report"]], "save() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.save"]], "save_report() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.save_report"]], "set_check_modes() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.set_check_modes"]], "set_debug_mode() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.set_debug_mode"]], "set_run_modes() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.set_run_modes"]], "to_df() (specparam.spectralmodel method)": [[65, "specparam.SpectralModel.to_df"]], "spectraltimeeventmodel (class in specparam)": [[66, "specparam.SpectralTimeEventModel"]], "__init__() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.__init__"]], "add_data() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.add_data"]], "add_meta_data() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.add_meta_data"]], "add_results() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.add_results"]], "add_settings() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.add_settings"]], "convert_results() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.convert_results"]], "copy() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.copy"]], "drop() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.drop"]], "fit() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.fit"]], "get_data() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.get_data"]], "get_group() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.get_group"]], "get_meta_data() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.get_meta_data"]], "get_model() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.get_model"]], "get_params() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.get_params"]], "get_results() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.get_results"]], "get_run_modes() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.get_run_modes"]], "get_settings() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.get_settings"]], "has_data (specparam.spectraltimeeventmodel property)": [[66, "specparam.SpectralTimeEventModel.has_data"]], "has_model (specparam.spectraltimeeventmodel property)": [[66, "specparam.SpectralTimeEventModel.has_model"]], "load() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.load"]], "n_events (specparam.spectraltimeeventmodel property)": [[66, "specparam.SpectralTimeEventModel.n_events"]], "n_null_ (specparam.spectraltimeeventmodel property)": [[66, "specparam.SpectralTimeEventModel.n_null_"]], "n_peaks_ (specparam.spectraltimeeventmodel property)": [[66, "specparam.SpectralTimeEventModel.n_peaks_"]], "n_time_windows (specparam.spectraltimeeventmodel property)": [[66, "specparam.SpectralTimeEventModel.n_time_windows"]], "null_inds_ (specparam.spectraltimeeventmodel property)": [[66, "specparam.SpectralTimeEventModel.null_inds_"]], "plot() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.plot"]], "print_results() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.print_results"]], "report() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.report"]], "save() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.save"]], "save_model_report() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.save_model_report"]], "save_report() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.save_report"]], "set_check_modes() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.set_check_modes"]], "set_debug_mode() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.set_debug_mode"]], "set_run_modes() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.set_run_modes"]], "spectrogram (specparam.spectraltimeeventmodel property)": [[66, "specparam.SpectralTimeEventModel.spectrogram"]], "to_df() (specparam.spectraltimeeventmodel method)": [[66, "specparam.SpectralTimeEventModel.to_df"]], "spectraltimemodel (class in specparam)": [[67, "specparam.SpectralTimeModel"]], "__init__() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.__init__"]], "add_data() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.add_data"]], "add_meta_data() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.add_meta_data"]], "add_results() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.add_results"]], "add_settings() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.add_settings"]], "convert_results() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.convert_results"]], "copy() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.copy"]], "drop() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.drop"]], "fit() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.fit"]], "get_data() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.get_data"]], "get_group() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.get_group"]], "get_meta_data() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.get_meta_data"]], "get_model() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.get_model"]], "get_params() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.get_params"]], "get_results() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.get_results"]], "get_run_modes() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.get_run_modes"]], "get_settings() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.get_settings"]], "has_data (specparam.spectraltimemodel property)": [[67, "specparam.SpectralTimeModel.has_data"]], "has_model (specparam.spectraltimemodel property)": [[67, "specparam.SpectralTimeModel.has_model"]], "load() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.load"]], "n_null_ (specparam.spectraltimemodel property)": [[67, "specparam.SpectralTimeModel.n_null_"]], "n_peaks_ (specparam.spectraltimemodel property)": [[67, "specparam.SpectralTimeModel.n_peaks_"]], "n_time_windows (specparam.spectraltimemodel property)": [[67, "specparam.SpectralTimeModel.n_time_windows"]], "null_inds_ (specparam.spectraltimemodel property)": [[67, "specparam.SpectralTimeModel.null_inds_"]], "plot() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.plot"]], "print_results() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.print_results"]], "report() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.report"]], "save() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.save"]], "save_report() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.save_report"]], "set_check_modes() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.set_check_modes"]], "set_debug_mode() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.set_debug_mode"]], "set_run_modes() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.set_run_modes"]], "spectrogram (specparam.spectraltimemodel property)": [[67, "specparam.SpectralTimeModel.spectrogram"]], "to_df() (specparam.spectraltimemodel method)": [[67, "specparam.SpectralTimeModel.to_df"]], "compute_pointwise_error() (in module specparam.analysis)": [[68, "specparam.analysis.compute_pointwise_error"]], "compute_pointwise_error_group() (in module specparam.analysis)": [[69, "specparam.analysis.compute_pointwise_error_group"]], "compute_pointwise_error_arr() (in module specparam.analysis.error)": [[70, "specparam.analysis.error.compute_pointwise_error_arr"]], "get_band_peak() (in module specparam.analysis)": [[71, "specparam.analysis.get_band_peak"]], "get_band_peak_event() (in module specparam.analysis)": [[72, "specparam.analysis.get_band_peak_event"]], "get_band_peak_group() (in module specparam.analysis)": [[73, "specparam.analysis.get_band_peak_group"]], "get_band_peak_arr() (in module specparam.analysis.periodic)": [[74, "specparam.analysis.periodic.get_band_peak_arr"]], "get_band_peak_group_arr() (in module specparam.analysis.periodic)": [[75, "specparam.analysis.periodic.get_band_peak_group_arr"]], "get_highest_peak() (in module specparam.analysis.periodic)": [[76, "specparam.analysis.periodic.get_highest_peak"]], "threshold_peaks() (in module specparam.analysis.periodic)": [[77, "specparam.analysis.periodic.threshold_peaks"]], "fitresults (class in specparam.data)": [[78, "specparam.data.FitResults"]], "modelrunmodes (class in specparam.data)": [[79, "specparam.data.ModelRunModes"]], "modelsettings (class in specparam.data)": [[80, "specparam.data.ModelSettings"]], "simparams (class in specparam.data)": [[81, "specparam.data.SimParams"]], "spectrummetadata (class in specparam.data)": [[82, "specparam.data.SpectrumMetaData"]], "fit_models_3d() (in module specparam)": [[83, "specparam.fit_models_3d"]], "average_group() (in module specparam.objs)": [[84, "specparam.objs.average_group"]], "average_reconstructions() (in module specparam.objs)": [[85, "specparam.objs.average_reconstructions"]], "combine_model_objs() (in module specparam.objs)": [[86, "specparam.objs.combine_model_objs"]], "compare_model_objs() (in module specparam.objs)": [[87, "specparam.objs.compare_model_objs"]], "plot_annotated_model() (in module specparam.plts.annotate)": [[88, "specparam.plts.annotate.plot_annotated_model"]], "plot_annotated_peak_search() (in module specparam.plts.annotate)": [[89, "specparam.plts.annotate.plot_annotated_peak_search"]], "plot_aperiodic_fits() (in module specparam.plts.aperiodic)": [[90, "specparam.plts.aperiodic.plot_aperiodic_fits"]], "plot_aperiodic_params() (in module specparam.plts.aperiodic)": [[91, "specparam.plts.aperiodic.plot_aperiodic_params"]], "plot_spectral_error() (in module specparam.plts.error)": [[92, "specparam.plts.error.plot_spectral_error"]], "plot_event_model() (in module specparam.plts.event)": [[93, "specparam.plts.event.plot_event_model"]], "plot_group_model() (in module specparam.plts.group)": [[94, "specparam.plts.group.plot_group_model"]], "plot_model() (in module specparam.plts.model)": [[95, "specparam.plts.model.plot_model"]], "plot_peak_fits() (in module specparam.plts.periodic)": [[96, "specparam.plts.periodic.plot_peak_fits"]], "plot_peak_params() (in module specparam.plts.periodic)": [[97, "specparam.plts.periodic.plot_peak_params"]], "plot_spectra() (in module specparam.plts)": [[98, "specparam.plts.plot_spectra"]], "plot_spectrogram() (in module specparam.plts)": [[99, "specparam.plts.plot_spectrogram"]], "plot_spectra_shading() (in module specparam.plts.spectra)": [[100, "specparam.plts.spectra.plot_spectra_shading"]], "plot_spectra_yshade() (in module specparam.plts.spectra)": [[101, "specparam.plts.spectra.plot_spectra_yshade"]], "plot_time_model() (in module specparam.plts.time)": [[102, "specparam.plts.time.plot_time_model"]], "stepper (class in specparam.sim.params)": [[103, "specparam.sim.params.Stepper"]], "__init__() (specparam.sim.params.stepper method)": [[103, "specparam.sim.params.Stepper.__init__"]], "param_iter() (in module specparam.sim.params)": [[104, "specparam.sim.params.param_iter"]], "param_jitter() (in module specparam.sim.params)": [[105, "specparam.sim.params.param_jitter"]], "param_sampler() (in module specparam.sim.params)": [[106, "specparam.sim.params.param_sampler"]], "update_sim_ap_params() (in module specparam.sim.params)": [[107, "specparam.sim.params.update_sim_ap_params"]], "sim_group_power_spectra() (in module specparam.sim)": [[108, "specparam.sim.sim_group_power_spectra"]], "sim_power_spectrum() (in module specparam.sim)": [[109, "specparam.sim.sim_power_spectrum"]], "sim_spectrogram() (in module specparam.sim)": [[110, "specparam.sim.sim_spectrogram"]], "compute_rotation_frequency() (in module specparam.sim.transform)": [[111, "specparam.sim.transform.compute_rotation_frequency"]], "compute_rotation_offset() (in module specparam.sim.transform)": [[112, "specparam.sim.transform.compute_rotation_offset"]], "rotate_sim_spectrum() (in module specparam.sim.transform)": [[113, "specparam.sim.transform.rotate_sim_spectrum"]], "rotate_spectrum() (in module specparam.sim.transform)": [[114, "specparam.sim.transform.rotate_spectrum"]], "translate_sim_spectrum() (in module specparam.sim.transform)": [[115, "specparam.sim.transform.translate_sim_spectrum"]], "translate_spectrum() (in module specparam.sim.transform)": [[116, "specparam.sim.transform.translate_spectrum"]], "create_freqs() (in module specparam.sim.utils)": [[117, "specparam.sim.utils.create_freqs"]], "set_random_seed() (in module specparam.sim.utils)": [[118, "specparam.sim.utils.set_random_seed"]], "interpolate_spectra() (in module specparam.utils)": [[119, "specparam.utils.interpolate_spectra"]], "interpolate_spectrum() (in module specparam.utils)": [[120, "specparam.utils.interpolate_spectrum"]], "load_event_model() (in module specparam.utils.io)": [[121, "specparam.utils.io.load_event_model"]], "load_group_model() (in module specparam.utils.io)": [[122, "specparam.utils.io.load_group_model"]], "load_model() (in module specparam.utils.io)": [[123, "specparam.utils.io.load_model"]], "load_time_model() (in module specparam.utils.io)": [[124, "specparam.utils.io.load_time_model"]], "compute_knee_frequency() (in module specparam.utils.params)": [[125, "specparam.utils.params.compute_knee_frequency"]], "methods_report_info() (in module specparam.utils.reports)": [[126, "specparam.utils.reports.methods_report_info"]], "methods_report_text() (in module specparam.utils.reports)": [[127, "specparam.utils.reports.methods_report_text"]], "subsample_spectra() (in module specparam.utils)": [[128, "specparam.utils.subsample_spectra"]], "trim_spectrum() (in module specparam.utils)": [[129, "specparam.utils.trim_spectrum"]], "1/f-like": [[130, "term-1-f-like"]], "aperiodic": [[130, "term-Aperiodic"]], "bandwidth (bw)": [[130, "term-Bandwidth-BW"]], "center frequency (cf)": [[130, "term-Center-Frequency-CF"]], "component": [[130, "term-Component"]], "exponent (exp)": [[130, "term-Exponent-EXP"]], "field data": [[130, "term-Field-Data"]], "knee (kne)": [[130, "term-Knee-KNE"]], "model objects": [[130, "term-Model-Objects"]], "offset (off)": [[130, "term-Offset-OFF"]], "one-over f (1/f)": [[130, "term-One-Over-F-1-f"]], "parameters": [[130, "term-Parameters"]], "peaks": [[130, "term-Peaks"]], "periodic": [[130, "term-Periodic"]], "power (pw)": [[130, "term-Power-PW"]], "power spectrum": [[130, "term-Power-Spectrum"]], "power spectrum model": [[130, "term-Power-Spectrum-Model"]], "settings": [[130, "term-Settings"]]}})